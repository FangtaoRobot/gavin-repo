From: =?gb2312?B?0tHTySBXaW5kb3dzIEludGVybmV0IEV4cGxvcmVyIDEwILGjtOY=?=
Subject: Sqoop User Guide (v1.4.4)
Date: Mon, 20 Jul 2015 16:49:39 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0007_01D0C30C.118E32A0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7601.17609

这是 MIME 格式的多方邮件。

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><META content=3D"IE=3D5.0000" =
http-equiv=3D"X-UA-Compatible">

<META http-equiv=3D"Content-Type"=20
content=3D"text/html; charset=3DISO-8859-1"><TITLE>Sqoop User Guide=20
(v1.4.4)</TITLE><LINK =
href=3D"http://sqoop.apache.org/docs/1.4.4/docbook.css" =
rel=3D"stylesheet"=20
type=3D"text/css">
<META name=3D"GENERATOR" content=3D"MSHTML 10.00.9200.17377"></HEAD>
<BODY>
<DIV style=3D"clear: both; margin-bottom: 4px;"></DIV>
<DIV align=3D"center"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/index.html"><IMG=20
alt=3D"Documentation Home" =
src=3D"http://sqoop.apache.org/docs/1.4.4/images/home.png"></A></DIV><SPA=
N=20
class=3D"breadcrumbs">
<DIV class=3D"breadcrumbs"><SPAN class=3D"breadcrumb-node">Sqoop User =
Guide=20
(v1.4.4)</SPAN></DIV></SPAN>
<DIV title=3D"Sqoop User Guide (v1.4.4)" class=3D"article" lang=3D"en">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title"><A name=3D"idp739952"></A>Sqoop User Guide=20
(v1.4.4)</H2></DIV></DIV>
<HR>
</DIV>
<DIV class=3D"toc">
<P><B>Table of Contents</B></P>
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_introduct=
ion">1.=20
  Introduction</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_releases">2.=20
  Supported Releases</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_sqoop_rel=
eases">3.=20
  Sqoop Releases</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_prerequis=
ites">4.=20
  Prerequisites</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_basic_usa=
ge">5.=20
  Basic Usage</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_sqoop_too=
ls">6.=20
  Sqoop Tools</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_com=
mand_aliases">6.1.=20
    Using Command Aliases</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_the_hadoop_installation">6.2.=20
    Controlling the Hadoop Installation</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_gen=
eric_and_specific_arguments">6.3.=20
    Using Generic and Specific Arguments</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_opt=
ions_files_to_pass_arguments">6.4.=20
    Using Options Files to Pass Arguments</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_too=
ls">6.5.=20
    Using Tools</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_import_literal">7.=20
  <CODE class=3D"literal">sqoop-import</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose">=
7.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax">7=
.2.=20
    Syntax</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_connectin=
g_to_a_database_server">7.2.1.=20
      Connecting to a Database Server</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_selecting=
_the_data_to_import">7.2.2.=20
      Selecting the Data to Import</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_free_form=
_query_imports">7.2.3.=20
      Free-form Query Imports</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_parallelism">7.2.4.=20
      Controlling Parallelism</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_the_import_process">7.2.5.=20
      Controlling the Import Process</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_type_mapping">7.2.6.=20
      Controlling type mapping</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_increment=
al_imports">7.2.7.=20
      Incremental Imports</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_file_form=
ats">7.2.8.=20
      File Formats</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_large_obj=
ects">7.2.9.=20
      Large Objects</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hive">7.2.10.=20
      Importing Data Into Hive</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hbase">7.2.11.=20
      Importing Data Into HBase</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_additiona=
l_import_configuration_properties">7.2.12.=20
      Additional Import Configuration =
Properties</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations">7.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_import_all_tables_literal">8.=20
  <CODE class=3D"literal">sqoop-import-all-tables</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_2=
">8.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_2"=
>8.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_2">8.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_export_literal">9.=20
  <CODE class=3D"literal">sqoop-export</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_3=
">9.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_3"=
>9.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_inserts_v=
s_updates">9.3.=20
    Inserts vs. Updates</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_exports_a=
nd_transactions">9.4.=20
    Exports and Transactions</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_failed_ex=
ports">9.5.=20
    Failed Exports</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_3">9.6.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#validation=
">10.=20
  <CODE class=3D"literal">validation</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_4=
">10.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_introduct=
ion_2">10.2.=20
    Introduction</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_4"=
>10.3.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_configura=
tion">10.4.=20
    Configuration</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_limitatio=
ns">10.5.=20
    Limitations</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_4">10.6.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_saved_job=
s">11.=20
  Saved Jobs</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_job_literal">12.=20
  <CODE class=3D"literal">sqoop-job</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_5=
">12.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_5"=
>12.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_saved_job=
s_and_passwords">12.3.=20
    Saved jobs and passwords</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_saved_job=
s_and_incremental_imports">12.4.=20
    Saved jobs and incremental imports</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_metastore_literal">13.=20
  <CODE class=3D"literal">sqoop-metastore</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_6=
">13.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_6"=
>13.2.=20
    Syntax</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_merge_literal">14.=20
  <CODE class=3D"literal">sqoop-merge</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_7=
">14.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_7"=
>14.2.=20
    Syntax</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_codegen_literal">15.=20
  <CODE class=3D"literal">sqoop-codegen</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_8=
">15.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_8"=
>15.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_5">15.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_create_hive_table_literal">16.=20
  <CODE class=3D"literal">sqoop-create-hive-table</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_9=
">16.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_9"=
>16.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_6">16.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_eval_literal">17.=20
  <CODE class=3D"literal">sqoop-eval</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
0">17.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_10=
">17.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_7">17.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_list_databases_literal">18.=20
  <CODE class=3D"literal">sqoop-list-databases</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
1">18.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_11=
">18.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_8">18.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_list_tables_literal">19.=20
  <CODE class=3D"literal">sqoop-list-tables</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
2">19.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_12=
">19.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_9">19.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_help_literal">20.=20
  <CODE class=3D"literal">sqoop-help</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
3">20.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_13=
">20.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_10">20.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_s=
qoop_version_literal">21.=20
  <CODE class=3D"literal">sqoop-version</CODE></A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
4">21.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_14=
">21.2.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_11">21.3.=20
    Example Invocations</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_sqoop_hca=
talog_integration">22.=20
  Sqoop-HCatalog Integration</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_hcatalog_=
background">22.1.=20
    HCatalog Background</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_exposing_=
hcatalog_tables_to_sqoop">22.2.=20
    Exposing HCatalog Tables to Sqoop</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_new_comma=
nd_line_options">22.2.1.=20
      New Command Line Options</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_sqoop_hive_options">22.2.2.=20
      Supported Sqoop Hive Options</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_options">22.2.3.=20
      Unsupported Sqoop Options</A></SPAN></DT>
      <DD>
      <DL>
        <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_hive_import_options">22.2.3.1.=20
        Unsupported Sqoop Hive Import Options</A></SPAN></DT>
        <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_export_and_import_options">22.2.3.2.=20
        Unsupported Sqoop Export and Import =
Options</A></SPAN></DT></DL></DD>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_ignored_s=
qoop_options">22.2.4.=20
      Ignored Sqoop Options</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_automatic=
_table_creation">22.3.=20
    Automatic Table Creation</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_delimited=
_text_formats_and_field_and_line_delimiter_characters">22.4.=20
    Delimited Text Formats and Field and Line Delimiter=20
    Characters</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_hcatalog_=
table_requirements">22.5.=20
    HCatalog Table Requirements</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_support_f=
or_partitioning">22.6.=20
    Support for Partitioning</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_ma=
pping">22.7.=20
    Schema Mapping</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_support_f=
or_hcatalog_data_types">22.8.=20
    Support for HCatalog Data Types</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_providing=
_hive_and_hcatalog_libraries_for_the_sqoop_job">22.9.=20
    Providing Hive and HCatalog Libraries for the Sqoop =
Job</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_examples"=
>22.10.=20
    Examples</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_import">2=
2.11.=20
    Import</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_export">2=
2.12.=20
    Export</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_compatibi=
lity_notes">23.=20
  Compatibility Notes</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_databases">23.1.=20
    Supported Databases</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql">23=
.2.=20
    MySQL</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_zerodatet=
imebehavior">23.2.1.=20
      zeroDateTimeBehavior</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_u=
nsigned_literal_columns">23.2.2.=20
      <CODE class=3D"literal">UNSIGNED</CODE> columns</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_b=
lob_literal_and_literal_clob_literal_columns">23.2.3.=20
      <CODE class=3D"literal">BLOB</CODE> and <CODE =
class=3D"literal">CLOB</CODE>=20
      columns</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode">23.2.4.=20
      Importing views in direct mode</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de_transactions">23.2.5.=20
      Direct-mode Transactions</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_postgresq=
l">23.3.=20
    PostgreSQL</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode_2">23.3.1.=20
      Importing views in direct mode</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle">2=
3.4.=20
    Oracle</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_dates_and=
_times">23.4.1.=20
      Dates and Times</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_de=
finition_in_hive">23.5.=20
    Schema Definition in Hive</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_notes_for=
_specific_connectors">24.=20
  Notes for specific connectors</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_jdb=
c_connector">24.1.=20
    MySQL JDBC Connector</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_upsert_fu=
nctionality">24.1.1.=20
      Upsert functionality</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_microsoft=
_sql_connector">24.2.=20
    Microsoft SQL Connector</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments">24.2.1.=20
      Extra arguments</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport">24.2.2.=20
      Schema support</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_table_hin=
ts">24.2.3.=20
      Table hints</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_postgresq=
l_connector">24.3.=20
    PostgreSQL Connector</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_2">24.3.1.=20
      Extra arguments</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport_2">24.3.2.=20
      Schema support</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_pg_bulklo=
ad_connector">24.4.=20
    pg_bulkload connector</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
5">24.4.1.=20
      Purpose</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_requireme=
nts">24.4.2.=20
      Requirements</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_15=
">24.4.3.=20
      Syntax</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_data_stag=
ing">24.4.4.=20
      Data Staging</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_netezza_c=
onnector">24.5.=20
    Netezza Connector</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_3">24.5.1.=20
      Extra arguments</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de">24.5.2.=20
      Direct Mode</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_null_stri=
ng_handling">24.5.3.=20
      Null string handling</A></SPAN></DT></DL></DD></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_getting_s=
upport">25.=20
  Getting Support</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_troublesh=
ooting">26.=20
  Troubleshooting</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_general_t=
roubleshooting_process">26.1.=20
    General Troubleshooting Process</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_specific_=
troubleshooting_tips">26.2.=20
    Specific Troubleshooting Tips</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_co=
nnection_reset_errors">26.2.1.=20
      Oracle: Connection Reset Errors</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_ca=
se_sensitive_catalog_query_errors">26.2.2.=20
      Oracle: Case-Sensitive Catalog Query Errors</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_con=
nection_failure">26.2.3.=20
      MySQL: Connection Failure</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_or=
a_00933_error_sql_command_not_properly_ended">26.2.4.=20
      Oracle: ORA-00933 error (SQL command not properly =
ended)</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_imp=
ort_of_tinyint_1_from_mysql_behaves_strangely">26.2.5.=20
      MySQL: Import of TINYINT(1) from MySQL behaves=20
    strangely</A></SPAN></DT></DL></DD></DL></DD></DL></DIV>
<PRE class=3D"screen">  Licensed to the Apache Software Foundation (ASF) =
under one=0A=
  or more contributor license agreements.  See the NOTICE file=0A=
  distributed with this work for additional information=0A=
  regarding copyright ownership.  The ASF licenses this file=0A=
  to you under the Apache License, Version 2.0 (the=0A=
  "License"); you may not use this file except in compliance=0A=
  with the License.  You may obtain a copy of the License at=0A=
=0A=
      http://www.apache.org/licenses/LICENSE-2.0=0A=
=0A=
  Unless required by applicable law or agreed to in writing, software=0A=
  distributed under the License is distributed on an "AS IS" BASIS,=0A=
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or =
implied.=0A=
  See the License for the specific language governing permissions and=0A=
  limitations under the License.</PRE>
<DIV title=3D"1.&nbsp;Introduction" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_introduction"></A>1.&nbsp;Introduction</H2></DIV></DIV></DIV>
<P>Sqoop is a tool designed to transfer data between Hadoop and =
relational=20
databases. You can use Sqoop to import data from a relational database=20
management system (RDBMS) such as MySQL or Oracle into the Hadoop =
Distributed=20
File System (HDFS), transform the data in Hadoop MapReduce, and then =
export the=20
data back into an RDBMS.</P>
<P>Sqoop automates most of this process, relying on the database to =
describe the=20
schema for the data to be imported. Sqoop uses MapReduce to import and =
export=20
the data, which provides parallel operation as well as fault =
tolerance.</P>
<P>This document describes how to get started using Sqoop to move data =
between=20
databases and Hadoop and provides reference information for the =
operation of the=20
Sqoop command-line tool suite. This document is intended for:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">System and application programmers </LI>
  <LI class=3D"listitem">System administrators </LI>
  <LI class=3D"listitem">Database administrators </LI>
  <LI class=3D"listitem">Data analysts </LI>
  <LI class=3D"listitem">Data engineers </LI></UL></DIV></DIV>
<DIV title=3D"2.&nbsp;Supported Releases" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_supported_releases"></A>2.&nbsp;Supported =
Releases</H2></DIV></DIV></DIV>
<P>This documentation applies to Sqoop v1.4.4.</P></DIV>
<DIV title=3D"3.&nbsp;Sqoop Releases" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_sqoop_releases"></A>3.&nbsp;Sqoop =
Releases</H2></DIV></DIV></DIV>
<P>Sqoop is an open source software product of the Apache Software=20
Foundation.</P>
<P>Software development for Sqoop occurs at <A class=3D"ulink" =
href=3D"http://sqoop.apache.org/"=20
target=3D"_top">http://sqoop.apache.org/</A> At that site you can =
obtain:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">New releases of Sqoop as well as its most =
recent source=20
  code </LI>
  <LI class=3D"listitem">An issue tracker </LI>
  <LI class=3D"listitem">A wiki that contains Sqoop documentation=20
</LI></UL></DIV></DIV>
<DIV title=3D"4.&nbsp;Prerequisites" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_prerequisites"></A>4.&nbsp;Prerequisites</H2></DIV></DIV></DIV>
<P>The following prerequisite knowledge is required for this =
product:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Basic computer technology and terminology </LI>
  <LI class=3D"listitem">Familiarity with command-line interfaces such =
as <CODE=20
  class=3D"literal">bash</CODE> </LI>
  <LI class=3D"listitem">Relational database management systems </LI>
  <LI class=3D"listitem">Basic familiarity with the purpose and =
operation of=20
  Hadoop </LI></UL></DIV>
<P>Before you can use Sqoop, a release of Hadoop must be installed and
 configured. Sqoop is currently supporting 4 major Hadoop releases - =
0.20, 0.23,=20
1.0 and 2.0.</P>
<P>This document assumes you are using a Linux or Linux-like =
environment. If you=20
are using Windows, you may be able to use cygwin to accomplish most of =
the=20
following tasks. If you are using Mac OS X, you should see few (if any)=20
compatibility errors. Sqoop is predominantly operated and tested on=20
Linux.</P></DIV>
<DIV title=3D"5.&nbsp;Basic Usage" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_basic_usage"></A>5.&nbsp;Basic=20
Usage</H2></DIV></DIV></DIV>
<P>With Sqoop, you can <SPAN class=3D"emphasis"><EM>import</EM></SPAN> =
data from a=20
relational database system into HDFS. The input to the import process is =
a=20
database table. Sqoop will read the table row-by-row into HDFS. The =
output of=20
this import process is a set of files containing a copy of the imported =
table.
 The import process is performed in parallel. For this reason, the =
output will=20
be in multiple files. These files may be delimited text files (for =
example, with=20
commas or tabs separating each field), or binary Avro or SequenceFiles=20
containing serialized record data.</P>
<P>A by-product of the import process is a generated Java class which =
can=20
encapsulate one row of the imported table. This class is used during the =
import=20
process by Sqoop itself. The Java source code for this class is also =
provided to=20
you, for use in subsequent MapReduce processing of the data. This class =
can=20
serialize and deserialize data to and from the SequenceFile format. It =
can also=20
parse the delimited-text form of a record. These abilities allow you to =
quickly
 develop MapReduce applications that use the HDFS-stored records in your =

processing pipeline. You are also free to parse the delimiteds record =
data=20
yourself, using any other tools you prefer.</P>
<P>After manipulating the imported records (for example, with MapReduce =
or Hive)=20
you may have a result data set which you can then <SPAN=20
class=3D"emphasis"><EM>export</EM></SPAN> back to the relational =
database. Sqoop=92s=20
export process will read a set of delimited text files from HDFS in =
parallel,=20
parse them into records, and insert them as new rows in a target =
database table,=20
for consumption by external applications or users.</P>
<P>Sqoop includes some other commands which allow you to inspect the =
database=20
you are working with. For example, you can list the available database =
schemas=20
(with the <CODE class=3D"literal">sqoop-list-databases</CODE> tool) and =
tables
 within a schema (with the <CODE =
class=3D"literal">sqoop-list-tables</CODE> tool).=20
Sqoop also includes a primitive SQL execution shell (the <CODE=20
class=3D"literal">sqoop-eval</CODE> tool).</P>
<P>Most aspects of the import, code generation, and export processes can =
be=20
customized. You can control the specific row range or columns imported. =
You can=20
specify particular delimiters and escape characters for the file-based=20
representation of the data, as well as the file format used.  You can =
also=20
control the class or package names used in generated code. Subsequent =
sections=20
of this document explain how to specify these and other arguments to=20
Sqoop.</P></DIV>
<DIV title=3D"6.&nbsp;Sqoop Tools" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_sqoop_tools"></A>6.&nbsp;Sqoop=20
Tools</H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_com=
mand_aliases">6.1.=20
  Using Command Aliases</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_the_hadoop_installation">6.2.=20
  Controlling the Hadoop Installation</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_gen=
eric_and_specific_arguments">6.3.=20
  Using Generic and Specific Arguments</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_opt=
ions_files_to_pass_arguments">6.4.=20
  Using Options Files to Pass Arguments</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_using_too=
ls">6.5.=20
  Using Tools</A></SPAN></DT></DL></DIV>
<P>Sqoop is a collection of related tools. To use Sqoop, you specify the =
tool=20
you want to use and the arguments that control the tool.</P>
<P>If Sqoop is compiled from its own source, you can run Sqoop without a =
formal
 installation process by running the <CODE =
class=3D"literal">bin/sqoop</CODE>=20
program. Users of a packaged deployment of Sqoop (such as an RPM shipped =
with=20
Apache Bigtop) will see this program installed as <CODE=20
class=3D"literal">/usr/bin/sqoop</CODE>. The remainder of this =
documentation will=20
refer to this program as <CODE class=3D"literal">sqoop</CODE>. For =
example:</P>
<PRE class=3D"screen">$ sqoop tool-name [tool-arguments]</PRE>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>The following examples that begin with a <CODE =
class=3D"literal">$</CODE>=20
      character indicate that the commands must be entered at a terminal =
prompt=20
      (such as <CODE class=3D"literal">bash</CODE>). The <CODE=20
      class=3D"literal">$</CODE> character represents the prompt itself; =
you=20
      should not start these commands by typing a <CODE=20
      class=3D"literal">$</CODE>. You can also enter commands inline in =
the text=20
      of a paragraph; for example, <CODE class=3D"literal">sqoop =
help</CODE>.=20
      These examples do not show a <CODE class=3D"literal">$</CODE> =
prefix, but=20
      you should enter them the same way.  Don=92t confuse the <CODE =
class=3D"literal">$</CODE>=20
      shell prompt in the examples with the <CODE =
class=3D"literal">$</CODE> that=20
      precedes an environment variable name. For example, the string =
literal=20
      <CODE class=3D"literal">$HADOOP_HOME</CODE> includes a "<CODE =
class=3D"literal">$</CODE>".</P></TD></TR></TBODY></TABLE></DIV>
<P>Sqoop ships with a help tool. To display a list of all available =
tools, type=20
the following command:</P>
<PRE class=3D"screen">$ sqoop help=0A=
usage: sqoop COMMAND [ARGS]=0A=
=0A=
Available commands:=0A=
  codegen            Generate code to interact with database records=0A=
  create-hive-table  Import a table definition into Hive=0A=
  eval               Evaluate a SQL statement and display the results=0A=
  export             Export an HDFS directory to a database table=0A=
  help               List available commands=0A=
  import             Import a table from a database to HDFS=0A=
  import-all-tables  Import tables from a database to HDFS=0A=
  list-databases     List available databases on a server=0A=
  list-tables        List available tables in a database=0A=
  version            Display version information=0A=
=0A=
See 'sqoop help COMMAND' for information on a specific command.</PRE>
<P>You can display help for a specific tool by entering: <CODE=20
class=3D"literal">sqoop help (tool-name)</CODE>; for example, <CODE =
class=3D"literal">sqoop=20
help import</CODE>.</P>
<P>You can also add the <CODE class=3D"literal">--help</CODE> argument =
to any=20
command: <CODE class=3D"literal">sqoop import --help</CODE>.</P>
<DIV title=3D"6.1.&nbsp;Using Command Aliases" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_using_command_aliases"></A>6.1.&nbsp;Using Command=20
Aliases</H3></DIV></DIV></DIV>
<P>In addition to typing the <CODE class=3D"literal">sqoop =
(toolname)</CODE>=20
syntax, you can use alias scripts that specify the <CODE=20
class=3D"literal">sqoop-(toolname)</CODE> syntax. For example, the =
scripts <CODE=20
class=3D"literal">sqoop-import</CODE>, <CODE =
class=3D"literal">sqoop-export</CODE>,=20
etc. each select a specific tool.</P></DIV>
<DIV title=3D"6.2.&nbsp;Controlling the Hadoop Installation" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_controlling_the_hadoop_installation"></A>6.2.&nbsp;Controlling =
the Hadoop=20
Installation</H3></DIV></DIV></DIV>
<P>You invoke Sqoop through the program launch capability provided by =
Hadoop.=20
The <CODE class=3D"literal">sqoop</CODE> command-line program is a =
wrapper which=20
runs the <CODE class=3D"literal">bin/hadoop</CODE> script shipped with =
Hadoop. If=20
you have multiple installations of Hadoop present on your machine, you =
can=20
select the Hadoop installation by setting the <CODE=20
class=3D"literal">$HADOOP_COMMON_HOME</CODE> and <CODE=20
class=3D"literal">$HADOOP_MAPRED_HOME</CODE> environment variables.</P>
<P>For example:</P>
<PRE class=3D"screen">$ HADOOP_COMMON_HOME=3D/path/to/some/hadoop \=0A=
  HADOOP_MAPRED_HOME=3D/path/to/some/hadoop-mapreduce \=0A=
  sqoop import --arguments...</PRE>
<P>or:</P>
<PRE class=3D"screen">$ export HADOOP_COMMON_HOME=3D/some/path/to/hadoop=0A=
$ export HADOOP_MAPRED_HOME=3D/some/path/to/hadoop-mapreduce=0A=
$ sqoop import --arguments...</PRE>
<P>If either of these variables are not set, Sqoop will fall back to =
<CODE=20
class=3D"literal">$HADOOP_HOME</CODE>. If it is not set either, Sqoop =
will use the=20
default installation locations for Apache Bigtop, <CODE=20
class=3D"literal">/usr/lib/hadoop</CODE> and <CODE=20
class=3D"literal">/usr/lib/hadoop-mapreduce</CODE>, respectively.</P>
<P>The active Hadoop configuration is loaded from <CODE=20
class=3D"literal">$HADOOP_HOME/conf/</CODE>, unless the <CODE=20
class=3D"literal">$HADOOP_CONF_DIR</CODE> environment variable is =
set.</P></DIV>
<DIV title=3D"6.3.&nbsp;Using Generic and Specific Arguments" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_using_generic_and_specific_arguments"></A>6.3.&nbsp;Using =
Generic and=20
Specific Arguments</H3></DIV></DIV></DIV>
<P>To control the operation of each Sqoop tool, you use generic and =
specific=20
arguments.</P>
<P>For example:</P>
<PRE class=3D"screen">$ sqoop help import=0A=
usage: sqoop import [GENERIC-ARGS] [TOOL-ARGS]=0A=
=0A=
Common arguments:=0A=
   --connect &lt;jdbc-uri&gt;     Specify JDBC connect string=0A=
   --connect-manager &lt;jdbc-uri&gt;     Specify connection manager =
class to use=0A=
   --driver &lt;class-name&gt;    Manually specify JDBC driver class to =
use=0A=
   --hadoop-mapred-home &lt;dir&gt;+      Override $HADOOP_MAPRED_HOME=0A=
   --help                   Print usage instructions=0A=
   --password-file          Set path for file containing authentication =
password=0A=
   -P                       Read password from console=0A=
   --password &lt;password&gt;    Set authentication password=0A=
   --username &lt;username&gt;    Set authentication username=0A=
   --verbose                Print more information while working=0A=
   --hadoop-home &lt;dir&gt;+     Deprecated. Override $HADOOP_HOME=0A=
=0A=
[...]=0A=
=0A=
Generic Hadoop command-line arguments:=0A=
(must preceed any tool-specific arguments)=0A=
Generic options supported are=0A=
-conf &lt;configuration file&gt;     specify an application =
configuration file=0A=
-D &lt;property=3Dvalue&gt;            use value for given property=0A=
-fs &lt;local|namenode:port&gt;      specify a namenode=0A=
-jt &lt;local|jobtracker:port&gt;    specify a job tracker=0A=
-files &lt;comma separated list of files&gt;    specify comma separated =
files to be copied to the map reduce cluster=0A=
-libjars &lt;comma separated list of jars&gt;    specify comma separated =
jar files to include in the classpath.=0A=
-archives &lt;comma separated list of archives&gt;    specify comma =
separated archives to be unarchived on the compute machines.=0A=
=0A=
The general command line syntax is=0A=
bin/hadoop command [genericOptions] [commandOptions]</PRE>
<P>You must supply the generic arguments <CODE =
class=3D"literal">-conf</CODE>,=20
<CODE class=3D"literal">-D</CODE>, and so on after the tool name but =
<SPAN class=3D"strong"><STRONG>before</STRONG></SPAN>=20
any tool-specific arguments (such as <CODE =
class=3D"literal">--connect</CODE>).=20
Note that generic Hadoop arguments are preceeded by a single dash =
character=20
(<CODE class=3D"literal">-</CODE>), whereas tool-specific arguments =
start with two=20
dashes (<CODE class=3D"literal">--</CODE>), unless they are single =
character=20
arguments such as <CODE class=3D"literal">-P</CODE>.</P>
<P>The <CODE class=3D"literal">-conf</CODE>, <CODE =
class=3D"literal">-D</CODE>,=20
<CODE class=3D"literal">-fs</CODE> and <CODE =
class=3D"literal">-jt</CODE> arguments=20
control the configuration and Hadoop server settings. For example, the =
<CODE=20
class=3D"literal">-D mapred.job.name=3D&lt;job_name&gt;</CODE> can be =
used to set=20
the name of the MR job that Sqoop launches, if not specified, the name =
defaults=20
to the jar name for the job - which is derived from the used table =
name.</P>
<P>The <CODE class=3D"literal">-files</CODE>, <CODE=20
class=3D"literal">-libjars</CODE>, and <CODE =
class=3D"literal">-archives</CODE>=20
arguments are not typically used with Sqoop, but they are included as =
part of=20
Hadoop=92s internal argument-parsing system.</P></DIV>
<DIV title=3D"6.4.&nbsp;Using Options Files to Pass Arguments" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_using_options_files_to_pass_arguments"></A>6.4.&nbsp;Using =
Options Files=20
to Pass Arguments</H3></DIV></DIV></DIV>
<P>When using Sqoop, the command line options that do not change from =
invocation=20
to invocation can be put in an options file for convenience. An options =
file is=20
a text file where each line identifies an option in the order that it =
appears=20
otherwise on the command line. Option files allow specifying a single =
option on=20
multiple lines by using the back-slash character at the end of =
intermediate=20
lines. Also supported are comments within option files that begin with =
the hash=20
character. Comments must be specified on a new line and may not be mixed =
with
 option text. All comments and empty lines are ignored when option files =
are=20
expanded. Unless options appear as quoted strings, any leading or =
trailing=20
spaces are ignored. Quoted strings if used must not extend beyond the =
line on=20
which they are specified.</P>
<P>Option files can be specified anywhere in the command line as long as =
the=20
options within them follow the otherwise prescribed rules of options =
ordering.=20
For instance, regardless of where the options are loaded from, they must =
follow=20
the ordering such that generic options appear first, tool specific =
options next,=20
finally followed by options that are intended to be passed to child=20
programs.</P>
<P>To specify an options file, simply create an options file in a =
convenient=20
location and pass it to the command line via <CODE=20
class=3D"literal">--options-file</CODE> argument.</P>
<P>Whenever an options file is specified, it is expanded on the command =
line=20
before the tool is invoked. You can specify more than one option files =
within=20
the same invocation if needed.</P>
<P>For example, the following Sqoop invocation for import can be =
specified=20
alternatively as shown below:</P>
<PRE class=3D"screen">$ sqoop import --connect jdbc:mysql://localhost/db =
--username foo --table TEST=0A=
=0A=
$ sqoop --options-file /users/homer/work/import.txt --table TEST</PRE>
<P>where the options file <CODE=20
class=3D"literal">/users/homer/work/import.txt</CODE> contains the =
following:</P>
<PRE class=3D"screen">import=0A=
--connect=0A=
jdbc:mysql://localhost/db=0A=
--username=0A=
foo</PRE>
<P>The options file can have empty lines and comments for readability =
purposes.
 So the above example would work exactly the same if the options file =
<CODE=20
class=3D"literal">/users/homer/work/import.txt</CODE> contained the =
following:</P>
<PRE class=3D"screen">#=0A=
# Options file for Sqoop import=0A=
#=0A=
=0A=
# Specifies the tool being invoked=0A=
import=0A=
=0A=
# Connect parameter and value=0A=
--connect=0A=
jdbc:mysql://localhost/db=0A=
=0A=
# Username parameter and value=0A=
--username=0A=
foo=0A=
=0A=
#=0A=
# Remaining options should be specified in the command line.=0A=
#</PRE></DIV>
<DIV title=3D"6.5.&nbsp;Using Tools" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A name=3D"_using_tools"></A>6.5.&nbsp;Using=20
Tools</H3></DIV></DIV></DIV>
<P>The following sections will describe each tool=92s operation. The =
tools are=20
listed in the most likely order you will find them =
useful.</P></DIV></DIV>
<DIV title=3D"7.&nbsp;sqoop-import" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_import_literal"></A>7.&nbsp;<CODE=20
class=3D"literal">sqoop-import</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose">=
7.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax">7=
.2.=20
  Syntax</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_connectin=
g_to_a_database_server">7.2.1.=20
    Connecting to a Database Server</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_selecting=
_the_data_to_import">7.2.2.=20
    Selecting the Data to Import</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_free_form=
_query_imports">7.2.3.=20
    Free-form Query Imports</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_parallelism">7.2.4.=20
    Controlling Parallelism</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_the_import_process">7.2.5.=20
    Controlling the Import Process</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_type_mapping">7.2.6.=20
    Controlling type mapping</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_increment=
al_imports">7.2.7.=20
    Incremental Imports</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_file_form=
ats">7.2.8.=20
    File Formats</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_large_obj=
ects">7.2.9.=20
    Large Objects</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hive">7.2.10.=20
    Importing Data Into Hive</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hbase">7.2.11.=20
    Importing Data Into HBase</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_additiona=
l_import_configuration_properties">7.2.12.=20
    Additional Import Configuration Properties</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations">7.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"7.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose"></A>7.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">import</CODE> tool imports an individual =
table from=20
an RDBMS to HDFS. Each row from a table is represented as a separate =
record in=20
HDFS. Records can be stored as text files (one record per line), or in =
binary=20
representation as Avro or SequenceFiles.</P></DIV>
<DIV title=3D"7.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_syntax"></A>7.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_connectin=
g_to_a_database_server">7.2.1.=20
  Connecting to a Database Server</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_selecting=
_the_data_to_import">7.2.2.=20
  Selecting the Data to Import</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_free_form=
_query_imports">7.2.3.=20
  Free-form Query Imports</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_parallelism">7.2.4.=20
  Controlling Parallelism</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_the_import_process">7.2.5.=20
  Controlling the Import Process</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_controlli=
ng_type_mapping">7.2.6.=20
  Controlling type mapping</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_increment=
al_imports">7.2.7.=20
  Incremental Imports</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_file_form=
ats">7.2.8.=20
  File Formats</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_large_obj=
ects">7.2.9.=20
  Large Objects</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hive">7.2.10.=20
  Importing Data Into Hive</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_data_into_hbase">7.2.11.=20
  Importing Data Into HBase</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_additiona=
l_import_configuration_properties">7.2.12.=20
  Additional Import Configuration Properties</A></SPAN></DT></DL></DIV>
<PRE class=3D"screen">$ sqoop import (generic-args) (import-args)=0A=
$ sqoop-import (generic-args) (import-args)</PRE>
<P>While the Hadoop generic arguments must precede any import arguments, =
you can=20
type the import arguments in any order with respect to one another.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>In this document, arguments are grouped into collections =
organized by=20
      function. Some collections are present in several tools (for =
example, the=20
      "common" arguments). An extended description of their =
functionality is=20
      given only on the first presentation in this
 document.</P></TD></TR></TBODY></TABLE></DIV>
<DIV class=3D"table"><A name=3D"idp3446440"></A>
<P class=3D"title"><B>Table&nbsp;1.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV title=3D"7.2.1.&nbsp;Connecting to a Database Server" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_connecting_to_a_database_server"></A>7.2.1.&nbsp;Connecting to =
a Database=20
Server</H4></DIV></DIV></DIV>
<P>Sqoop is designed to import tables from a database into HDFS. To do =
so, you=20
must specify a <SPAN class=3D"emphasis"><EM>connect string</EM></SPAN> =
that=20
describes how to connect to the database. The <SPAN =
class=3D"emphasis"><EM>connect=20
string</EM></SPAN> is similar to a URL, and is communicated to Sqoop =
with the=20
<CODE class=3D"literal">--connect</CODE> argument. This describes the =
server and
 database to connect to; it may also specify the port. For example:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://database.example.com/employees</PRE>
<P>This string will connect to a MySQL database named <CODE=20
class=3D"literal">employees</CODE> on the host <CODE=20
class=3D"literal">database.example.com</CODE>. It=92s important that you =
<SPAN=20
class=3D"strong"><STRONG>do not</STRONG></SPAN> use the URL <CODE=20
class=3D"literal">localhost</CODE> if you intend to use Sqoop with a =
distributed=20
Hadoop cluster. The connect string you supply will be used on =
TaskTracker nodes
 throughout your MapReduce cluster; if you specify the literal name =
<CODE class=3D"literal">localhost</CODE>,=20
each node will connect to a different database (or more likely, no =
database at=20
all). Instead, you should use the full hostname or IP address of the =
database=20
host that can be seen by all your remote nodes.</P>
<P>You might need to authenticate against the database before you can =
access it.=20
You can use the <CODE class=3D"literal">--username</CODE> to supply a =
username to=20
the database. Sqoop provides couple of different ways to supply a =
password,
 secure and non-secure, to the database which is detailed below.</P>
<P title=3D"Secure way of supplying password to the database"><B>Secure =
way of=20
supplying password to the database.&nbsp;</B>You should save the =
password in a=20
file on the users home directory with 400 permissions and specify the =
path to=20
that file using the <SPAN class=3D"strong"><STRONG><CODE=20
class=3D"literal">--password-file</CODE></STRONG></SPAN> argument, and =
is the=20
preferred method of entering credentials. Sqoop will then read the =
password from=20
the file and pass it to the MapReduce cluster using secure means with =
out=20
exposing the password in the job configuration. The file containing the =
password=20
can either be on the Local FS or HDFS. For example:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://database.example.com/employees \=0A=
    --username venkatesh --passwordFile ${user.home}/.password</PRE>
<P>Another way of supplying passwords is using the <CODE=20
class=3D"literal">-P</CODE> argument which will read a password from a =
console=20
prompt.</P>
<DIV title=3D"Warning" class=3D"warning" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Warning">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Warning]"=20
      =
src=3D"http://sqoop.apache.org/docs/1.4.4/images/warning.png"></TD>
    <TH align=3D"left">Warning</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>The <CODE class=3D"literal">--password</CODE> parameter is =
insecure, as=20
      other users may be able to read your password from the =
command-line=20
      arguments via the output of programs such as <CODE=20
      class=3D"literal">ps</CODE>. The <SPAN =
class=3D"strong"><STRONG><CODE =
class=3D"literal">-P</CODE></STRONG></SPAN>=20
      argument is the preferred method over using the <CODE=20
      class=3D"literal">--password</CODE> argument. Credentials may =
still be
       transferred between nodes of the MapReduce cluster using insecure =
means.
       For example:</P></TD></TR></TBODY></TABLE></DIV>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://database.example.com/employees \=0A=
    --username aaron --password 12345</PRE>
<P>Sqoop automatically supports several databases, including MySQL.  =
Connect
 strings beginning with <CODE class=3D"literal">jdbc:mysql://</CODE> are =
handled=20
automatically in Sqoop.  (A full list of databases with built-in support =
is=20
provided in the "Supported Databases" section. For some, you may need to =
install=20
the JDBC driver yourself.)</P>
<P>You can use Sqoop with any other JDBC-compliant database. First, =
download the=20
appropriate JDBC driver for the type of database you want to import, and =
install=20
the .jar file in the <CODE class=3D"literal">$SQOOP_HOME/lib</CODE> =
directory on=20
your client machine. (This will be <CODE=20
class=3D"literal">/usr/lib/sqoop/lib</CODE> if you installed from an RPM =
or Debian=20
package.) Each driver <CODE class=3D"literal">.jar</CODE> file also has =
a specific=20
driver class which defines the entry-point to the driver. For example, =
MySQL=92s=20
Connector/J library has a driver class of <CODE=20
class=3D"literal">com.mysql.jdbc.Driver</CODE>. Refer to your database
 vendor-specific documentation to determine the main driver class. This =
class=20
must be provided as an argument to Sqoop with <CODE=20
class=3D"literal">--driver</CODE>.</P>
<P>For example, to connect to a SQLServer database, first download the =
driver=20
from microsoft.com and install it in your Sqoop lib path.</P>
<P>Then run Sqoop. For example:</P>
<PRE class=3D"screen">$ sqoop import --driver =
com.microsoft.jdbc.sqlserver.SQLServerDriver \=0A=
    --connect &lt;connect-string&gt; ...</PRE>
<P>When connecting to a database using JDBC, you can optionally specify =
extra
 JDBC parameters via a property file using the option <CODE=20
class=3D"literal">--connection-param-file</CODE>. The contents of this =
file are=20
parsed as standard Java properties and passed into the driver while =
creating a=20
connection.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>The parameters specified via the optional property file are =
only
       applicable to JDBC connections. Any fastpath connectors that use=20
      connections other than JDBC will ignore these=20
parameters.</P></TD></TR></TBODY></TABLE></DIV>
<DIV class=3D"table"><A name=3D"idp3478592"></A>
<P class=3D"title"><B>Table&nbsp;2.&nbsp;Validation arguments <A =
title=3D"10.&nbsp;validation"=20
class=3D"link" =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#validation=
">More=20
Details</A></B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Validation arguments More Details">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--validate</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Enable validation of data copied,                               =
       =20
          supports single table copy only.  <CODE =
class=3D"literal">--validator=20
      &lt;class-name&gt;</CODE>               Specify validator class to =
use.   =20
     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--validation-threshold &lt;class-name&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify validation threshold class                              =
       =20
           to use.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         +--validation-failurehandler &lt;class-name     </TD>
    <TD align=3D"left">    &gt;+ Specify validation failure              =
       =20
                           handler class to use.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3491496"></A>
<P class=3D"title"><B>Table&nbsp;3.&nbsp;Import control =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Import control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--append</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Append data to an existing dataset                              =
    in=20
      HDFS     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-avrodatafile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data to Avro Data Files     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-sequencefile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data to SequenceFiles     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-textfile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data as plain text (default)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--boundary-query &lt;statement&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Boundary query to use for creating splits     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--columns &lt;col,col,col=85&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">Columns=20
      to import from table     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--delete-target-dir</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Delete the import target directory                              =
    if=20
      it exists     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use direct import fast path     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct-split-size &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Split the input stream every <SPAN =
class=3D"emphasis"><EM>n</EM></SPAN>=20
      bytes                                  when importing in direct =
mode    =20
    </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fetch-size &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Number of entries to read from database                         =
       =20
       at once.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--inline-lob-limit &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set the maximum size for an inline LOB     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-m,--num-mappers &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use <SPAN class=3D"emphasis"><EM>n</EM></SPAN> map tasks to =
import in=20
      parallel     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-e,--query &lt;statement&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Import the results of <SPAN class=3D"emphasis"><EM><CODE=20
      class=3D"literal">statement</CODE></EM></SPAN>.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--split-by &lt;column-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Column of the table used to split work                          =
       =20
      units     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Table to read     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--target-dir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         HDFS destination dir     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--warehouse-dir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         HDFS parent for table destination     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--where &lt;where clause&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         WHERE clause to use during import     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-z,--compress</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Enable compression     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--compression-codec &lt;c&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use Hadoop codec (default gzip)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--null-string &lt;null-string&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be written for a null                             =
    =20
      value for string columns     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--null-non-string &lt;null-string&gt;</CODE>     =
</TD>
    <TD align=3D"left">    The string to be written for a null           =
       =20
                     value for non-string columns    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>The <CODE class=3D"literal">--null-string</CODE> and <CODE=20
class=3D"literal">--null-non-string</CODE> arguments are optional.\ If =
not=20
specified, then the string "null" will be used.</P></DIV>
<DIV title=3D"7.2.2.&nbsp;Selecting the Data to Import" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_selecting_the_data_to_import"></A>7.2.2.&nbsp;Selecting the =
Data to=20
Import</H4></DIV></DIV></DIV>
<P>Sqoop typically imports data in a table-centric fashion. Use the =
<CODE class=3D"literal">--table</CODE>=20
argument to select the table to import. For example, <CODE=20
class=3D"literal">--table employees</CODE>. This argument can also =
identify a=20
<CODE class=3D"literal">VIEW</CODE> or other table-like entity in a =
database.</P>
<P>By default, all columns within a table are selected for import. =
Imported data=20
is written to HDFS in its "natural order;" that is, a table containing =
columns=20
A, B, and C result in an import of data such as:</P>
<PRE class=3D"screen">A1,B1,C1=0A=
A2,B2,C2=0A=
...</PRE>
<P>You can select a subset of columns and control their ordering by =
using the=20
<CODE class=3D"literal">--columns</CODE> argument. This should include a =

comma-delimited list of columns to import. For example: <CODE=20
class=3D"literal">--columns "name,employee_id,jobtitle"</CODE>.</P>
<P>You can control which rows are imported by adding a SQL <CODE=20
class=3D"literal">WHERE</CODE> clause to the import statement. By =
default, Sqoop=20
generates statements of the form <CODE class=3D"literal">SELECT =
&lt;column=20
list&gt; FROM &lt;table name&gt;</CODE>. You can append a <CODE=20
class=3D"literal">WHERE</CODE> clause to this with the <CODE=20
class=3D"literal">--where</CODE> argument. For example: <CODE=20
class=3D"literal">--where "id &gt; 400"</CODE>. Only rows where the =
<CODE class=3D"literal">id</CODE>=20
column has a value greater than 400 will be imported.</P>
<P>By default sqoop will use query <CODE class=3D"literal">select=20
min(&lt;split-by&gt;), max(&lt;split-by&gt;) from&lt; table =
name&gt;</CODE> to=20
find out boundaries for creating splits. In some cases this query is not =
the=20
most optimal so you can specify any arbitrary query returning two =
numeric=20
columns using <CODE class=3D"literal">--boundary-query</CODE> =
argument.</P></DIV>
<DIV title=3D"7.2.3.&nbsp;Free-form Query Imports" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_free_form_query_imports"></A>7.2.3.&nbsp;Free-form=20
Query Imports</H4></DIV></DIV></DIV>
<P>Sqoop can also import the result set of an arbitrary SQL query. =
Instead of
 using the <CODE class=3D"literal">--table</CODE>, <CODE=20
class=3D"literal">--columns</CODE> and <CODE =
class=3D"literal">--where</CODE>=20
arguments, you can specify a SQL statement with the <CODE=20
class=3D"literal">--query</CODE> argument.</P>
<P>When importing a free-form query, you must specify a destination =
directory
 with <CODE class=3D"literal">--target-dir</CODE>.</P>
<P>If you want to import the results of a query in parallel, then each =
map task
 will need to execute a copy of the query, with results partitioned by =
bounding
 conditions inferred by Sqoop. Your query must include the token <CODE =
class=3D"literal">$CONDITIONS</CODE>
 which each Sqoop process will replace with a unique condition =
expression. You=20
must also select a splitting column with <CODE=20
class=3D"literal">--split-by</CODE>.</P>
<P>For example:</P>
<PRE class=3D"screen">$ sqoop import \=0A=
  --query 'SELECT a.*, b.* FROM a JOIN b on (a.id =3D=3D b.id) WHERE =
$CONDITIONS' \=0A=
  --split-by a.id --target-dir /user/foo/joinresults</PRE>
<P>Alternately, the query can be executed once and imported serially, by
 specifying a single map task with <CODE class=3D"literal">-m =
1</CODE>:</P>
<PRE class=3D"screen">$ sqoop import \=0A=
  --query 'SELECT a.*, b.* FROM a JOIN b on (a.id =3D=3D b.id) WHERE =
$CONDITIONS' \=0A=
  -m 1 --target-dir /user/foo/joinresults</PRE>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>If you are issuing the query wrapped with double quotes ("), =
you will=20
      have to use <CODE class=3D"literal">\$CONDITIONS</CODE> instead of =
just=20
      <CODE class=3D"literal">$CONDITIONS</CODE> to disallow your shell =
from=20
      treating it as a shell variable. For example, a double quoted =
query may=20
      look like: <CODE class=3D"literal">"SELECT * FROM x WHERE =
a=3D'foo' AND=20
      \$CONDITIONS"</CODE></P></TD></TR></TBODY></TABLE></DIV>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>The facility of using free-form query in the current version of =
Sqoop
       is limited to simple queries where there are no ambiguous =
projections and
       no <CODE class=3D"literal">OR</CODE> conditions in the <CODE =
class=3D"literal">WHERE</CODE>=20
      clause. Use of complex queries such as queries that have =
sub-queries or=20
      joins leading to ambiguous projections can lead to unexpected=20
    results.</P></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV title=3D"7.2.4.&nbsp;Controlling Parallelism" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_controlling_parallelism"></A>7.2.4.&nbsp;Controlling=20
Parallelism</H4></DIV></DIV></DIV>
<P>Sqoop imports data in parallel from most database sources. You can =
specify=20
the number of map tasks (parallel processes) to use to perform the =
import by
 using the <CODE class=3D"literal">-m</CODE> or <CODE=20
class=3D"literal">--num-mappers</CODE> argument. Each of these arguments =
takes an=20
integer value which corresponds to the degree of parallelism to employ. =
By=20
default, four tasks are used. Some databases may see improved =
performance by=20
increasing this value to 8 or 16. Do not increase the degree of =
parallelism=20
greater than that available within your MapReduce cluster; tasks will =
run=20
serially and will likely increase the amount of time required to perform =
the=20
import. Likewise, do not increase the degree of parallism higher than =
that which=20
your database can reasonably support. Connecting 100 concurrent clients =
to your=20
database may increase the load on the database server to a point where=20
performance suffers as a result.</P>
<P>When performing parallel imports, Sqoop needs a criterion by which it =
can=20
split the workload. Sqoop uses a <SPAN class=3D"emphasis"><EM>splitting=20
column</EM></SPAN> to split the workload. By default, Sqoop will =
identify the=20
primary key column (if present) in a table and use it as the splitting =
column.=20
The low and high values for the splitting column are retrieved from the=20
database, and the map tasks operate on evenly-sized components of the =
total
 range. For example, if you had a table with a primary key column of =
<CODE=20
class=3D"literal">id</CODE> whose minimum value was 0 and maximum value =
was 1000,=20
and Sqoop was directed to use 4 tasks, Sqoop would run four processes =
which each
 execute SQL statements of the form <CODE class=3D"literal">SELECT * =
FROM=20
sometable WHERE id&gt; =3D lo AND id &lt; hi</CODE>, with <CODE=20
class=3D"literal">(lo, hi)</CODE> set to (0, 250), (250, 500), (500, =
750), and=20
(750, 1001) in the different tasks.</P>
<P>If the actual values for the primary key are not uniformly =
distributed across=20
its range, then this can result in unbalanced tasks. You should =
explicitly=20
choose a different column with the <CODE =
class=3D"literal">--split-by</CODE>=20
argument. For example, <CODE class=3D"literal">--split-by =
employee_id</CODE>.=20
Sqoop cannot currently split on multi-column indices. If your table has =
no index=20
column, or has a multi-column key, then you must also manually choose a=20
splitting column.</P></DIV>
<DIV title=3D"7.2.5.&nbsp;Controlling the Import Process" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_controlling_the_import_process"></A>7.2.5.&nbsp;Controlling the =
Import=20
Process</H4></DIV></DIV></DIV>
<P>By default, the import process will use JDBC which provides a =
reasonable=20
cross-vendor import channel. Some databases can perform imports in a =
more=20
high-performance fashion by using database-specific data movement tools. =
For=20
example, MySQL provides the <CODE class=3D"literal">mysqldump</CODE> =
tool which=20
can export data from MySQL to other systems very quickly. By supplying =
the <CODE=20
class=3D"literal">--direct</CODE> argument, you are specifying that =
Sqoop should=20
attempt the direct import channel. This channel may be higher =
performance than=20
using JDBC. Currently, direct mode does not support imports of large =
object=20
columns.</P>
<P>When importing from PostgreSQL in conjunction with direct mode, you =
can split=20
the import into separate files after individual files reach a certain =
size. This=20
size limit is controlled with the <CODE=20
class=3D"literal">--direct-split-size</CODE> argument.</P>
<P>By default, Sqoop will import a table named <CODE =
class=3D"literal">foo</CODE>=20
to a directory named <CODE class=3D"literal">foo</CODE> inside your home =
directory=20
in HDFS. For example, if your username is <CODE =
class=3D"literal">someuser</CODE>,=20
then the import tool will write to <CODE=20
class=3D"literal">/user/someuser/foo/(files)</CODE>. You can adjust the =
parent=20
directory of the import with the <CODE =
class=3D"literal">--warehouse-dir</CODE>=20
argument. For example:</P>
<PRE class=3D"screen">$ sqoop import --connnect &lt;connect-str&gt; =
--table foo --warehouse-dir /shared \=0A=
    ...</PRE>
<P>This command would write to a set of files in the <CODE=20
class=3D"literal">/shared/foo/</CODE> directory.</P>
<P>You can also explicitly choose the target directory, like so:</P>
<PRE class=3D"screen">$ sqoop import --connnect &lt;connect-str&gt; =
--table foo --target-dir /dest \=0A=
    ...</PRE>
<P>This will import the files into the <CODE =
class=3D"literal">/dest</CODE>=20
directory. <CODE class=3D"literal">--target-dir</CODE> is incompatible =
with <CODE=20
class=3D"literal">--warehouse-dir</CODE>.</P>
<P>When using direct mode, you can specify additional arguments which =
should be=20
passed to the underlying tool. If the argument <CODE =
class=3D"literal">--</CODE>=20
is given on the command-line, then subsequent arguments are sent =
directly to the=20
underlying tool. For example, the following adjusts the character set =
used by=20
<CODE class=3D"literal">mysqldump</CODE>:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://server.foo.com/db --table bar \=0A=
    --direct -- --default-character-set=3Dlatin1</PRE>
<P>By default, imports go to a new target location. If the destination =
directory
 already exists in HDFS, Sqoop will refuse to import and overwrite that
 directory=92s contents. If you use the <CODE =
class=3D"literal">--append</CODE>=20
argument, Sqoop will import data to a temporary directory and then =
rename the=20
files into the normal target directory in a manner that does not =
conflict with=20
existing filenames in that directory.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>When using the direct mode of import, certain database client =
utilities
       are expected to be present in the shell path of the task process. =
For=20
      MySQL the utilities <CODE class=3D"literal">mysqldump</CODE> and =
<CODE=20
      class=3D"literal">mysqlimport</CODE> are required, whereas for =
PostgreSQL=20
      the utility <CODE class=3D"literal">psql</CODE> is=20
  required.</P></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV title=3D"7.2.6.&nbsp;Controlling type mapping" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_controlling_type_mapping"></A>7.2.6.&nbsp;Controlling type=20
mapping</H4></DIV></DIV></DIV>
<P>Sqoop is preconfigured to map most SQL types to appropriate Java or =
Hive
 representatives. However the default mapping might not be suitable for =
everyone=20
and might be overridden by <CODE =
class=3D"literal">--map-column-java</CODE> (for=20
changing mapping to Java) or <CODE =
class=3D"literal">--map-column-hive</CODE> (for=20
changing Hive mapping).</P>
<DIV class=3D"table"><A name=3D"idp3557376"></A>
<P class=3D"title"><B>Table&nbsp;4.&nbsp;Parameters for overriding =
mapping</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Parameters for overriding mapping">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--map-column-java &lt;mapping&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override mapping from SQL to Java type                          =
       =20
      for configured columns.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-hive &lt;mapping&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Override mapping from SQL to Hive type        =
       =20
                        for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>Sqoop is expecting comma separated list of mapping in form &lt;name =
of=20
column&gt;=3D&lt;new type&gt;. For example:</P>
<PRE class=3D"screen">$ sqoop import ... --map-column-java =
id=3DString,value=3DInteger</PRE>
<P>Sqoop will rise exception in case that some configured mapping will =
not be=20
used.</P></DIV>
<DIV title=3D"7.2.7.&nbsp;Incremental Imports" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_incremental_imports"></A>7.2.7.&nbsp;Incremental=20
Imports</H4></DIV></DIV></DIV>
<P>Sqoop provides an incremental import mode which can be used to =
retrieve only=20
rows newer than some previously-imported set of rows.</P>
<P>The following arguments control incremental imports:</P>
<DIV class=3D"table"><A name=3D"idp3564896"></A>
<P class=3D"title"><B>Table&nbsp;5.&nbsp;Incremental import =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Incremental import arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--check-column (col)</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specifies the column to be examined                             =
  when=20
      determining which rows to import.                              =
(the column=20
      should not be of type                              =20
      CHAR/NCHAR/VARCHAR/VARNCHAR/                             =20
      LONGVARCHAR/LONGNVARCHAR)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--incremental (mode)</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specifies how Sqoop determines which                            =
   rows=20
      are new. Legal values for <CODE class=3D"literal">mode</CODE>      =
         =20
                    include <CODE class=3D"literal">append</CODE> and =
<CODE class=3D"literal">lastmodified</CODE>.=20
          </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--last-value (value)</CODE>     </TD>
    <TD align=3D"left">    Specifies the maximum value of the            =
       =20
                 check column from the previous import.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>Sqoop supports two types of incremental imports: <CODE=20
class=3D"literal">append</CODE> and <CODE =
class=3D"literal">lastmodified</CODE>. You=20
can use the <CODE class=3D"literal">--incremental</CODE> argument to =
specify the=20
type of incremental import to perform.</P>
<P>You should specify <CODE class=3D"literal">append</CODE> mode when =
importing a=20
table where new rows are continually being added with increasing row id =
values.=20
You specify the column containing the row=92s id with <CODE=20
class=3D"literal">--check-column</CODE>. Sqoop imports rows where the =
check column=20
has a value greater than the one specified with <CODE=20
class=3D"literal">--last-value</CODE>.</P>
<P>An alternate table update strategy supported by Sqoop is called <CODE =
class=3D"literal">lastmodified</CODE>
 mode. You should use this when rows of the source table may be updated, =
and
 each such update will set the value of a last-modified column to the =
current
 timestamp.  Rows where the check column holds a timestamp more recent =
than the
 timestamp specified with <CODE class=3D"literal">--last-value</CODE> =
are=20
imported.</P>
<P>At the end of an incremental import, the value which should be =
specified as=20
<CODE class=3D"literal">--last-value</CODE> for a subsequent import is =
printed to=20
the screen. When running a subsequent import, you should specify <CODE =
class=3D"literal">--last-value</CODE>=20
in this way to ensure you import only the new or updated data. This is =
handled=20
automatically by creating an incremental import as a saved job, which is =
the=20
preferred mechanism for performing a recurring incremental import. See =
the=20
section on saved jobs later in this document for more =
information.</P></DIV>
<DIV title=3D"7.2.8.&nbsp;File Formats" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_file_formats"></A>7.2.8.&nbsp;File=20
Formats</H4></DIV></DIV></DIV>
<P>You can import data in one of two file formats: delimited text or
 SequenceFiles.</P>
<P>Delimited text is the default import format. You can also specify it
 explicitly by using the <CODE class=3D"literal">--as-textfile</CODE> =
argument.=20
This argument will write string-based representations of each record to =
the=20
output files, with delimiter characters between individual columns and =
rows.=20
These delimiters may be commas, tabs, or other characters. (The =
delimiters can=20
be selected; see "Output line formatting arguments.") The following is =
the=20
results of an example text-based import:</P>
<PRE class=3D"screen">1,here is a message,2010-05-01=0A=
2,happy new year!,2010-01-01=0A=
3,another message,2009-11-12</PRE>
<P>Delimited text is appropriate for most non-binary data types. It also =
readily=20
supports further manipulation by other tools, such as Hive.</P>
<P>SequenceFiles are a binary format that store individual records in =
custom=20
record-specific data types. These data types are manifested as Java =
classes.=20
Sqoop will automatically generate these data types for you. This format =
supports=20
exact storage of all data in binary representations, and is appropriate =
for=20
storing binary data (for example, <CODE =
class=3D"literal">VARBINARY</CODE>=20
columns), or data that will be principly manipulated by custom MapReduce =

programs (reading from SequenceFiles is higher-performance than reading =
from=20
text files, as records do not need to be parsed).</P>
<P>Avro data files are a compact, efficient binary format that provides
 interoperability with applications written in other programming =
languages. =20
Avro also supports versioning, so that when, e.g., columns are added or =
removed=20
from a table, previously imported data files can be processed along with =
new=20
ones.</P>
<P>By default, data is not compressed. You can compress your data by =
using the=20
deflate (gzip) algorithm with the <CODE class=3D"literal">-z</CODE> or =
<CODE=20
class=3D"literal">--compress</CODE> argument, or specify any Hadoop =
compression=20
codec using the <CODE class=3D"literal">--compression-codec</CODE> =
argument. This=20
applies to SequenceFile, text, and Avro files.</P></DIV>
<DIV title=3D"7.2.9.&nbsp;Large Objects" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_large_objects"></A>7.2.9.&nbsp;Large=20
Objects</H4></DIV></DIV></DIV>
<P>Sqoop handles large objects (<CODE class=3D"literal">BLOB</CODE> and =
<CODE=20
class=3D"literal">CLOB</CODE> columns) in particular ways. If this data =
is truly=20
large, then these columns should not be fully materialized in memory for =

manipulation, as most columns are. Instead, their data is handled in a =
streaming=20
fashion. Large objects can be stored inline with the rest of the data, =
in which=20
case they are fully materialized in memory on every access, or they can =
be=20
stored in a secondary storage file linked to the primary data storage. =
By
 default, large objects less than 16 MB in size are stored inline with =
the rest=20
of the data. At a larger size, they are stored in files in the <CODE =
class=3D"literal">_lobs</CODE>=20
subdirectory of the import target directory. These files are stored in a =

separate format optimized for large record storage, which can accomodate =
records=20
of up to 2^63 bytes each. The size at which lobs spill into separate =
files is=20
controlled by the <CODE class=3D"literal">--inline-lob-limit</CODE> =
argument,=20
which takes a parameter specifying the largest lob size to keep inline, =
in=20
bytes. If you set the inline LOB limit to 0, all large objects will be =
placed in=20
external storage.</P>
<DIV class=3D"table"><A name=3D"idp3588952"></A>
<P class=3D"title"><B>Table&nbsp;6.&nbsp;Output line formatting =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Output line formatting arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--enclosed-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field enclosing                                 =
  =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the escape character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fields-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the field separator character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--lines-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the end-of-line character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--mysql-delimiters</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Uses MySQL=92s default delimiter set:                           =
       =20
      fields: <CODE class=3D"literal">,</CODE>  lines: <CODE=20
      class=3D"literal">\n</CODE>                                    =
escaped-by:=20
      <CODE class=3D"literal">\</CODE>                                   =
=20
      optionally-enclosed-by: <CODE class=3D"literal">'</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--optionally-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Sets a field enclosing character    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>When importing to delimited files, the choice of delimiter is =
important.=20
Delimiters which appear inside string-based fields may cause ambiguous =
parsing=20
of the imported data by subsequent analysis passes. For example, the =
string=20
<CODE class=3D"literal">"Hello, pleased to meet you"</CODE> should not =
be imported=20
with the end-of-field delimiter set to a comma.</P>
<P>Delimiters may be specified as:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">a character (<CODE =
class=3D"literal">--fields-terminated-by=20
  X</CODE>) </LI>
  <LI class=3D"listitem">
  <P class=3D"simpara">an escape character (<CODE=20
  class=3D"literal">--fields-terminated-by \t</CODE>). Supported escape  =

  characters are: </P>
  <DIV class=3D"itemizedlist">
  <UL class=3D"itemizedlist" type=3D"circle">
    <LI class=3D"listitem"><CODE class=3D"literal">\b</CODE> (backspace) =
</LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\n</CODE> (newline) =
</LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\r</CODE> (carriage =
return) </LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\t</CODE> (tab) </LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\"</CODE> =
(double-quote) </LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\\'</CODE> =
(single-quote) </LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\\</CODE> (backslash) =
</LI>
    <LI class=3D"listitem"><CODE class=3D"literal">\0</CODE> (NUL) - =
This will=20
    insert NUL characters between fields or lines,  or will disable=20
    enclosing/escaping if used for one of the <CODE=20
    class=3D"literal">--enclosed-by</CODE>,   <CODE=20
    class=3D"literal">--optionally-enclosed-by</CODE>, or <CODE=20
    class=3D"literal">--escaped-by</CODE> arguments. =
</LI></UL></DIV></LI>
  <LI class=3D"listitem">The octal representation of a UTF-8 =
character=92s code=20
  point. This  should be of the form <CODE =
class=3D"literal">\0ooo</CODE>, where=20
  <SPAN class=3D"emphasis"><EM>ooo</EM></SPAN> is the octal value.  For =
example,=20
  <CODE class=3D"literal">--fields-terminated-by \001</CODE> would yield =
the <CODE=20
  class=3D"literal">^A</CODE> character. </LI>
  <LI class=3D"listitem">The hexadecimal representation of a UTF-8 =
character=92s=20
  code point. This  should be of the form <CODE =
class=3D"literal">\0xhhh</CODE>,=20
  where <SPAN class=3D"emphasis"><EM>hhh</EM></SPAN> is the hex value.  =
For=20
  example, <CODE class=3D"literal">--fields-terminated-by \0x10</CODE> =
would yield=20
  the carriage  return character. </LI></UL></DIV>
<P>The default delimiters are a comma (<CODE class=3D"literal">,</CODE>) =
for=20
fields, a newline (<CODE class=3D"literal">\n</CODE>) for records, no =
quote
 character, and no escape character. Note that this can lead to
 ambiguous/unparsible records if you import database records containing =
commas=20
or newlines in the field data. For unambiguous parsing, both must be =
enabled.=20
For example, via <CODE class=3D"literal">--mysql-delimiters</CODE>.</P>
<P>If unambiguous delimiters cannot be presented, then use <SPAN =
class=3D"emphasis"><EM>enclosing</EM></SPAN>=20
and <SPAN class=3D"emphasis"><EM>escaping</EM></SPAN> characters. The =
combination=20
of (optional) enclosing and escaping characters will allow unambiguous =
parsing=20
of lines. For example, suppose one column of a dataset contained the =
following=20
values:</P>
<PRE class=3D"screen">Some string, with a comma.=0A=
Another "string with quotes"</PRE>
<P>The following arguments would provide delimiters which can be =
unambiguously=20
parsed:</P>
<PRE class=3D"screen">$ sqoop import --fields-terminated-by , =
--escaped-by \\ --enclosed-by '\"' ...</PRE>
<P>(Note that to prevent the shell from mangling the enclosing =
character, we=20
have enclosed that argument itself in single-quotes.)</P>
<P>The result of the above arguments applied to the above dataset would =
be:</P>
<PRE class=3D"screen">"Some string, with a comma.","1","2","3"...=0A=
"Another \"string with quotes\"","4","5","6"...</PRE>
<P>Here the imported strings are shown in the context of additional =
columns=20
(<CODE class=3D"literal">"1","2","3"</CODE>, etc.) to demonstrate the =
full effect=20
of enclosing and escaping. The enclosing character is only strictly =
necessary=20
when delimiter characters appear in the imported text. The enclosing =
character=20
can therefore be specified as optional:</P>
<PRE class=3D"screen">$ sqoop import --optionally-enclosed-by '\"' (the =
rest as above)...</PRE>
<P>Which would result in the following import:</P>
<PRE class=3D"screen">"Some string, with a comma.",1,2,3...=0A=
"Another \"string with quotes\"",4,5,6...</PRE>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>Even though Hive supports escaping characters, it does not =
handle=20
      escaping of new-line character. Also, it does not support the =
notion of=20
      enclosing characters that may include field delimiters in the =
enclosed=20
      string.  It is therefore recommended that you choose unambiguous =
field and=20
      record-terminating delimiters without the help of escaping and =
enclosing=20
      characters when working with Hive; this is due to limitations of =
Hive=92s=20
      input parsing abilities.</P></TD></TR></TBODY></TABLE></DIV>
<P>The <CODE class=3D"literal">--mysql-delimiters</CODE> argument is a =
shorthand=20
argument which uses the default delimiters for the <CODE=20
class=3D"literal">mysqldump</CODE> program. If you use the <CODE=20
class=3D"literal">mysqldump</CODE> delimiters in conjunction with a =
direct-mode=20
import (with <CODE class=3D"literal">--direct</CODE>), very fast imports =
can be
 achieved.</P>
<P>While the choice of delimiters is most important for a text-mode =
import, it=20
is still relevant if you import to SequenceFiles with <CODE=20
class=3D"literal">--as-sequencefile</CODE>. The generated class' <CODE =
class=3D"literal">toString()</CODE>=20
method will use the delimiters you specify, so subsequent formatting of =
the=20
output data will rely on the delimiters you choose.</P>
<DIV class=3D"table"><A name=3D"idp3623920"></A>
<P class=3D"title"><B>Table&nbsp;7.&nbsp;Input parsing =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Input parsing arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field encloser     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input escape                                         =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-fields-terminated-by &lt;char&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input field separator     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-lines-terminated-by &lt;char&gt;</CODE>  =
   </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input end-of-line                                      =
   =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--input-optionally-enclosed-by =
&lt;char&gt;</CODE>     </TD>
    <TD align=3D"left">    Sets a field enclosing                        =
       =20
                character     </TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break">
<P>When Sqoop imports data to HDFS, it generates a Java class which can
 reinterpret the text files that it creates when doing a =
delimited-format=20
import. The delimiters are chosen with arguments such as <CODE=20
class=3D"literal">--fields-terminated-by</CODE>; this controls both how =
the data=20
is written to disk, and how the generated <CODE =
class=3D"literal">parse()</CODE>=20
method reinterprets this data. The delimiters used by the <CODE=20
class=3D"literal">parse()</CODE> method can be chosen independently of =
the output=20
arguments, by using <CODE =
class=3D"literal">--input-fields-terminated-by</CODE>,=20
and so on. This is useful, for example, to generate classes which can =
parse=20
records created with one set of delimiters, and emit the records to a =
different=20
set of files using a separate set of delimiters.</P>
<DIV class=3D"table"><A name=3D"idp3634736"></A>
<P class=3D"title"><B>Table&nbsp;8.&nbsp;Hive arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Hive arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-home &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override <CODE class=3D"literal">$HIVE_HOME</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-import</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Import tables into Hive (Uses Hive=92s                          =
    =20
      default delimiters if none are set.)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-overwrite</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Overwrite existing data in the Hive table.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--create-hive-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         If set, then the job will fail if the target hive     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         table exits. By default this property is false.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the table name to use when importing                       =
      =20
      to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-drop-import-delims</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Drops <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN=20
      class=3D"emphasis"><EM>\r</EM></SPAN>, and <SPAN=20
      class=3D"emphasis"><EM>\01</EM></SPAN> from string                 =
         =20
         fields when importing to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-delims-replacement</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Replace <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN =
class=3D"emphasis"><EM>\r</EM></SPAN>,=20
      and <SPAN class=3D"emphasis"><EM>\01</EM></SPAN> from string       =
         =20
                   fields with user defined string when importing to =
Hive.    =20
    </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-key</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Name of a hive field to partition are                           =
   =20
      sharded on     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-value &lt;v&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         String-value that serves as partition key                       =
      =20
      for this imported into hive in this job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-hive &lt;map&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                       Hive type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"7.2.10.&nbsp;Importing Data Into Hive" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_importing_data_into_hive"></A>7.2.10.&nbsp;Importing=20
Data Into Hive</H4></DIV></DIV></DIV>
<P>Sqoop=92s import tool=92s main function is to upload your data into =
files in=20
HDFS. If you have a Hive metastore associated with your HDFS cluster, =
Sqoop can=20
also import the data into Hive by generating and executing a <CODE =
class=3D"literal">CREATE=20
TABLE</CODE> statement to define the data=92s layout in Hive. Importing =
data into=20
Hive is as simple as adding the <SPAN class=3D"strong"><STRONG><CODE =
class=3D"literal">--hive-import</CODE></STRONG></SPAN>=20
option to your Sqoop command line.</P>
<P>If the Hive table already exists, you can specify the <SPAN=20
class=3D"strong"><STRONG><CODE=20
class=3D"literal">--hive-overwrite</CODE></STRONG></SPAN> option to =
indicate that=20
existing table in hive must be replaced. After your data is imported =
into HDFS=20
or this step is omitted, Sqoop will generate a Hive script containing a =
<CODE=20
class=3D"literal">CREATE TABLE</CODE> operation defining your columns =
using Hive=92s=20
types, and a <CODE class=3D"literal">LOAD DATA INPATH</CODE> statement =
to move the=20
data files into Hive=92s warehouse directory.</P>
<P>The script will be executed by calling the installed copy of hive on =
the=20
machine where Sqoop is run. If you have multiple Hive installations, or =
<CODE=20
class=3D"literal">hive</CODE> is not in your <CODE =
class=3D"literal">$PATH</CODE>,=20
use the <SPAN class=3D"strong"><STRONG><CODE=20
class=3D"literal">--hive-home</CODE></STRONG></SPAN> option to identify =
the Hive=20
installation directory. Sqoop will use <CODE=20
class=3D"literal">$HIVE_HOME/bin/hive</CODE> from here.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>This function is incompatible with <CODE=20
      class=3D"literal">--as-avrodatafile</CODE> and <CODE=20
      =
class=3D"literal">--as-sequencefile</CODE>.</P></TD></TR></TBODY></TABLE>=
</DIV>
<P>Even though Hive supports escaping characters, it does not handle =
escaping of=20
new-line character. Also, it does not support the notion of enclosing =
characters=20
that may include field delimiters in the enclosed string.  It is =
therefore=20
recommended that you choose unambiguous field and record-terminating =
delimiters=20
without the help of escaping and enclosing characters when working with =
Hive;=20
this is due to limitations of Hive=92s input parsing abilities. If you =
do use=20
<CODE class=3D"literal">--escaped-by</CODE>, <CODE=20
class=3D"literal">--enclosed-by</CODE>, or <CODE=20
class=3D"literal">--optionally-enclosed-by</CODE> when importing data =
into Hive,=20
Sqoop will print a warning message.</P>
<P>Hive will have problems using Sqoop-imported data if your =
database=92s rows=20
contain string fields that have Hive=92s default row delimiters (<CODE =
class=3D"literal">\n</CODE>=20
and <CODE class=3D"literal">\r</CODE> characters) or column delimiters =
(<CODE=20
class=3D"literal">\01</CODE> characters) present in them.  You can use =
the <CODE=20
class=3D"literal">--hive-drop-import-delims</CODE> option to drop those =
characters=20
on import to give Hive-compatible text data. Alternatively, you can use =
the=20
<CODE class=3D"literal">--hive-delims-replacement</CODE> option to =
replace those=20
characters with a user-defined string on import to give Hive-compatible =
text=20
data.  These options should only be used if you use Hive=92s default =
delimiters=20
and should not be used if different delimiters are specified.</P>
<P>Sqoop will pass the field and record delimiters through to Hive. If =
you do
 not set any delimiters and do use <CODE =
class=3D"literal">--hive-import</CODE>,=20
the field delimiter will be set to <CODE class=3D"literal">^A</CODE> and =
the=20
record delimiter will be set to <CODE class=3D"literal">\n</CODE> to be =
consistent
 with Hive=92s defaults.</P>
<P>Sqoop will by default import NULL values as string <CODE=20
class=3D"literal">null</CODE>. Hive is however using string <CODE=20
class=3D"literal">\N</CODE> to denote <CODE =
class=3D"literal">NULL</CODE> values and=20
therefore predicates dealing with <CODE class=3D"literal">NULL</CODE> =
(like <CODE=20
class=3D"literal">IS NULL</CODE>) will not work correctly. You should =
append
 parameters <CODE class=3D"literal">--null-string</CODE> and <CODE=20
class=3D"literal">--null-non-string</CODE> in case of import job or =
<CODE class=3D"literal">--input-null-string</CODE>=20
and <CODE class=3D"literal">--input-null-non-string</CODE> in case of an =
export=20
job if you wish to properly preserve <CODE class=3D"literal">NULL</CODE> =
values.=20
Because sqoop is using those parameters in generated code, you need to =
properly=20
escape value <CODE class=3D"literal">\N</CODE> to <CODE=20
class=3D"literal">\\N</CODE>:</P>
<PRE class=3D"screen">$ sqoop import  ... --null-string '\\N' =
--null-non-string '\\N'</PRE>
<P>The table name used in Hive is, by default, the same as that of the =
source=20
table. You can control the output table name with the <CODE=20
class=3D"literal">--hive-table</CODE> option.</P>
<P>Hive can put data into partitions for more efficient query =
performance.  You=20
can tell a Sqoop job to import data for Hive into a particular partition =
by=20
specifying the <CODE class=3D"literal">--hive-partition-key</CODE> and =
<CODE=20
class=3D"literal">--hive-partition-value</CODE> arguments.  The =
partition value=20
must be a string.  Please see the Hive documentation for more details on
 partitioning.</P>
<P>You can import compressed tables into Hive using the <CODE=20
class=3D"literal">--compress</CODE> and <CODE=20
class=3D"literal">--compression-codec</CODE> options. One downside to =
compressing=20
tables imported into Hive is that many codecs cannot be split for =
processing by=20
parallel map tasks. The lzop codec, however, does support splitting. =
When=20
importing tables with this codec, Sqoop will automatically index the =
files for=20
splitting and configuring a new Hive table with the correct InputFormat. =
This=20
feature currently requires that all partitions of a table be compressed =
with the=20
lzop codec.</P>
<DIV class=3D"table"><A name=3D"idp3672480"></A>
<P class=3D"title"><B>Table&nbsp;9.&nbsp;HBase arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"HBase arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--column-family &lt;family&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the target column family for the import     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hbase-create-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         If specified, create missing HBase tables     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hbase-row-key &lt;col&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specifies which input column to use as the                      =
       =20
      row key     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         In case, if input table contains composite     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         key, then &lt;col&gt; must be in the form of a     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         comma-separated list of composite key     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         attributes     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--hbase-table &lt;table-name&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Specifies an HBase table to use as the        =
       =20
                     target instead of HDFS    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"7.2.11.&nbsp;Importing Data Into HBase" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_importing_data_into_hbase"></A>7.2.11.&nbsp;Importing Data Into =

HBase</H4></DIV></DIV></DIV>
<P>Sqoop supports additional import targets beyond HDFS and Hive. Sqoop =
can also=20
import records into a table in HBase.</P>
<P>By specifying <CODE class=3D"literal">--hbase-table</CODE>, you =
instruct Sqoop=20
to import to a table in HBase rather than a directory in HDFS. Sqoop =
will import=20
data to the table specified as the argument to <CODE=20
class=3D"literal">--hbase-table</CODE>. Each row of the input table will =
be=20
transformed into an HBase <CODE class=3D"literal">Put</CODE> operation =
to a row of=20
the output table. The key for each row is taken from a column of the =
input. By=20
default Sqoop will use the split-by column as the row key column. If =
that is not=20
specified, it will try to identify the primary key column, if any, of =
the source=20
table. You can manually specify the row key column with <CODE=20
class=3D"literal">--hbase-row-key</CODE>. Each output column will be =
placed in the=20
same column family, which must be specified with <CODE=20
class=3D"literal">--column-family</CODE>.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>This function is incompatible with direct import (parameter =
<CODE=20
      =
class=3D"literal">--direct</CODE>).</P></TD></TR></TBODY></TABLE></DIV>
<P>If the input table has composite key, the <CODE=20
class=3D"literal">--hbase-row-key</CODE> must be in the form of a =
comma-separated=20
list of composite key attributes. In this case, the row key for HBase =
row will=20
be generated by combining values of composite key attributes using =
underscore as=20
a separator. NOTE: Sqoop import for a table with composite key will work =
only if
 parameter <CODE class=3D"literal">--hbase-row-key</CODE> has been =
specified.</P>
<P>If the target table and column family do not exist, the Sqoop job =
will exit=20
with an error. You should create the target table and column family =
before=20
running an import. If you specify <CODE=20
class=3D"literal">--hbase-create-table</CODE>, Sqoop will create the =
target table=20
and column family if they do not exist, using the default parameters =
from your=20
HBase configuration.</P>
<P>Sqoop currently serializes all values to HBase by converting each =
field to=20
its string representation (as if you were importing to HDFS in text =
mode), and=20
then inserts the UTF-8 bytes of this string in the target cell. Sqoop =
will skip=20
all rows containing null values in all columns except the row key =
column.</P>
<DIV class=3D"table"><A name=3D"idp3690136"></A>
<P class=3D"title"><B>Table&nbsp;10.&nbsp;Code generation =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Code generation arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--bindir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for compiled objects     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--class-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the generated class name. This overrides                   =
     =20
      <CODE class=3D"literal">--package-name</CODE>. When combined with  =
         =20
                    <CODE class=3D"literal">--jar-file</CODE>, sets the =
input=20
      class.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--jar-file &lt;file&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Disable code generation; use specified jar     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--outdir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for generated code     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--package-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Put auto-generated classes in this package     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-java &lt;m&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                  Java type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>As mentioned earlier, a byproduct of importing a table to HDFS is a =
class=20
which can manipulate the imported data. If the data is stored in =
SequenceFiles,=20
this class will be used for the data=92s serialization container. =
Therefore, you=20
should use this class in your subsequent MapReduce processing of the =
data.</P>
<P>The class is typically named after the table; a table named <CODE =
class=3D"literal">foo</CODE>=20
will generate a class named <CODE class=3D"literal">foo</CODE>. You may =
want to=20
override this class name. For example, if your table is named <CODE =
class=3D"literal">EMPLOYEES</CODE>,=20
you may want to specify <CODE class=3D"literal">--class-name =
Employee</CODE>=20
instead. Similarly, you can specify just the package name with <CODE =
class=3D"literal">--package-name</CODE>.=20
The following import generates a class named <CODE=20
class=3D"literal">com.foocorp.SomeTable</CODE>:</P>
<PRE class=3D"screen">$ sqoop import --connect &lt;connect-str&gt; =
--table SomeTable --package-name com.foocorp</PRE>
<P>The <CODE class=3D"literal">.java</CODE> source file for your class =
will be=20
written to the current working directory when you run <CODE=20
class=3D"literal">sqoop</CODE>. You can control the output directory =
with <CODE=20
class=3D"literal">--outdir</CODE>. For example, <CODE =
class=3D"literal">--outdir=20
src/generated/</CODE>.</P>
<P>The import process compiles the source into <CODE=20
class=3D"literal">.class</CODE> and <CODE class=3D"literal">.jar</CODE> =
files; these=20
are ordinarily stored under <CODE class=3D"literal">/tmp</CODE>. You can =
select an=20
alternate target directory with <CODE class=3D"literal">--bindir</CODE>. =
For=20
example, <CODE class=3D"literal">--bindir /scratch</CODE>.</P>
<P>If you already have a compiled class that can be used to perform the =
import=20
and want to suppress the code-generation aspect of the import process, =
you can=20
use an existing jar and class by providing the <CODE=20
class=3D"literal">--jar-file</CODE> and <CODE =
class=3D"literal">--class-name</CODE>=20
options. For example:</P>
<PRE class=3D"screen">$ sqoop import --table SomeTable --jar-file =
mydatatypes.jar \=0A=
    --class-name SomeTableType</PRE>
<P>This command will load the <CODE =
class=3D"literal">SomeTableType</CODE> class=20
out of <CODE class=3D"literal">mydatatypes.jar</CODE>.</P></DIV>
<DIV title=3D"7.2.12.&nbsp;Additional Import Configuration Properties" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_additional_import_configuration_properties"></A>7.2.12.&nbsp;Add=
itional=20
Import Configuration Properties</H4></DIV></DIV></DIV>
<P>There are some additional properties which can be configured by =
modifying=20
<CODE class=3D"literal">conf/sqoop-site.xml</CODE>. Properties can be =
specified=20
the same as in Hadoop configuration files, for example:</P>
<PRE class=3D"screen">  &lt;property&gt;=0A=
    &lt;name&gt;property.name&lt;/name&gt;=0A=
    &lt;value&gt;property.value&lt;/value&gt;=0A=
  &lt;/property&gt;</PRE>
<P>They can also be specified on the command line in the generic =
arguments, for
 example:</P>
<PRE class=3D"screen">sqoop import -D property.name=3Dproperty.value =
...</PRE>
<DIV class=3D"table"><A name=3D"idp3712952"></A>
<P class=3D"title"><B>Table&nbsp;11.&nbsp;Additional import =
configuration=20
properties:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Additional import configuration properties:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">sqoop.bigdecimal.format.string</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Controls how BigDecimal columns will                            =
       =20
            formatted when stored as a String. A                         =
       =20
               value of <CODE class=3D"literal">true</CODE> (default) =
will use    =20
                                             toPlainString to store them =
without=20
      an                                        exponent component =
(0.0000001);=20
      while                                         a value of <CODE =
class=3D"literal">false</CODE>=20
      will use toString                                          which =
may=20
      include an exponent (1E-7)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">sqoop.hbase.add.row.key</CODE>     </TD>
    <TD align=3D"left">    When set to <CODE =
class=3D"literal">false</CODE>=20
      (default), Sqoop                                          will not =
add the=20
      column used as a row                                         key =
into the=20
      row data in HBase. When                                          =
set to=20
      <CODE class=3D"literal">true</CODE>, the column used as a          =
         =20
                             row key will be added to the row data       =
       =20
                                in HBase.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break"></DIV></DIV>
<DIV title=3D"7.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations"></A>7.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>The following examples illustrate how to use the import tool in a =
variety of=20
situations.</P>
<P>A basic import of a table named <CODE =
class=3D"literal">EMPLOYEES</CODE> in the=20
<CODE class=3D"literal">corp</CODE> database:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES</PRE>
<P>A basic import requiring a login:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --username SomeUser -P=0A=
Enter password: (hidden)</PRE>
<P>Selecting specific columns from the <CODE =
class=3D"literal">EMPLOYEES</CODE>=20
table:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --columns "employee_id,first_name,last_name,job_title"</PRE>
<P>Controlling the import parallelism (using 8 parallel tasks):</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    -m 8</PRE>
<P>Enabling the MySQL "direct mode" fast path:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --direct</PRE>
<P>Storing data in SequenceFiles, and setting the generated class name =
to <CODE=20
class=3D"literal">com.foocorp.Employee</CODE>:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --class-name com.foocorp.Employee --as-sequencefile</PRE>
<P>Specifying the delimiters to use in a text-mode import:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --fields-terminated-by '\t' --lines-terminated-by '\n' \=0A=
    --optionally-enclosed-by '\"'</PRE>
<P>Importing the data to Hive:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --hive-import</PRE>
<P>Importing only new employees:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --where "start_date &gt; '2010-01-01'"</PRE>
<P>Changing the splitting column from the default:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --split-by dept_id</PRE>
<P>Verifying that an import was successful:</P>
<PRE class=3D"screen">$ hadoop fs -ls EMPLOYEES=0A=
Found 5 items=0A=
drwxr-xr-x   - someuser somegrp          0 2010-04-27 16:40 =
/user/someuser/EMPLOYEES/_logs=0A=
-rw-r--r--   1 someuser somegrp    2913511 2010-04-27 16:40 =
/user/someuser/EMPLOYEES/part-m-00000=0A=
-rw-r--r--   1 someuser somegrp    1683938 2010-04-27 16:40 =
/user/someuser/EMPLOYEES/part-m-00001=0A=
-rw-r--r--   1 someuser somegrp    7245839 2010-04-27 16:40 =
/user/someuser/EMPLOYEES/part-m-00002=0A=
-rw-r--r--   1 someuser somegrp    7842523 2010-04-27 16:40 =
/user/someuser/EMPLOYEES/part-m-00003=0A=
=0A=
$ hadoop fs -cat EMPLOYEES/part-m-00000 | head -n 10=0A=
0,joe,smith,engineering=0A=
1,jane,doe,marketing=0A=
...</PRE>
<P>Performing an incremental import of new data, after having already =
imported=20
the first 100,000 rows of a table:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/somedb --table sometable \=0A=
    --where "id &gt; 100000" --target-dir /incremental_dataset =
--append</PRE>
<P>An import of a table named <CODE class=3D"literal">EMPLOYEES</CODE> =
in the=20
<CODE class=3D"literal">corp</CODE> database that uses validation to =
validate the=20
import using the table row count and number of rows copied into HDFS: <A =
title=3D"10.&nbsp;validation"=20
class=3D"link" =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#validation=
">More=20
Details</A></P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp \=0A=
    --table EMPLOYEES --validate</PRE></DIV></DIV>
<DIV title=3D"8.&nbsp;sqoop-import-all-tables" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_literal_sqoop_import_all_tables_literal"></A>8.&nbsp;<CODE=20
class=3D"literal">sqoop-import-all-tables</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_2=
">8.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_2"=
>8.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_2">8.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"8.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_2"></A>8.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">import-all-tables</CODE> tool imports a =
set of=20
tables from an RDBMS to HDFS. Data from each table is stored in a =
separate=20
directory in HDFS.</P>
<P>For the <CODE class=3D"literal">import-all-tables</CODE> tool to be =
useful, the=20
following conditions must be met:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Each table must have a single-column primary =
key. </LI>
  <LI class=3D"listitem">You must intend to import all columns of each =
table.=20
</LI>
  <LI class=3D"listitem">You must not intend to use non-default =
splitting column,=20
  nor impose  any conditions via a <CODE class=3D"literal">WHERE</CODE> =
clause.=20
  </LI></UL></DIV></DIV>
<DIV title=3D"8.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_2"></A>8.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop import-all-tables (generic-args) =
(import-args)=0A=
$ sqoop-import-all-tables (generic-args) (import-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any import =
arguments, the=20
import arguments can be entered in any order with respect to one =
another.</P>
<DIV class=3D"table"><A name=3D"idp3740488"></A>
<P class=3D"title"><B>Table&nbsp;12.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3754776"></A>
<P class=3D"title"><B>Table&nbsp;13.&nbsp;Import control =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Import control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-avrodatafile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data to Avro Data Files     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-sequencefile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data to SequenceFiles     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--as-textfile</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Imports data as plain text (default)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use direct import fast path     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct-split-size &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Split the input stream every <SPAN =
class=3D"emphasis"><EM>n</EM></SPAN>=20
      bytes when                             importing in direct mode    =
 </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--inline-lob-limit &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set the maximum size for an inline LOB     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-m,--num-mappers &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use <SPAN class=3D"emphasis"><EM>n</EM></SPAN> map tasks to =
import in=20
      parallel     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--warehouse-dir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         HDFS parent for table destination     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-z,--compress</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Enable compression     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--compression-codec &lt;c&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use Hadoop codec (default gzip)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--exclude-tables &lt;tables&gt;</CODE>     </TD>
    <TD align=3D"left">    Comma separated list of tables to exclude     =
       =20
                      from import process    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>These arguments behave in the same manner as they do when used for =
the <CODE=20
class=3D"literal">sqoop-import</CODE> tool, but the <CODE=20
class=3D"literal">--table</CODE>, <CODE =
class=3D"literal">--split-by</CODE>, <CODE=20
class=3D"literal">--columns</CODE>, and <CODE =
class=3D"literal">--where</CODE>=20
arguments are invalid for <CODE =
class=3D"literal">sqoop-import-all-tables</CODE>.
 The <CODE class=3D"literal">--exclude-tables argument is for=20
+sqoop-import-all-tables</CODE> only.</P>
<DIV class=3D"table"><A name=3D"idp3771952"></A>
<P class=3D"title"><B>Table&nbsp;14.&nbsp;Output line formatting=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Output line formatting arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--enclosed-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field enclosing                                 =
  =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the escape character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fields-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the field separator character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--lines-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the end-of-line character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--mysql-delimiters</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Uses MySQL=92s default delimiter set:                           =
       =20
      fields: <CODE class=3D"literal">,</CODE>  lines: <CODE=20
      class=3D"literal">\n</CODE>                                    =
escaped-by:=20
      <CODE class=3D"literal">\</CODE>                                   =
=20
      optionally-enclosed-by: <CODE class=3D"literal">'</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--optionally-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Sets a field enclosing character    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3782680"></A>
<P class=3D"title"><B>Table&nbsp;15.&nbsp;Input parsing =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Input parsing arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field encloser     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input escape                                         =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-fields-terminated-by &lt;char&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input field separator     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-lines-terminated-by &lt;char&gt;</CODE>  =
   </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input end-of-line                                      =
   =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--input-optionally-enclosed-by =
&lt;char&gt;</CODE>     </TD>
    <TD align=3D"left">    Sets a field enclosing                        =
       =20
                character     </TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3791104"></A>
<P class=3D"title"><B>Table&nbsp;16.&nbsp;Hive arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Hive arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-home &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override <CODE class=3D"literal">$HIVE_HOME</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-import</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Import tables into Hive (Uses Hive=92s                          =
    =20
      default delimiters if none are set.)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-overwrite</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Overwrite existing data in the Hive table.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--create-hive-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         If set, then the job will fail if the target hive     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         table exits. By default this property is false.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the table name to use when importing                       =
      =20
      to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-drop-import-delims</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Drops <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN=20
      class=3D"emphasis"><EM>\r</EM></SPAN>, and <SPAN=20
      class=3D"emphasis"><EM>\01</EM></SPAN> from string                 =
         =20
         fields when importing to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-delims-replacement</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Replace <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN =
class=3D"emphasis"><EM>\r</EM></SPAN>,=20
      and <SPAN class=3D"emphasis"><EM>\01</EM></SPAN> from string       =
         =20
                   fields with user defined string when importing to =
Hive.    =20
    </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-key</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Name of a hive field to partition are                           =
   =20
      sharded on     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-value &lt;v&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         String-value that serves as partition key                       =
      =20
      for this imported into hive in this job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-hive &lt;map&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                       Hive type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3807040"></A>
<P class=3D"title"><B>Table&nbsp;17.&nbsp;Code generation =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Code generation arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--bindir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for compiled objects     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--jar-file &lt;file&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Disable code generation; use specified jar     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--outdir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for generated code     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--package-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left">    Put auto-generated classes in this package    =
=20
  </TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>The <CODE class=3D"literal">import-all-tables</CODE> tool does not =
support the=20
<CODE class=3D"literal">--class-name</CODE> argument. You may, however, =
specify a=20
package with <CODE class=3D"literal">--package-name</CODE> in which all =
generated=20
classes will be placed.</P></DIV>
<DIV title=3D"8.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_2"></A>8.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>Import all tables from the <CODE class=3D"literal">corp</CODE> =
database:</P>
<PRE class=3D"screen">$ sqoop import-all-tables --connect =
jdbc:mysql://db.foo.com/corp</PRE>
<P>Verifying that it worked:</P>
<PRE class=3D"screen">$ hadoop fs -ls=0A=
Found 4 items=0A=
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 =
/user/someuser/EMPLOYEES=0A=
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 =
/user/someuser/PAYCHECKS=0A=
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 =
/user/someuser/DEPARTMENTS=0A=
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 =
/user/someuser/OFFICE_SUPPLIES</PRE></DIV></DIV>
<DIV title=3D"9.&nbsp;sqoop-export" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_export_literal"></A>9.&nbsp;<CODE=20
class=3D"literal">sqoop-export</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_3=
">9.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_3"=
>9.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_inserts_v=
s_updates">9.3.=20
  Inserts vs. Updates</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_exports_a=
nd_transactions">9.4.=20
  Exports and Transactions</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_failed_ex=
ports">9.5.=20
  Failed Exports</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_3">9.6.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"9.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_3"></A>9.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">export</CODE> tool exports a set of files =
from HDFS=20
back to an RDBMS. The target table must already exist in the database. =
The input=20
files are read and parsed into a set of records according to the =
user-specified=20
delimiters.</P>
<P>The default operation is to transform these into a set of <CODE =
class=3D"literal">INSERT</CODE>
 statements that inject the records into the database. In "update mode," =
Sqoop=20
will generate <CODE class=3D"literal">UPDATE</CODE> statements that =
replace=20
existing records in the database, and in "call mode" Sqoop will make a =
stored=20
procedure call for each record.</P></DIV>
<DIV title=3D"9.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_3"></A>9.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop export (generic-args) (export-args)=0A=
$ sqoop-export (generic-args) (export-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any export =
arguments, the=20
export arguments can be entered in any order with respect to one =
another.</P>
<DIV class=3D"table"><A name=3D"idp3822872"></A>
<P class=3D"title"><B>Table&nbsp;18.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3837208"></A>
<P class=3D"title"><B>Table&nbsp;19.&nbsp;Validation arguments <A =
title=3D"10.&nbsp;validation"=20
class=3D"link" =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#validation=
">More=20
Details</A></B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Validation arguments More Details">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--validate</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Enable validation of data copied,                               =
       =20
          supports single table copy only.  <CODE =
class=3D"literal">--validator=20
      &lt;class-name&gt;</CODE>               Specify validator class to =
use.   =20
     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--validation-threshold &lt;class-name&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify validation threshold class                              =
       =20
           to use.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         +--validation-failurehandler &lt;class-name     </TD>
    <TD align=3D"left">    &gt;+ Specify validation failure              =
       =20
                           handler class to use.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3843872"></A>
<P class=3D"title"><B>Table&nbsp;20.&nbsp;Export control =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Export control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use direct export fast path     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--export-dir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         HDFS source path for the export     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-m,--num-mappers &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use <SPAN class=3D"emphasis"><EM>n</EM></SPAN> map tasks to =
export in    =20
                                          parallel     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Table to populate     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--call &lt;stored-proc-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Stored Procedure to call     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--update-key &lt;col-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Anchor column to use for updates.                               =
       =20
        Use a comma separated list of columns                            =
       =20
           if there are more than one column.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--update-mode &lt;mode&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify how updates are performed                               =
       =20
        when new rows are found with                                     =
   =20
      non-matching keys in database.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Legal values for <CODE class=3D"literal">mode</CODE> include    =
         =20
                                 <CODE =
class=3D"literal">updateonly</CODE>=20
      (default) and                                         <CODE =
class=3D"literal">allowinsert</CODE>.=20
          </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-null-string &lt;null-string&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be interpreted as                                 =
       =20
      null for string columns     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-null-non-string =
&lt;null-string&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be interpreted as                                 =
       =20
      null for non-string columns     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--staging-table =
&lt;staging-table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The table in which data will be                                 =
       =20
      staged before being inserted into                                  =
      =20
      the destination table.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--clear-staging-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Indicates that any data present in                              =
       =20
         the staging table can be deleted.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--batch</CODE>     </TD>
    <TD align=3D"left">    Use batch mode for underlying                 =
       =20
                      statement execution.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>The <CODE class=3D"literal">--export-dir</CODE> argument and one of =
<CODE=20
class=3D"literal">--table</CODE> or <CODE =
class=3D"literal">--call</CODE> are=20
required. These specify the table to populate in the database (or the =
stored=20
procedure to call), and the directory in HDFS that contains the source =
data.</P>
<P>You can control the number of mappers independently from the number =
of files=20
present in the directory. Export performance depends on the degree of=20
parallelism. By default, Sqoop will use four tasks in parallel for the =
export=20
process. This may not be optimal; you will need to experiment with your =
own=20
particular setup. Additional tasks may offer better concurrency, but if =
the=20
database is already bottlenecked on updating indices, invoking triggers, =
and so=20
on, then additional load may decrease performance. The <CODE=20
class=3D"literal">--num-mappers</CODE> or <CODE =
class=3D"literal">-m</CODE>
 arguments control the number of map tasks, which is the degree of =
parallelism=20
used.</P>
<P>MySQL provides a direct mode for exports as well, using the <CODE =
class=3D"literal">mysqlimport</CODE>=20
tool. When exporting to MySQL, use the <CODE =
class=3D"literal">--direct</CODE>=20
argument to specify this codepath. This may be higher-performance than =
the=20
standard JDBC codepath.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>When using export in direct mode with MySQL, the MySQL bulk =
utility=20
      <CODE class=3D"literal">mysqlimport</CODE> must be available in =
the shell=20
      path of the task process.</P></TD></TR></TBODY></TABLE></DIV>
<P>The <CODE class=3D"literal">--input-null-string</CODE> and <CODE =
class=3D"literal">--input-null-non-string</CODE>=20
arguments are optional. If <CODE =
class=3D"literal">--input-null-string</CODE> is=20
not specified, then the string "null" will be interpreted as null for=20
string-type columns. If <CODE =
class=3D"literal">--input-null-non-string</CODE> is=20
not specified, then both the string "null" and the empty string will be=20
interpreted as null for non-string columns. Note that, the empty string =
will be=20
always interpreted as null for non-string columns, in addition to other =
string=20
if specified by <CODE =
class=3D"literal">--input-null-non-string</CODE>.</P>
<P>Since Sqoop breaks down export process into multiple transactions, it =
is=20
possible that a failed export job may result in partial data being =
committed to=20
the database. This can further lead to subsequent jobs failing due to =
insert=20
collisions in some cases, or lead to duplicated data in others. You can =
overcome=20
this problem by specifying a staging table via the <CODE=20
class=3D"literal">--staging-table</CODE> option which acts as an =
auxiliary table=20
that is used to stage exported data. The staged data is finally moved to =
the=20
destination table in a single transaction.</P>
<P>In order to use the staging facility, you must create the staging =
table prior=20
to running the export job. This table must be structurally identical to =
the=20
target table. This table should either be empty before the export job =
runs, or=20
the <CODE class=3D"literal">--clear-staging-table</CODE> option must be =
specified.
 If the staging table contains data and the <CODE=20
class=3D"literal">--clear-staging-table</CODE> option is specified, =
Sqoop will=20
delete all of the data before starting the export job.</P>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>Support for staging data prior to pushing it into the =
destination table=20
      is not available for <CODE class=3D"literal">--direct</CODE> =
exports. It is=20
      also not available when export is invoked using the <CODE=20
      class=3D"literal">--update-key</CODE> option for updating existing =
data, and=20
      when stored procedures are used to insert the=20
data.</P></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV title=3D"9.3.&nbsp;Inserts vs. Updates" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_inserts_vs_updates"></A>9.3.&nbsp;Inserts vs.=20
Updates</H3></DIV></DIV></DIV>
<P>By default, <CODE class=3D"literal">sqoop-export</CODE> appends new =
rows to a=20
table; each input record is transformed into an <CODE=20
class=3D"literal">INSERT</CODE> statement that adds a row to the target =
database=20
table. If your table has constraints (e.g., a primary key column whose =
values=20
must be unique) and already contains data, you must take care to avoid =
inserting=20
records that violate these constraints. The export process will fail if =
an <CODE=20
class=3D"literal">INSERT</CODE> statement fails. This mode is primarily =
intended=20
for exporting records to a new, empty table intended to receive these=20
results.</P>
<P>If you specify the <CODE class=3D"literal">--update-key</CODE> =
argument, Sqoop=20
will instead modify an existing dataset in the database. Each input =
record is=20
treated as an <CODE class=3D"literal">UPDATE</CODE> statement that =
modifies an=20
existing row. The row a statement modifies is determined by the column =
name(s)=20
specified with <CODE class=3D"literal">--update-key</CODE>. For example, =
consider=20
the following table definition:</P>
<PRE class=3D"screen">CREATE TABLE foo(=0A=
    id INT NOT NULL PRIMARY KEY,=0A=
    msg VARCHAR(32),=0A=
    bar INT);</PRE>
<P>Consider also a dataset in HDFS containing records like these:</P>
<PRE class=3D"screen">0,this is a test,42=0A=
1,some more data,100=0A=
...</PRE>
<P>Running <CODE class=3D"literal">sqoop-export --table foo --update-key =
id=20
--export-dir /path/to/data --connect =85</CODE> will run an export job =
that=20
executes SQL statements based on the data like so:</P>
<PRE class=3D"screen">UPDATE foo SET msg=3D'this is a test', bar=3D42 =
WHERE id=3D0;=0A=
UPDATE foo SET msg=3D'some more data', bar=3D100 WHERE id=3D1;=0A=
...</PRE>
<P>If an <CODE class=3D"literal">UPDATE</CODE> statement modifies no =
rows, this is=20
not considered an error; the export will silently continue. (In effect, =
this=20
means that an update-based export will not insert new rows into the =
database.)
 Likewise, if the column specified with <CODE=20
class=3D"literal">--update-key</CODE> does not uniquely identify rows =
and multiple=20
rows are updated by a single statement, this condition is also =
undetected.</P>
<P>The argument <CODE class=3D"literal">--update-key</CODE> can also be =
given a=20
comma separated list of column names. In which case, Sqoop will match =
all keys=20
from this list before updating any existing record.</P>
<P>Depending on the target database, you may also specify the <CODE =
class=3D"literal">--update-mode</CODE>
 argument with <CODE class=3D"literal">allowinsert</CODE> mode if you =
want to=20
update rows if they exist in the database already or insert rows if they =
do not=20
exist yet.</P>
<DIV class=3D"table"><A name=3D"idp3892776"></A>
<P class=3D"title"><B>Table&nbsp;21.&nbsp;Input parsing =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Input parsing arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field encloser     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input escape                                         =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-fields-terminated-by &lt;char&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input field separator     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-lines-terminated-by &lt;char&gt;</CODE>  =
   </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input end-of-line                                      =
   =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--input-optionally-enclosed-by =
&lt;char&gt;</CODE>     </TD>
    <TD align=3D"left">    Sets a field enclosing                        =
       =20
                character     </TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp3901200"></A>
<P class=3D"title"><B>Table&nbsp;22.&nbsp;Output line formatting=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Output line formatting arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--enclosed-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field enclosing                                 =
  =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the escape character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fields-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the field separator character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--lines-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the end-of-line character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--mysql-delimiters</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Uses MySQL=92s default delimiter set:                           =
       =20
      fields: <CODE class=3D"literal">,</CODE>  lines: <CODE=20
      class=3D"literal">\n</CODE>                                    =
escaped-by:=20
      <CODE class=3D"literal">\</CODE>                                   =
=20
      optionally-enclosed-by: <CODE class=3D"literal">'</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--optionally-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Sets a field enclosing character    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>Sqoop automatically generates code to parse and interpret records of =
the
 files containing the data to be exported back to the database. If these =
files=20
were created with non-default delimiters (comma-separated fields with=20
newline-separated records), you should specify the same delimiters again =
so that=20
Sqoop can parse your files.</P>
<P>If you specify incorrect delimiters, Sqoop will fail to find enough =
columns=20
per line. This will cause export map tasks to fail by throwing <CODE =
class=3D"literal">ParseExceptions</CODE>.</P>
<DIV class=3D"table"><A name=3D"idp3913600"></A>
<P class=3D"title"><B>Table&nbsp;23.&nbsp;Code generation =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Code generation arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--bindir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for compiled objects     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--class-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the generated class name. This overrides                   =
     =20
      <CODE class=3D"literal">--package-name</CODE>. When combined with  =
         =20
                    <CODE class=3D"literal">--jar-file</CODE>, sets the =
input=20
      class.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--jar-file &lt;file&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Disable code generation; use specified jar     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--outdir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for generated code     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--package-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Put auto-generated classes in this package     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-java &lt;m&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                  Java type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>If the records to be exported were generated as the result of a =
previous=20
import, then the original generated class can be used to read the data =
back.=20
Specifying <CODE class=3D"literal">--jar-file</CODE> and <CODE=20
class=3D"literal">--class-name</CODE> obviate the need to specify =
delimiters in=20
this case.</P>
<P>The use of existing generated code is incompatible with <CODE=20
class=3D"literal">--update-key</CODE>; an update-mode export requires =
new code=20
generation to perform the update. You cannot use <CODE=20
class=3D"literal">--jar-file</CODE>, and must fully specify any =
non-default=20
delimiters.</P></DIV>
<DIV title=3D"9.4.&nbsp;Exports and Transactions" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_exports_and_transactions"></A>9.4.&nbsp;Exports and=20
Transactions</H3></DIV></DIV></DIV>
<P>Exports are performed by multiple writers in parallel. Each writer =
uses a=20
separate connection to the database; these have separate transactions =
from one=20
another. Sqoop uses the multi-row <CODE class=3D"literal">INSERT</CODE> =
syntax to=20
insert up to 100 records per statement. Every 100 statements, the =
current=20
transaction within a writer task is committed, causing a commit every =
10,000=20
rows. This ensures that transaction buffers do not grow without bound, =
and cause=20
out-of-memory conditions. Therefore, an export is not an atomic process. =
Partial=20
results from the export will become visible before the export is=20
complete.</P></DIV>
<DIV title=3D"9.5.&nbsp;Failed Exports" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A name=3D"_failed_exports"></A>9.5.&nbsp;Failed=20
Exports</H3></DIV></DIV></DIV>
<P>Exports may fail for a number of reasons:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Loss of connectivity from the Hadoop cluster to =
the=20
  database (either  due to hardware fault, or server software crashes) =
</LI>
  <LI class=3D"listitem">Attempting to <CODE =
class=3D"literal">INSERT</CODE> a row=20
  which violates a consistency constraint  (for example, inserting a =
duplicate=20
  primary key value) </LI>
  <LI class=3D"listitem">Attempting to parse an incomplete or malformed =
record=20
  from the HDFS  source data </LI>
  <LI class=3D"listitem">Attempting to parse records using incorrect =
delimiters=20
  </LI>
  <LI class=3D"listitem">Capacity issues (such as insufficient RAM or =
disk space)=20
  </LI></UL></DIV>
<P>If an export map task fails due to these or other reasons, it will =
cause the=20
export job to fail. The results of a failed export are undefined. Each =
export=20
map task operates in a separate transaction. Furthermore, individual map =
tasks=20
<CODE class=3D"literal">commit</CODE> their current transaction =
periodically. If a=20
task fails, the current transaction will be rolled back. Any=20
previously-committed transactions will remain durable in the database, =
leading=20
to a partially-complete export.</P></DIV>
<DIV title=3D"9.6.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_3"></A>9.6.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>A basic export to populate a table named <CODE=20
class=3D"literal">bar</CODE>:</P>
<PRE class=3D"screen">$ sqoop export --connect =
jdbc:mysql://db.example.com/foo --table bar  \=0A=
    --export-dir /results/bar_data</PRE>
<P>This example takes the files in <CODE=20
class=3D"literal">/results/bar_data</CODE> and injects their contents in =
to the=20
<CODE class=3D"literal">bar</CODE> table in the <CODE =
class=3D"literal">foo</CODE>=20
database on <CODE class=3D"literal">db.example.com</CODE>. The target =
table must=20
already exist in the database. Sqoop performs a set of <CODE=20
class=3D"literal">INSERT INTO</CODE> operations, without regard for =
existing=20
content. If Sqoop attempts to insert rows which violate constraints in =
the=20
database (for example, a particular primary key value already exists), =
then the=20
export fails.</P>
<P>Another basic export to populate a table named <CODE=20
class=3D"literal">bar</CODE> with validation enabled: <A =
title=3D"10.&nbsp;validation"=20
class=3D"link" =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#validation=
">More=20
Details</A></P>
<PRE class=3D"screen">$ sqoop export --connect =
jdbc:mysql://db.example.com/foo --table bar  \=0A=
    --export-dir /results/bar_data --validate</PRE>
<P>An export that calls a stored procedure named <CODE=20
class=3D"literal">barproc</CODE> for every record in <CODE=20
class=3D"literal">/results/bar_data</CODE> would look like:</P>
<PRE class=3D"screen">$ sqoop export --connect =
jdbc:mysql://db.example.com/foo --call barproc \=0A=
    --export-dir /results/bar_data</PRE></DIV></DIV>
<DIV title=3D"10.&nbsp;validation" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"validation"></A>10.&nbsp;<CODE=20
class=3D"literal">validation</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_4=
">10.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_introduct=
ion_2">10.2.=20
  Introduction</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_4"=
>10.3.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_configura=
tion">10.4.=20
  Configuration</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_limitatio=
ns">10.5.=20
  Limitations</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_4">10.6.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"10.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_4"></A>10.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>Validate the data copied, either import or export by comparing the =
row counts=20
from the source and the target post copy.</P></DIV>
<DIV title=3D"10.2.&nbsp;Introduction" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_introduction_2"></A>10.2.&nbsp;Introduction</H3></DIV></DIV></DI=
V>
<P>There are 3 basic interfaces: ValidationThreshold - Determines if the =
error=20
margin between the source and target are acceptable: Absolute, =
Percentage=20
Tolerant, etc. Default implementation is AbsoluteValidationThreshold =
which=20
ensures the row counts from source and targets are the same.</P>
<P>ValidationFailureHandler - Responsible for handling failures: log an
 error/warning, abort, etc. Default implementation is =
LogOnFailureHandler that=20
logs a warning message to the configured logger.</P>
<P>Validator - Drives the validation logic by delegating the decision to
 ValidationThreshold and delegating failure handling to=20
ValidationFailureHandler. The default implementation is =
RowCountValidator which=20
validates the row counts from source and the target.</P></DIV>
<DIV title=3D"10.3.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_4"></A>10.3.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop import (generic-args) (import-args)=0A=
$ sqoop export (generic-args) (export-args)</PRE>
<P>Validation arguments are part of import and export =
arguments.</P></DIV>
<DIV title=3D"10.4.&nbsp;Configuration" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_configuration"></A>10.4.&nbsp;Configuration</H3></DIV></DIV></DI=
V>
<P>The validation framework is extensible and pluggable. It comes with =
default
 implementations but the interfaces can be extended to allow custom
 implementations by passing them as part of the command line arguments =
as
 described below.</P>
<P title=3D"Validator"><B>Validator.&nbsp;</B> </P>
<PRE class=3D"literallayout">Property:         validator=0A=
Description:      Driver for validation,=0A=
                  must implement org.apache.sqoop.validation.Validator=0A=
Supported values: The value has to be a fully qualified class name.=0A=
Default value:    org.apache.sqoop.validation.RowCountValidator</PRE>
<P title=3D"Validator"></P>
<P title=3D"Validation Threshold"><B>Validation Threshold.&nbsp;</B> =
</P>
<PRE class=3D"literallayout">Property:         validation-threshold=0A=
Description:      Drives the decision based on the validation meeting the=0A=
                  threshold or not. Must implement=0A=
                  org.apache.sqoop.validation.ValidationThreshold=0A=
Supported values: The value has to be a fully qualified class name.=0A=
Default value:    =
org.apache.sqoop.validation.AbsoluteValidationThreshold</PRE>
<P title=3D"Validation Threshold"></P>
<P title=3D"Validation Failure Handler"><B>Validation Failure =
Handler.&nbsp;</B>=20
</P>
<PRE class=3D"literallayout">Property:         validation-failurehandler=0A=
Description:      Responsible for handling failures, must implement=0A=
                  org.apache.sqoop.validation.ValidationFailureHandler=0A=
Supported values: The value has to be a fully qualified class name.=0A=
Default value:    =
org.apache.sqoop.validation.AbortOnFailureHandler</PRE>
<P title=3D"Validation Failure Handler"></P></DIV>
<DIV title=3D"10.5.&nbsp;Limitations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_limitations"></A>10.5.&nbsp;Limitations</H3></DIV></DIV></DIV>
<P>Validation currently only validates data copied from a single table =
into=20
HDFS. The following are the limitations in the current =
implementation:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">all-tables option </LI>
  <LI class=3D"listitem">free-form query option </LI>
  <LI class=3D"listitem">Data imported into Hive or HBase </LI>
  <LI class=3D"listitem">table import with --where argument </LI>
  <LI class=3D"listitem">incremental imports </LI></UL></DIV></DIV>
<DIV title=3D"10.6.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_4"></A>10.6.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>A basic import of a table named <CODE =
class=3D"literal">EMPLOYEES</CODE> in the=20
<CODE class=3D"literal">corp</CODE> database that uses validation to =
validate the=20
row counts:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp  \=0A=
    --table EMPLOYEES --validate</PRE>
<P>A basic export to populate a table named <CODE =
class=3D"literal">bar</CODE>=20
with validation enabled:</P>
<PRE class=3D"screen">$ sqoop export --connect =
jdbc:mysql://db.example.com/foo --table bar  \=0A=
    --export-dir /results/bar_data --validate</PRE>
<P>Another example that overrides the validation args:</P>
<PRE class=3D"screen">$ sqoop import --connect =
jdbc:mysql://db.foo.com/corp --table EMPLOYEES \=0A=
    --validate --validator org.apache.sqoop.validation.RowCountValidator =
\=0A=
    --validation-threshold \=0A=
          org.apache.sqoop.validation.AbsoluteValidationThreshold \=0A=
    --validation-failurehandler \=0A=
          =
org.apache.sqoop.validation.AbortOnFailureHandler</PRE></DIV></DIV>
<DIV title=3D"11.&nbsp;Saved Jobs" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_saved_jobs"></A>11.&nbsp;Saved=20
Jobs</H2></DIV></DIV></DIV>
<P>Imports and exports can be repeatedly performed by issuing the same =
command
 multiple times. Especially when using the incremental import =
capability, this=20
is an expected scenario.</P>
<P>Sqoop allows you to define <SPAN class=3D"emphasis"><EM>saved =
jobs</EM></SPAN>=20
which make this process easier. A saved job records the configuration=20
information required to execute a Sqoop command at a later time. The =
section on=20
the <CODE class=3D"literal">sqoop-job</CODE> tool describes how to =
create and work=20
with saved jobs.</P>
<P>By default, job descriptions are saved to a private repository stored =
in=20
<CODE class=3D"literal">$HOME/.sqoop/</CODE>. You can configure Sqoop to =
instead=20
use a shared <SPAN class=3D"emphasis"><EM>metastore</EM></SPAN>, which =
makes saved=20
jobs available to multiple users across a shared cluster. Starting the =
metastore=20
is covered by the section on the <CODE =
class=3D"literal">sqoop-metastore</CODE>=20
tool.</P></DIV>
<DIV title=3D"12.&nbsp;sqoop-job" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_job_literal"></A>12.&nbsp;<CODE=20
class=3D"literal">sqoop-job</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_5=
">12.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_5"=
>12.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_saved_job=
s_and_passwords">12.3.=20
  Saved jobs and passwords</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_saved_job=
s_and_incremental_imports">12.4.=20
  Saved jobs and incremental imports</A></SPAN></DT></DL></DIV>
<DIV title=3D"12.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_5"></A>12.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The job tool allows you to create and work with saved jobs. Saved =
jobs
 remember the parameters used to specify a job, so they can be =
re-executed by=20
invoking the job by its handle.</P>
<P>If a saved job is configured to perform an incremental import, state=20
regarding the most recently imported rows is updated in the saved job to =
allow=20
the job to continually import only the newest rows.</P></DIV>
<DIV title=3D"12.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_5"></A>12.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop job (generic-args) (job-args) [-- =
[subtool-name] (subtool-args)]=0A=
$ sqoop-job (generic-args) (job-args) [-- [subtool-name] =
(subtool-args)]</PRE>
<P>Although the Hadoop generic arguments must preceed any job arguments, =
the job=20
arguments can be entered in any order with respect to one another.</P>
<DIV class=3D"table"><A name=3D"idp3965464"></A>
<P class=3D"title"><B>Table&nbsp;24.&nbsp;Job management =
options:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Job management options:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--create &lt;job-id&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Define a new saved job with the specified                       =
     =20
      job-id (name). A second Sqoop                             =
command-line,=20
      separated by a <CODE class=3D"literal">--</CODE> should            =
         =20
             be specified; this defines the saved job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--delete &lt;job-id&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Delete a saved job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--exec &lt;job-id&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Given a job defined with <CODE =
class=3D"literal">--create</CODE>, run    =20
                              the saved job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--show &lt;job-id&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Show the parameters for a saved job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--list</CODE>     </TD>
    <TD align=3D"left">    List all saved jobs    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>Creating saved jobs is done with the <CODE =
class=3D"literal">--create</CODE>=20
action. This operation requires a <CODE class=3D"literal">--</CODE> =
followed by a=20
tool name and its arguments. The tool and its arguments will form the =
basis of=20
the saved job. Consider:</P>
<PRE class=3D"screen">$ sqoop job --create myjob -- import --connect =
jdbc:mysql://example.com/db \=0A=
    --table mytable</PRE>
<P>This creates a job named <CODE class=3D"literal">myjob</CODE> which =
can be=20
executed later. The job is not run. This job is now available in the =
list of=20
saved jobs:</P>
<PRE class=3D"screen">$ sqoop job --list=0A=
Available jobs:=0A=
  myjob</PRE>
<P>We can inspect the configuration of a job with the <CODE=20
class=3D"literal">show</CODE> action:</P>
<PRE class=3D"screen"> $ sqoop job --show myjob=0A=
 Job: myjob=0A=
 Tool: import=0A=
 Options:=0A=
 ----------------------------=0A=
 direct.import =3D false=0A=
 codegen.input.delimiters.record =3D 0=0A=
 hdfs.append.dir =3D false=0A=
 db.table =3D mytable=0A=
 ...</PRE>
<P>And if we are satisfied with it, we can run the job with <CODE =
class=3D"literal">exec</CODE>:</P>
<PRE class=3D"screen">$ sqoop job --exec myjob=0A=
10/08/19 13:08:45 INFO tool.CodeGenTool: Beginning code generation=0A=
...</PRE>
<P>The <CODE class=3D"literal">exec</CODE> action allows you to override =
arguments=20
of the saved job by supplying them after a <CODE =
class=3D"literal">--</CODE>. For=20
example, if the database were changed to require a username, we could =
specify=20
the username and password with:</P>
<PRE class=3D"screen">$ sqoop job --exec myjob -- --username someuser -P=0A=
Enter password:=0A=
...</PRE>
<DIV class=3D"table"><A name=3D"idp3980856"></A>
<P class=3D"title"><B>Table&nbsp;25.&nbsp;Metastore connection =
options:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Metastore connection options:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--meta-connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left">    Specifies the JDBC connect string used        =
       =20
                    to connect to the metastore    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>By default, a private metastore is instantiated in <CODE=20
class=3D"literal">$HOME/.sqoop</CODE>. If you have configured a hosted =
metastore=20
with the <CODE class=3D"literal">sqoop-metastore</CODE> tool, you can =
connect to=20
it by specifying the <CODE class=3D"literal">--meta-connect</CODE> =
argument. This=20
is a JDBC connect string just like the ones used to connect to databases =
for=20
import.</P>
<P>In <CODE class=3D"literal">conf/sqoop-site.xml</CODE>, you can =
configure <CODE=20
class=3D"literal">sqoop.metastore.client.autoconnect.url</CODE> with =
this address,=20
so you do not have to supply <CODE =
class=3D"literal">--meta-connect</CODE> to use=20
a remote metastore. This parameter can also be modified to move the =
private=20
metastore to a location on your filesystem other than your home =
directory.</P>
<P>If you configure <CODE=20
class=3D"literal">sqoop.metastore.client.enable.autoconnect</CODE> with =
the value=20
<CODE class=3D"literal">false</CODE>, then you must explicitly supply =
<CODE class=3D"literal">--meta-connect</CODE>.</P>
<DIV class=3D"table"><A name=3D"idp3989392"></A>
<P class=3D"title"><B>Table&nbsp;26.&nbsp;Common options:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common options:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left">    Print more information while working    =20
  </TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"12.3.&nbsp;Saved jobs and passwords" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_saved_jobs_and_passwords"></A>12.3.&nbsp;Saved jobs=20
and passwords</H3></DIV></DIV></DIV>
<P>The Sqoop metastore is not a secure resource. Multiple users can =
access its=20
contents. For this reason, Sqoop does not store passwords in the =
metastore. If=20
you create a job that requires a password, you will be prompted for that =

password each time you execute the job.</P>
<P>You can enable passwords in the metastore by setting <CODE=20
class=3D"literal">sqoop.metastore.client.record.password</CODE> to <CODE =
class=3D"literal">true</CODE>=20
in the configuration.</P>
<P>Note that you have to set <CODE=20
class=3D"literal">sqoop.metastore.client.record.password</CODE> to <CODE =
class=3D"literal">true</CODE>
 if you are executing saved jobs via Oozie because Sqoop cannot prompt =
the user
 to enter passwords while being executed as Oozie tasks.</P></DIV>
<DIV title=3D"12.4.&nbsp;Saved jobs and incremental imports" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_saved_jobs_and_incremental_imports"></A>12.4.&nbsp;Saved jobs =
and=20
incremental imports</H3></DIV></DIV></DIV>
<P>Incremental imports are performed by comparing the values in a <SPAN =
class=3D"emphasis"><EM>check=20
column</EM></SPAN> against a reference value for the most recent import. =
For=20
example, if the <CODE class=3D"literal">--incremental append</CODE> =
argument was=20
specified, along with <CODE class=3D"literal">--check-column id</CODE> =
and <CODE=20
class=3D"literal">--last-value 100</CODE>, all rows with <CODE =
class=3D"literal">id=20
&gt; 100</CODE> will be imported. If an incremental import is run from =
the=20
command line, the value which should be specified as <CODE=20
class=3D"literal">--last-value</CODE> in a subsequent incremental import =
will be=20
printed to the screen for your reference. If an incremental import is =
run from a=20
saved job, this value will be retained in the saved job. Subsequent runs =
of=20
<CODE class=3D"literal">sqoop job --exec someIncrementalJob</CODE> will =
continue=20
to import only newer rows than those previously =
imported.</P></DIV></DIV>
<DIV title=3D"13.&nbsp;sqoop-metastore" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_literal_sqoop_metastore_literal"></A>13.&nbsp;<CODE=20
class=3D"literal">sqoop-metastore</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_6=
">13.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_6"=
>13.2.=20
  Syntax</A></SPAN></DT></DL></DIV>
<DIV title=3D"13.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_6"></A>13.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">metastore</CODE> tool configures Sqoop to =
host a=20
shared metadata repository. Multiple users and/or remote users can =
define and=20
execute saved jobs (created with <CODE class=3D"literal">sqoop =
job</CODE>) defined=20
in this metastore.</P>
<P>Clients must be configured to connect to the metastore in <CODE =
class=3D"literal">sqoop-site.xml</CODE>=20
or with the <CODE class=3D"literal">--meta-connect</CODE> =
argument.</P></DIV>
<DIV title=3D"13.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_6"></A>13.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop metastore (generic-args) (metastore-args)=0A=
$ sqoop-metastore (generic-args) (metastore-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any metastore =
arguments,
 the metastore arguments can be entered in any order with respect to one
 another.</P>
<DIV class=3D"table"><A name=3D"idp4006048"></A>
<P class=3D"title"><B>Table&nbsp;27.&nbsp;Metastore management =
options:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Metastore management options:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--shutdown</CODE>     </TD>
    <TD align=3D"left">    Shuts down a running metastore instance       =
       =20
                    on the same machine.     =
</TD></TR></TBODY></TABLE></DIV></DIV><BR=20
class=3D"table-break">
<P>Running <CODE class=3D"literal">sqoop-metastore</CODE> launches a =
shared HSQLDB=20
database instance on the current machine. Clients can connect to this =
metastore=20
and create jobs which can be shared between users for execution.</P>
<P>The location of the metastore=92s files on disk is controlled by the =
<CODE=20
class=3D"literal">sqoop.metastore.server.location</CODE> property in =
<CODE class=3D"literal">conf/sqoop-site.xml</CODE>.
 This should point to a directory on the local filesystem.</P>
<P>The metastore is available over TCP/IP. The port is controlled by the =
<CODE=20
class=3D"literal">sqoop.metastore.server.port</CODE> configuration =
parameter, and=20
defaults to 16000.</P>
<P>Clients should connect to the metastore by specifying <CODE=20
class=3D"literal">sqoop.metastore.client.autoconnect.url</CODE> or <CODE =
class=3D"literal">--meta-connect</CODE>=20
with the value <CODE=20
class=3D"literal">jdbc:hsqldb:hsql://&lt;server-name&gt;:&lt;port&gt;/sqo=
op</CODE>.=20
For example, <CODE=20
class=3D"literal">jdbc:hsqldb:hsql://metaserver.example.com:16000/sqoop</=
CODE>.</P>
<P>This metastore may be hosted on a machine within the Hadoop cluster, =
or
 elsewhere on the network.</P></DIV></DIV>
<DIV title=3D"14.&nbsp;sqoop-merge" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_merge_literal"></A>14.&nbsp;<CODE=20
class=3D"literal">sqoop-merge</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_7=
">14.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_7"=
>14.2.=20
  Syntax</A></SPAN></DT></DL></DIV>
<DIV title=3D"14.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_7"></A>14.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The merge tool allows you to combine two datasets where entries in =
one
 dataset should overwrite entries of an older dataset. For example, an
 incremental import run in last-modified mode will generate multiple =
datasets in=20
HDFS where successively newer data appears in each dataset. The <CODE =
class=3D"literal">merge</CODE>
 tool will "flatten" two datasets into one, taking the newest available =
records=20
for each primary key.</P></DIV>
<DIV title=3D"14.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_7"></A>14.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop merge (generic-args) (merge-args)=0A=
$ sqoop-merge (generic-args) (merge-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any merge =
arguments, the=20
job arguments can be entered in any order with respect to one =
another.</P>
<DIV class=3D"table"><A name=3D"idp4019248"></A>
<P class=3D"title"><B>Table&nbsp;28.&nbsp;Merge options:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Merge options:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--class-name &lt;class&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify the name of the record-specific                         =
   =20
      class to use during the merge job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--jar-file &lt;file&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify the name of the jar to load the                         =
   =20
      record class from.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--merge-key &lt;col&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify the name of a column to use as                          =
   the=20
      merge key.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--new-data &lt;path&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify the path of the newer dataset.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--onto &lt;path&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify the path of the older dataset.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--target-dir &lt;path&gt;</CODE>     </TD>
    <TD align=3D"left">    Specify the target path for the output        =
       =20
                   of the merge job.     =
</TD></TR></TBODY></TABLE></DIV></DIV><BR=20
class=3D"table-break">
<P>The <CODE class=3D"literal">merge</CODE> tool runs a MapReduce job =
that takes=20
two directories as input: a newer dataset, and an older one. These are =
specified=20
with <CODE class=3D"literal">--new-data</CODE> and <CODE=20
class=3D"literal">--onto</CODE> respectively. The output of the =
MapReduce job will=20
be placed in the directory in HDFS specified by <CODE=20
class=3D"literal">--target-dir</CODE>.</P>
<P>When merging the datasets, it is assumed that there is a unique =
primary key=20
value in each record. The column for the primary key is specified with =
<CODE=20
class=3D"literal">--merge-key</CODE>. Multiple rows in the same dataset =
should not
 have the same primary key, or else data loss may occur.</P>
<P>To parse the dataset and extract the key column, the auto-generated =
class=20
from a previous import must be used. You should specify the class name =
and jar=20
file with <CODE class=3D"literal">--class-name</CODE> and <CODE=20
class=3D"literal">--jar-file</CODE>. If this is not availab,e you can =
recreate the=20
class using the <CODE class=3D"literal">codegen</CODE> tool.</P>
<P>The merge tool is typically run after an incremental import with the
 date-last-modified mode (<CODE class=3D"literal">sqoop import =
--incremental=20
lastmodified =85</CODE>).</P>
<P>Supposing two incremental imports were performed, where some older =
data is in=20
an HDFS directory named <CODE class=3D"literal">older</CODE> and newer =
data is in=20
an HDFS directory named <CODE class=3D"literal">newer</CODE>, these =
could be=20
merged like so:</P>
<PRE class=3D"screen">$ sqoop merge --new-data newer --onto older =
--target-dir merged \=0A=
    --jar-file datatypes.jar --class-name Foo --merge-key id</PRE>
<P>This would run a MapReduce job where the value in the <CODE=20
class=3D"literal">id</CODE> column of each row is used to join rows; =
rows in the=20
<CODE class=3D"literal">newer</CODE> dataset will be used in preference =
to rows in=20
the <CODE class=3D"literal">older</CODE> dataset.</P>
<P>This can be used with both SequenceFile-, Avro- and text-based =
incremental=20
imports. The file types of the newer and older datasets must be the=20
same.</P></DIV></DIV>
<DIV title=3D"15.&nbsp;sqoop-codegen" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_codegen_literal"></A>15.&nbsp;<CODE=20
class=3D"literal">sqoop-codegen</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_8=
">15.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_8"=
>15.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_5">15.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"15.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_8"></A>15.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">codegen</CODE> tool generates Java =
classes which=20
encapsulate and interpret imported records. The Java definition of a =
record is
 instantiated as part of the import process, but can also be performed
 separately. For example, if Java source is lost, it can be recreated. =
New=20
versions of a class can be created which use different delimiters =
between=20
fields, and so on.</P></DIV>
<DIV title=3D"15.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_8"></A>15.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop codegen (generic-args) (codegen-args)=0A=
$ sqoop-codegen (generic-args) (codegen-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any codegen =
arguments, the=20
codegen arguments can be entered in any order with respect to one =
another.</P>
<DIV class=3D"table"><A name=3D"idp4041416"></A>
<P class=3D"title"><B>Table&nbsp;29.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4055752"></A>
<P class=3D"title"><B>Table&nbsp;30.&nbsp;Code generation =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Code generation arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--bindir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for compiled objects     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--class-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the generated class name. This overrides                   =
     =20
      <CODE class=3D"literal">--package-name</CODE>. When combined with  =
         =20
                    <CODE class=3D"literal">--jar-file</CODE>, sets the =
input=20
      class.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--jar-file &lt;file&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Disable code generation; use specified jar     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--outdir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Output directory for generated code     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--package-name &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Put auto-generated classes in this package     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-java &lt;m&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                  Java type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4065608"></A>
<P class=3D"title"><B>Table&nbsp;31.&nbsp;Output line formatting=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Output line formatting arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--enclosed-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field enclosing                                 =
  =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the escape character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fields-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the field separator character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--lines-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the end-of-line character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--mysql-delimiters</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Uses MySQL=92s default delimiter set:                           =
       =20
      fields: <CODE class=3D"literal">,</CODE>  lines: <CODE=20
      class=3D"literal">\n</CODE>                                    =
escaped-by:=20
      <CODE class=3D"literal">\</CODE>                                   =
=20
      optionally-enclosed-by: <CODE class=3D"literal">'</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--optionally-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Sets a field enclosing character    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4076336"></A>
<P class=3D"title"><B>Table&nbsp;32.&nbsp;Input parsing =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Input parsing arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field encloser     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input escape                                         =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-fields-terminated-by &lt;char&gt;</CODE> =
    </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input field separator     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-lines-terminated-by &lt;char&gt;</CODE>  =
   </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the input end-of-line                                      =
   =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--input-optionally-enclosed-by =
&lt;char&gt;</CODE>     </TD>
    <TD align=3D"left">    Sets a field enclosing                        =
       =20
                character     </TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4084760"></A>
<P class=3D"title"><B>Table&nbsp;33.&nbsp;Hive arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Hive arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-home &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override <CODE class=3D"literal">$HIVE_HOME</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-import</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Import tables into Hive (Uses Hive=92s                          =
    =20
      default delimiters if none are set.)     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-overwrite</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Overwrite existing data in the Hive table.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--create-hive-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         If set, then the job will fail if the target hive     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         table exits. By default this property is false.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the table name to use when importing                       =
      =20
      to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-drop-import-delims</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Drops <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN=20
      class=3D"emphasis"><EM>\r</EM></SPAN>, and <SPAN=20
      class=3D"emphasis"><EM>\01</EM></SPAN> from string                 =
         =20
         fields when importing to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-delims-replacement</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Replace <SPAN class=3D"emphasis"><EM>\n</EM></SPAN>, <SPAN =
class=3D"emphasis"><EM>\r</EM></SPAN>,=20
      and <SPAN class=3D"emphasis"><EM>\01</EM></SPAN> from string       =
         =20
                   fields with user defined string when importing to =
Hive.    =20
    </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-key</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Name of a hive field to partition are                           =
   =20
      sharded on     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-partition-value &lt;v&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         String-value that serves as partition key                       =
      =20
      for this imported into hive in this job.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--map-column-hive &lt;map&gt;</CODE>     </TD>
    <TD align=3D"left">    Override default mapping from SQL type to     =
       =20
                       Hive type for configured columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>If Hive arguments are provided to the code generation tool, Sqoop =
generates a=20
file containing the HQL statements to create a table and load =
data.</P></DIV>
<DIV title=3D"15.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_5"></A>15.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>Recreate the record interpretation code for the <CODE=20
class=3D"literal">employees</CODE> table of a corporate database:</P>
<PRE class=3D"screen">$ sqoop codegen --connect =
jdbc:mysql://db.example.com/corp \=0A=
    --table employees</PRE></DIV></DIV>
<DIV title=3D"16.&nbsp;sqoop-create-hive-table" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_literal_sqoop_create_hive_table_literal"></A>16.&nbsp;<CODE=20
class=3D"literal">sqoop-create-hive-table</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_9=
">16.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_9"=
>16.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_6">16.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"16.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_9"></A>16.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">create-hive-table</CODE> tool populates a =
Hive=20
metastore with a definition for a table based on a database table =
previously=20
imported to HDFS, or one planned to be imported. This effectively =
performs the
 "<CODE class=3D"literal">--hive-import</CODE>" step of <CODE=20
class=3D"literal">sqoop-import</CODE> without running the preceeding =
import.</P>
<P>If data was already loaded to HDFS, you can use this tool to finish =
the=20
pipeline of importing the data to Hive. You can also create Hive tables =
with=20
this tool; data then can be imported and populated into the target after =
a=20
preprocessing step run by the user.</P></DIV>
<DIV title=3D"16.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_9"></A>16.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop create-hive-table (generic-args) =
(create-hive-table-args)=0A=
$ sqoop-create-hive-table (generic-args) (create-hive-table-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any =
create-hive-table
 arguments, the create-hive-table arguments can be entered in any order =
with=20
respect to one another.</P>
<DIV class=3D"table"><A name=3D"idp4107632"></A>
<P class=3D"title"><B>Table&nbsp;34.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4121920"></A>
<P class=3D"title"><B>Table&nbsp;35.&nbsp;Hive arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Hive arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-home &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override <CODE class=3D"literal">$HIVE_HOME</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-overwrite</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Overwrite existing data in the Hive table.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--create-hive-table</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         If set, then the job will fail if the target hive     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         table exits. By default this property is false.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hive-table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the table name to use when importing                       =
       =20
      to Hive.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--table</CODE>     </TD>
    <TD align=3D"left">    The database table to read the                =
       =20
             definition from.     =
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4130992"></A>
<P class=3D"title"><B>Table&nbsp;36.&nbsp;Output line formatting=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Output line formatting arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--enclosed-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets a required field enclosing                                 =
  =20
      character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--escaped-by &lt;char&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the escape character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--fields-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the field separator character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--lines-terminated-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Sets the end-of-line character     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--mysql-delimiters</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Uses MySQL=92s default delimiter set:                           =
       =20
      fields: <CODE class=3D"literal">,</CODE>  lines: <CODE=20
      class=3D"literal">\n</CODE>                                    =
escaped-by:=20
      <CODE class=3D"literal">\</CODE>                                   =
=20
      optionally-enclosed-by: <CODE class=3D"literal">'</CODE>     =
</TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--optionally-enclosed-by &lt;char&gt;</CODE>     =
</TD>
    <TD align=3D"left">    Sets a field enclosing character    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>Do not use enclosed-by or escaped-by delimiters with output =
formatting
 arguments used to import to Hive. Hive cannot currently parse =
them.</P></DIV>
<DIV title=3D"16.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_6"></A>16.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>Define in Hive a table named <CODE class=3D"literal">emps</CODE> with =
a=20
definition based on a database table named <CODE=20
class=3D"literal">employees</CODE>:</P>
<PRE class=3D"screen">$ sqoop create-hive-table --connect =
jdbc:mysql://db.example.com/corp \=0A=
    --table employees --hive-table emps</PRE></DIV></DIV>
<DIV title=3D"17.&nbsp;sqoop-eval" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_eval_literal"></A>17.&nbsp;<CODE=20
class=3D"literal">sqoop-eval</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
0">17.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_10=
">17.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_7">17.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"17.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_10"></A>17.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>The <CODE class=3D"literal">eval</CODE> tool allows users to quickly =
run simple=20
SQL queries against a database; results are printed to the console. This =
allows=20
users to preview their import queries to ensure they import the data =
they
 expect.</P></DIV>
<DIV title=3D"17.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_10"></A>17.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop eval (generic-args) (eval-args)=0A=
$ sqoop-eval (generic-args) (eval-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any eval =
arguments, the=20
eval arguments can be entered in any order with respect to one =
another.</P>
<DIV class=3D"table"><A name=3D"idp4147632"></A>
<P class=3D"title"><B>Table&nbsp;37.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<DIV class=3D"table"><A name=3D"idp4161968"></A>
<P class=3D"title"><B>Table&nbsp;38.&nbsp;SQL evaluation =
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"SQL evaluation arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">-e,--query &lt;statement&gt;</CODE>     </TD>
    <TD align=3D"left">    Execute <SPAN class=3D"emphasis"><EM><CODE =
class=3D"literal">statement</CODE></EM></SPAN>=20
      in SQL.     </TD></TR></TBODY></TABLE></DIV></DIV><BR =
class=3D"table-break"></DIV>
<DIV title=3D"17.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_7"></A>17.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>Select ten records from the <CODE class=3D"literal">employees</CODE> =
table:</P>
<PRE class=3D"screen">$ sqoop eval --connect =
jdbc:mysql://db.example.com/corp \=0A=
    --query "SELECT * FROM employees LIMIT 10"</PRE>
<P>Insert a row into the <CODE class=3D"literal">foo</CODE> table:</P>
<PRE class=3D"screen">$ sqoop eval --connect =
jdbc:mysql://db.example.com/corp \=0A=
    -e "INSERT INTO foo VALUES(42, 'bar')"</PRE></DIV></DIV>
<DIV title=3D"18.&nbsp;sqoop-list-databases" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_literal_sqoop_list_databases_literal"></A>18.&nbsp;<CODE=20
class=3D"literal">sqoop-list-databases</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
1">18.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_11=
">18.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_8">18.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"18.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_11"></A>18.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>List database schemas present on a server.</P></DIV>
<DIV title=3D"18.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_11"></A>18.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop list-databases (generic-args) =
(list-databases-args)=0A=
$ sqoop-list-databases (generic-args) (list-databases-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any list-databases
 arguments, the list-databases arguments can be entered in any order =
with=20
respect to one another.</P>
<DIV class=3D"table"><A name=3D"idp4171864"></A>
<P class=3D"title"><B>Table&nbsp;39.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"18.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_8"></A>18.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>List database schemas available on a MySQL server:</P>
<PRE class=3D"screen">$ sqoop list-databases --connect =
jdbc:mysql://database.example.com/=0A=
information_schema=0A=
employees</PRE>
<DIV title=3D"Note" class=3D"note" style=3D"margin-right: 0.5in; =
margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Note">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Note]"=20
      src=3D"http://sqoop.apache.org/docs/1.4.4/images/note.png"></TD>
    <TH align=3D"left">Note</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>This only works with HSQLDB, MySQL and Oracle. When using with =
Oracle,
       it is necessary that the user connecting to the database has DBA=20
      privileges.</P></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<DIV title=3D"19.&nbsp;sqoop-list-tables" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A =
name=3D"_literal_sqoop_list_tables_literal"></A>19.&nbsp;<CODE=20
class=3D"literal">sqoop-list-tables</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
2">19.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_12=
">19.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_9">19.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"19.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_12"></A>19.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>List tables present in a database.</P></DIV>
<DIV title=3D"19.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_12"></A>19.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop list-tables (generic-args) =
(list-tables-args)=0A=
$ sqoop-list-tables (generic-args) (list-tables-args)</PRE>
<P>Although the Hadoop generic arguments must preceed any list-tables =
arguments,=20
the list-tables arguments can be entered in any order with respect to =
one=20
another.</P>
<DIV class=3D"table"><A name=3D"idp4191016"></A>
<P class=3D"title"><B>Table&nbsp;40.&nbsp;Common arguments</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Common arguments">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connect &lt;jdbc-uri&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify JDBC connect string     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--connection-manager &lt;class-name&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify connection manager class to                             =
       =20
           use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--driver &lt;class-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Manually specify JDBC driver class                              =
       =20
          to use     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Override $HADOOP_MAPRED_HOME     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--help</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print usage instructions     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password-file</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set path for a file containing the                              =
       =20
          authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-P</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Read password from console     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--password &lt;password&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication password     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--username &lt;username&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Set authentication username     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--verbose</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Print more information while working     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--connection-param-file &lt;filename&gt;</CODE>  =
   </TD>
    <TD align=3D"left">    Optional properties file that                 =
       =20
                       provides connection parameters    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"19.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_9"></A>19.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>List tables available in the "corp" database:</P>
<PRE class=3D"screen">$ sqoop list-tables --connect =
jdbc:mysql://database.example.com/corp=0A=
employees=0A=
payroll_checks=0A=
job_descriptions=0A=
office_supplies</PRE>
<P>In case of postgresql, list tables command with common arguments =
fetches only=20
"public" schema. For custom schema, use --schema argument to list tables =
of=20
particular schema Example</P>
<PRE class=3D"screen">$ sqoop list-tables --connect =
jdbc:postgresql://localhost/corp  --username name -P -- --schema =
payrolldept=0A=
employees=0A=
expenses</PRE></DIV></DIV>
<DIV title=3D"20.&nbsp;sqoop-help" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_help_literal"></A>20.&nbsp;<CODE=20
class=3D"literal">sqoop-help</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
3">20.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_13=
">20.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_10">20.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"20.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_13"></A>20.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>List tools available in Sqoop and explain their usage.</P></DIV>
<DIV title=3D"20.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_13"></A>20.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop help [tool-name]=0A=
$ sqoop-help [tool-name]</PRE>
<P>If no tool name is provided (for example, the user runs <CODE=20
class=3D"literal">sqoop help</CODE>), then the available tools are =
listed. With a=20
tool name, the usage instructions for that specific tool are presented =
on the=20
console.</P></DIV>
<DIV title=3D"20.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_10"></A>20.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>List available tools:</P>
<PRE class=3D"screen">$ sqoop help=0A=
usage: sqoop COMMAND [ARGS]=0A=
=0A=
Available commands:=0A=
  codegen            Generate code to interact with database records=0A=
  create-hive-table  Import a table definition into Hive=0A=
  eval               Evaluate a SQL statement and display the results=0A=
  export             Export an HDFS directory to a database table=0A=
=0A=
...=0A=
=0A=
See 'sqoop help COMMAND' for information on a specific command.</PRE>
<P>Display usage instructions for the <CODE =
class=3D"literal">import</CODE>=20
tool:</P>
<PRE class=3D"screen">$ bin/sqoop help import=0A=
usage: sqoop import [GENERIC-ARGS] [TOOL-ARGS]=0A=
=0A=
Common arguments:=0A=
   --connect &lt;jdbc-uri&gt;     Specify JDBC connect string=0A=
   --connection-manager &lt;class-name&gt;     Specify connection =
manager class to use=0A=
   --driver &lt;class-name&gt;    Manually specify JDBC driver class to =
use=0A=
   --hadoop-mapred-home &lt;dir&gt;            Override =
$HADOOP_MAPRED_HOME=0A=
   --help                   Print usage instructions=0A=
   --password-file          Set path for file containing authentication =
password=0A=
   -P                       Read password from console=0A=
   --password &lt;password&gt;    Set authentication password=0A=
   --username &lt;username&gt;    Set authentication username=0A=
   --verbose                Print more information while working=0A=
   --hadoop-home &lt;dir&gt;      Deprecated. Override $HADOOP_HOME=0A=
=0A=
Import control arguments:=0A=
   --as-avrodatafile             Imports data to Avro Data Files=0A=
   --as-sequencefile             Imports data to SequenceFiles=0A=
   --as-textfile                 Imports data as plain text (default)=0A=
...</PRE></DIV></DIV>
<DIV title=3D"21.&nbsp;sqoop-version" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_literal_sqoop_version_literal"></A>21.&nbsp;<CODE=20
class=3D"literal">sqoop-version</CODE></H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
4">21.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_14=
">21.2.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_example_i=
nvocations_11">21.3.=20
  Example Invocations</A></SPAN></DT></DL></DIV>
<DIV title=3D"21.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_purpose_14"></A>21.1.&nbsp;Purpose</H3></DIV></DIV></DIV>
<P>Display version information for Sqoop.</P></DIV>
<DIV title=3D"21.2.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_syntax_14"></A>21.2.&nbsp;Syntax</H3></DIV></DIV></DIV>
<PRE class=3D"screen">$ sqoop version=0A=
$ sqoop-version</PRE></DIV>
<DIV title=3D"21.3.&nbsp;Example Invocations" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_example_invocations_11"></A>21.3.&nbsp;Example=20
Invocations</H3></DIV></DIV></DIV>
<P>Display the version:</P>
<PRE class=3D"screen">$ sqoop version=0A=
Sqoop {revnumber}=0A=
git commit id 46b3e06b79a8411320d77c984c3030db47dd1c22=0A=
Compiled by aaron@jargon on Mon May 17 13:43:22 PDT =
2010</PRE></DIV></DIV>
<DIV title=3D"22.&nbsp;Sqoop-HCatalog Integration" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_sqoop_hcatalog_integration"></A>22.&nbsp;Sqoop-HCatalog=20
Integration</H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_hcatalog_=
background">22.1.=20
  HCatalog Background</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_exposing_=
hcatalog_tables_to_sqoop">22.2.=20
  Exposing HCatalog Tables to Sqoop</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_new_comma=
nd_line_options">22.2.1.=20
    New Command Line Options</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_sqoop_hive_options">22.2.2.=20
    Supported Sqoop Hive Options</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_options">22.2.3.=20
    Unsupported Sqoop Options</A></SPAN></DT>
    <DD>
    <DL>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_hive_import_options">22.2.3.1.=20
      Unsupported Sqoop Hive Import Options</A></SPAN></DT>
      <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_export_and_import_options">22.2.3.2.=20
      Unsupported Sqoop Export and Import =
Options</A></SPAN></DT></DL></DD>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_ignored_s=
qoop_options">22.2.4.=20
    Ignored Sqoop Options</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_automatic=
_table_creation">22.3.=20
  Automatic Table Creation</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_delimited=
_text_formats_and_field_and_line_delimiter_characters">22.4.=20
  Delimited Text Formats and Field and Line Delimiter =
Characters</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_hcatalog_=
table_requirements">22.5.=20
  HCatalog Table Requirements</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_support_f=
or_partitioning">22.6.=20
  Support for Partitioning</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_ma=
pping">22.7.=20
  Schema Mapping</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_support_f=
or_hcatalog_data_types">22.8.=20
  Support for HCatalog Data Types</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_providing=
_hive_and_hcatalog_libraries_for_the_sqoop_job">22.9.=20
  Providing Hive and HCatalog Libraries for the Sqoop =
Job</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_examples"=
>22.10.=20
  Examples</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_import">2=
2.11.=20
  Import</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_export">2=
2.12.=20
  Export</A></SPAN></DT></DL></DIV>
<DIV title=3D"22.1.&nbsp;HCatalog Background" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_hcatalog_background"></A>22.1.&nbsp;HCatalog=20
Background</H3></DIV></DIV></DIV>
<P>HCatalog is a table and storage management service for Hadoop that =
enables
 users with different data processing tools =96 Pig, MapReduce, and Hive =
=96 to more=20
easily read and write data on the grid. HCatalog=92s table abstraction =
presents=20
users with a relational view of data in the Hadoop distributed file =
system=20
(HDFS) and ensures that users need not worry about where or in what =
format their=20
data is stored: RCFile format, text files, or SequenceFiles.</P>
<P>HCatalog supports reading and writing files in any format for which a =
Hive
 SerDe (serializer-deserializer) has been written. By default, HCatalog =
supports=20
RCFile, CSV, JSON, and SequenceFile formats. To use a custom format, you =
must=20
provide the InputFormat and OutputFormat as well as the SerDe.</P>
<P>The ability of HCatalog to abstract various storage formats is used =
in
 providing the RCFile (and future file types) support to =
Sqoop.</P></DIV>
<DIV title=3D"22.2.&nbsp;Exposing HCatalog Tables to Sqoop" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_exposing_hcatalog_tables_to_sqoop"></A>22.2.&nbsp;Exposing =
HCatalog=20
Tables to Sqoop</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_new_comma=
nd_line_options">22.2.1.=20
  New Command Line Options</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_sqoop_hive_options">22.2.2.=20
  Supported Sqoop Hive Options</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_options">22.2.3.=20
  Unsupported Sqoop Options</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_hive_import_options">22.2.3.1.=20
    Unsupported Sqoop Hive Import Options</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_export_and_import_options">22.2.3.2.=20
    Unsupported Sqoop Export and Import =
Options</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_ignored_s=
qoop_options">22.2.4.=20
  Ignored Sqoop Options</A></SPAN></DT></DL></DIV>
<P>HCatalog integration with Sqoop is patterned on an existing feature =
set that
 supports Avro and Hive tables. Five new command line options are =
introduced,
 and some command line options defined for Hive are reused.</P>
<DIV title=3D"22.2.1.&nbsp;New Command Line Options" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_new_command_line_options"></A>22.2.1.&nbsp;New=20
Command Line Options</H4></DIV></DIV></DIV>
<DIV class=3D"variablelist">
<DL>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hcatalog-database</CODE>=20
  </SPAN></DT>
  <DD>Specifies the database name for the HCatalog table. If not =
specified, the=20
  default database name <CODE class=3D"literal">default</CODE> is used. =
Providing=20
  the <CODE class=3D"literal">--hcatalog-database</CODE> option without =
<CODE=20
  class=3D"literal">--hcatalog-table</CODE> is an error. This is not a =
required=20
  option. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hcatalog-table</CODE>=20
  </SPAN></DT>
  <DD>The argument value for this option is the HCatalog tablename. The =
presence=20
  of the <CODE class=3D"literal">--hcatalog-table</CODE> option =
signifies that the=20
  import or export job is done using HCatalog tables, and it is a =
required=20
  option for HCatalog jobs. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hcatalog-home</CODE>=20
  </SPAN></DT>
  <DD>The home directory for the HCatalog installation. The directory is
   expected to have a <CODE class=3D"literal">lib</CODE> subdirectory =
and a <CODE=20
  class=3D"literal">share/hcatalog</CODE> subdirectory with necessary =
HCatalog=20
  libraries. If not specified, the system property <CODE=20
  class=3D"literal">hcatalog.home</CODE> will be checked and failing =
that, a=20
  system environment variable <CODE class=3D"literal">HCAT_HOME</CODE> =
will be=20
  checked.  If none of these are set, the default value will be used and =

  currently the default is set to <CODE=20
  class=3D"literal">/usr/lib/hcatalog</CODE>. This is not a required =
option. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--create-hcatalog-table</CODE>=20
  </SPAN></DT>
  <DD>This option specifies whether an HCatalog table should be created
   automatically when importing data. By default, HCatalog tables are =
assumed to=20
  exist. The table name will be the same as the database table name =
translated=20
  to lower case. Further described in <CODE class=3D"literal">Automatic =
Table=20
  Creation</CODE> below. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hcatalog-storage-stanza</CODE>=20
  </SPAN></DT>
  <DD>This option specifies the storage stanza to be appended to the =
table.
   Further described in <CODE class=3D"literal">Automatic Table =
Creation</CODE>=20
  below. </DD></DL></DIV></DIV>
<DIV title=3D"22.2.2.&nbsp;Supported Sqoop Hive Options" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_supported_sqoop_hive_options"></A>22.2.2.&nbsp;Supported Sqoop =
Hive=20
Options</H4></DIV></DIV></DIV>
<P>The following Sqoop options are also used along with the <CODE =
class=3D"literal">--hcatalog-table</CODE>
 option to provide additional input to the HCatalog jobs. Some of the =
existing
 Hive import job options are reused with HCatalog jobs instead of =
creating
 HCatalog-specific options for the same purpose.</P>
<DIV class=3D"variablelist">
<DL>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--map-column-hive</CODE>=20
  </SPAN></DT>
  <DD>This option maps a database column to HCatalog with a specific =
HCatalog
   type. </DD>
  <DT><SPAN class=3D"term"><CODE class=3D"literal">--hive-home</CODE> =
</SPAN></DT>
  <DD>The Hive home location. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hive-partition-key</CODE>=20
  </SPAN></DT>
  <DD>Used for static partitioning filter. The partitioning key should =
be of
   type STRING. There can be only one static partitioning key. </DD>
  <DT><SPAN class=3D"term"><CODE =
class=3D"literal">--hive-partition-value</CODE>=20
  </SPAN></DT>
  <DD>The value associated with the partition. </DD></DL></DIV></DIV>
<DIV title=3D"22.2.3.&nbsp;Unsupported Sqoop Options" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_unsupported_sqoop_options"></A>22.2.3.&nbsp;Unsupported Sqoop=20
Options</H4></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_hive_import_options">22.2.3.1.=20
  Unsupported Sqoop Hive Import Options</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_unsupport=
ed_sqoop_export_and_import_options">22.2.3.2.=20
  Unsupported Sqoop Export and Import Options</A></SPAN></DT></DL></DIV>
<DIV title=3D"22.2.3.1.&nbsp;Unsupported Sqoop Hive Import Options" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H5 class=3D"title"><A=20
name=3D"_unsupported_sqoop_hive_import_options"></A>22.2.3.1.&nbsp;Unsupp=
orted=20
Sqoop Hive Import Options</H5></DIV></DIV></DIV>
<P>The following Sqoop Hive import options are not supported with =
HCatalog=20
jobs.</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem"><CODE class=3D"literal">--hive-import</CODE> =
</LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--hive-overwrite</CODE> =

</LI></UL></DIV></DIV>
<DIV title=3D"22.2.3.2.&nbsp;Unsupported Sqoop Export and Import =
Options" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H5 class=3D"title"><A=20
name=3D"_unsupported_sqoop_export_and_import_options"></A>22.2.3.2.&nbsp;=
Unsupported=20
Sqoop Export and Import Options</H5></DIV></DIV></DIV>
<P>The following Sqoop export and import options are not supported with =
HCatalog=20
jobs.</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem"><CODE class=3D"literal">--direct</CODE> </LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--export-dir</CODE> =
</LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--target-dir</CODE> =
</LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--warehouse-dir</CODE> =
</LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--append</CODE> </LI>
  <LI class=3D"listitem"><CODE =
class=3D"literal">--as-sequencefile</CODE> </LI>
  <LI class=3D"listitem"><CODE class=3D"literal">--as-avrofile</CODE>=20
</LI></UL></DIV></DIV></DIV>
<DIV title=3D"22.2.4.&nbsp;Ignored Sqoop Options" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_ignored_sqoop_options"></A>22.2.4.&nbsp;Ignored=20
Sqoop Options</H4></DIV></DIV></DIV>
<P>The following options are ignored with HCatalog jobs.</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">All input delimiter options are ignored. </LI>
  <LI class=3D"listitem">Output delimiters are generally ignored unless =
either=20
  <CODE class=3D"literal">--hive-drop-import-delims</CODE> or <CODE =
class=3D"literal">--hive-delims-replacement</CODE>=20
  is used. When the <CODE =
class=3D"literal">--hive-drop-import-delims</CODE> or=20
  <CODE class=3D"literal">--hive-delims-replacement</CODE> option is =
specified,=20
  all <CODE class=3D"literal">CHAR</CODE> type database table columns =
will be=20
  post-processed to either remove or replace the delimiters, =
respectively. See=20
  <CODE class=3D"literal">Delimited Text Formats and Field and Line =
Delimiter=20
  Characters</CODE> below. This is only needed if the HCatalog table =
uses text=20
  formats. </LI></UL></DIV></DIV></DIV>
<DIV title=3D"22.3.&nbsp;Automatic Table Creation" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_automatic_table_creation"></A>22.3.&nbsp;Automatic=20
Table Creation</H3></DIV></DIV></DIV>
<P>One of the key features of Sqoop is to manage and create the table =
metadata
 when importing into Hadoop. HCatalog import jobs also provide for this =
feature=20
with the option <CODE class=3D"literal">--create-hcatalog-table</CODE>.=20
Furthermore, one of the important benefits of the HCatalog integration =
is to=20
provide storage agnosticism to Sqoop data movement jobs. To provide for =
that=20
feature, HCatalog import jobs provide an option that lets a user =
specifiy the
 storage format for the created table.</P>
<P>The option <CODE class=3D"literal">--create-hcatalog-table</CODE> is =
used as an=20
indicator that a table has to be created as part of the HCatalog import =
job.  If=20
the option <CODE class=3D"literal">--create-hcatalog-table</CODE> is =
specified and=20
the table exists, then the table creation will fail and the job will be=20
aborted.</P>
<P>The option <CODE class=3D"literal">--hcatalog-storage-stanza</CODE> =
can be used=20
to specify the storage format of the newly created table. The default =
value for=20
this option is <CODE class=3D"literal">stored as rcfile</CODE>. The =
value=20
specified for this option is assumed to be a valid Hive storage format=20
expression. It will be appended to the <CODE class=3D"literal">create =
table</CODE>
 command generated by the HCatalog import job as part of automatic table
 creation. Any error in the storage stanza will cause the table creation =
to fail=20
and the import job will be aborted.</P>
<P>Any additional resources needed to support the storage format =
referenced in
 the option <CODE class=3D"literal">--hcatalog-storage-stanza</CODE> =
should be=20
provided to the job either by placing them in <CODE=20
class=3D"literal">$HIVE_HOME/lib</CODE> or by providing them in <CODE =
class=3D"literal">HADOOP_CLASSPATH</CODE>
 and <CODE class=3D"literal">LIBJAR</CODE> files.</P>
<P>If the option <CODE class=3D"literal">--hive-partition-key</CODE> is =
specified,=20
then the value of this option is used as the partitioning key for the =
newly=20
created table. Only one partitioning key can be specified with this =
option.</P>
<P>Object names are mapped to the lowercase equivalents as specified =
below when=20
mapped to an HCatalog table. This includes the table name (which is the =
same as=20
the external store table name converted to lower case) and field=20
names.</P></DIV>
<DIV title=3D"22.4.&nbsp;Delimited Text Formats and Field and Line =
Delimiter Characters"=20
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_delimited_text_formats_and_field_and_line_delimiter_characters">=
</A>22.4.&nbsp;Delimited=20
Text Formats and Field and Line Delimiter =
Characters</H3></DIV></DIV></DIV>
<P>HCatalog supports delimited text format as one of the table storage =
formats.
 But when delimited text is used and the imported data has fields that =
contain
 those delimiters, then the data may be parsed into a different number =
of fields=20
and records by Hive, thereby losing data fidelity.</P>
<P>For this case, one of these existing Sqoop import options can be =
used:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem"><CODE =
class=3D"literal">--hive-delims-replacement</CODE>=20
  </LI>
  <LI class=3D"listitem"><CODE =
class=3D"literal">--hive-drop-import-delims</CODE>=20
  </LI></UL></DIV>
<P>If either of these options is provided for import, then any column of =
type
 STRING will be formatted with the Hive delimiter processing and then =
written to=20
the HCatalog table.</P></DIV>
<DIV title=3D"22.5.&nbsp;HCatalog Table Requirements" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_hcatalog_table_requirements"></A>22.5.&nbsp;HCatalog=20
Table Requirements</H3></DIV></DIV></DIV>
<P>The HCatalog table should be created before using it as part of a =
Sqoop job
 if the default table creation options (with optional storage stanza) =
are not
 sufficient. All storage formats supported by HCatalog can be used with =
the
 creation of the HCatalog tables. This makes this feature readily adopt =
new
 storage formats that come into the Hive project, such as ORC =
files.</P></DIV>
<DIV title=3D"22.6.&nbsp;Support for Partitioning" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_support_for_partitioning"></A>22.6.&nbsp;Support for=20
Partitioning</H3></DIV></DIV></DIV>
<P>The Sqoop HCatalog feature supports the following table types:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Unpartitioned tables </LI>
  <LI class=3D"listitem">Partitioned tables with a static partitioning =
key=20
  specified </LI>
  <LI class=3D"listitem">Partitioned tables with dynamic partition keys =
from the=20
  database result set </LI>
  <LI class=3D"listitem">Partitioned tables with a combination of a =
static key and=20
  additional dynamic partitioning keys </LI></UL></DIV></DIV>
<DIV title=3D"22.7.&nbsp;Schema Mapping" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A name=3D"_schema_mapping"></A>22.7.&nbsp;Schema=20
Mapping</H3></DIV></DIV></DIV>
<P>Sqoop currently does not support column name mapping. However, the =
user is=20
allowed to override the type mapping. Type mapping loosely follows the =
Hive type=20
mapping already present in Sqoop except that SQL types =93FLOAT=94 and =
=93REAL=94 are=20
mapped to HCatalog type =93float=94. In the Sqoop type mapping for Hive, =
these two=20
are mapped to =93double=94. Type mapping is primarily used for checking =
the column=20
definition correctness only and can be overridden with the =
--map-column-hive=20
option.</P>
<P>All types except binary are assignable to a String type.</P>
<P>Any field of number type (int, shortint, tinyint, bigint and =
bigdecimal,
 float and double) is assignable to another field of any number type =
during
 exports and imports. Depending on the precision and scale of the target =
type of=20
assignment, truncations can occur.</P>
<P>Furthermore, date/time/timestamps are mapped to string (the full
 date/time/timestamp representation) or bigint (the number of =
milliseconds since=20
epoch) during imports and exports.</P>
<P>BLOBs and CLOBs are only supported for imports. The BLOB/CLOB objects =
when
 imported are stored in a Sqoop-specific format and knowledge of this =
format is=20
needed for processing these objects in a Pig/Hive job or another Map =
Reduce
 job.</P>
<P>Database column names are mapped to their lowercase equivalents when =
mapped
 to the HCatalog fields. Currently, case-sensitive database object names =
are not=20
supported.</P>
<P>Projection of a set of columns from a table to an HCatalog table or =
loading
 to a column projection is allowed, subject to table constraints. The =
dynamic
 partitioning columns, if any, must be part of the projection when =
importing
 data into HCatalog tables.</P>
<P>Dynamic partitioning fields should be mapped to database columns that =
are
 defined with the NOT NULL attribute (although this is not validated). A =
null
 value during import for a dynamic partitioning column will abort the =
Sqoop
 job.</P></DIV>
<DIV title=3D"22.8.&nbsp;Support for HCatalog Data Types" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_support_for_hcatalog_data_types"></A>22.8.&nbsp;Support for =
HCatalog Data=20
Types</H3></DIV></DIV></DIV>
<P>All the primitive HCatalog types are supported. Currently all the =
complex
 HCatalog types are unsupported.</P>
<P>BLOB/CLOB database types are only supported for imports.</P></DIV>
<DIV title=3D"22.9.&nbsp;Providing Hive and HCatalog Libraries for the =
Sqoop Job"=20
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_providing_hive_and_hcatalog_libraries_for_the_sqoop_job"></A>22.=
9.&nbsp;Providing=20
Hive and HCatalog Libraries for the Sqoop Job</H3></DIV></DIV></DIV>
<P>With the support for HCatalog added to Sqoop, any HCatalog job =
depends on a
 set of jar files being available both on the Sqoop client host and =
where the
 Map/Reduce tasks run. To run HCatalog jobs, the environment variable =
<CODE=20
class=3D"literal">HADOOP_CLASSPATH</CODE> must be set up as shown below =
before=20
launching the Sqoop HCatalog jobs.</P>
<P><CODE class=3D"literal">HADOOP_CLASSPATH=3D$(hcat -classpath)</CODE> =
<CODE class=3D"literal">export=20
HADOOP_CLASSPATH</CODE></P>
<P>The necessary HCatalog dependencies will be copied to the distributed =
cache
 automatically by the Sqoop job.</P></DIV>
<DIV title=3D"22.10.&nbsp;Examples" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_examples"></A>22.10.&nbsp;Examples</H3></DIV></DIV></DIV>
<P>Create an HCatalog table, such as:</P>
<P><CODE class=3D"literal">hcat -e "create table txn(txn_date string, =
cust_id=20
string, amount float, store_id int) partitioned by (cust_id string) =
stored as=20
rcfile;"</CODE></P>
<P>Then Sqoop import and export of the "txn" HCatalog table can be =
invoked as
 follows:</P></DIV>
<DIV title=3D"22.11.&nbsp;Import" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_import"></A>22.11.&nbsp;Import</H3></DIV></DIV></DIV>
<P><CODE class=3D"literal">$SQOOP_HOME/bin/sqoop import --connect =
&lt;jdbc-url&gt;=20
-table &lt;table-name&gt; --hcatalog-table txn &lt;other sqoop=20
options&gt;</CODE></P></DIV>
<DIV title=3D"22.12.&nbsp;Export" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_export"></A>22.12.&nbsp;Export</H3></DIV></DIV></DIV>
<P><CODE class=3D"literal">$SQOOP_HOME/bin/sqoop export --connect =
&lt;jdbc-url&gt;=20
-table &lt;table-name&gt; --hcatalog-table txn &lt;other sqoop=20
options&gt;</CODE></P></DIV></DIV>
<DIV title=3D"23.&nbsp;Compatibility Notes" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_compatibility_notes"></A>23.&nbsp;Compatibility=20
Notes</H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_supported=
_databases">23.1.=20
  Supported Databases</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql">23=
.2.=20
  MySQL</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_zerodatet=
imebehavior">23.2.1.=20
    zeroDateTimeBehavior</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_u=
nsigned_literal_columns">23.2.2.=20
    <CODE class=3D"literal">UNSIGNED</CODE> columns</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_b=
lob_literal_and_literal_clob_literal_columns">23.2.3.=20
    <CODE class=3D"literal">BLOB</CODE> and <CODE =
class=3D"literal">CLOB</CODE>=20
    columns</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode">23.2.4.=20
    Importing views in direct mode</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de_transactions">23.2.5.=20
    Direct-mode Transactions</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_postgresq=
l">23.3.=20
  PostgreSQL</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode_2">23.3.1.=20
    Importing views in direct mode</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle">2=
3.4.=20
  Oracle</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_dates_and=
_times">23.4.1.=20
    Dates and Times</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_de=
finition_in_hive">23.5.=20
  Schema Definition in Hive</A></SPAN></DT></DL></DIV>
<P>Sqoop uses JDBC to connect to databases and adheres to published =
standards as=20
much as possible. For databases which do not support standards-compliant =
SQL,=20
Sqoop uses alternate codepaths to provide functionality. In general, =
Sqoop is=20
believed to be compatible with a large number of databases, but it is =
tested=20
with only a few.</P>
<P>Nonetheless, several database-specific decisions were made in the
 implementation of Sqoop, and some databases offer additional settings =
which are=20
extensions to the standard.</P>
<P>This section describes the databases tested with Sqoop, any =
exceptions in=20
Sqoop=92s handling of each database relative to the norm, and any=20
database-specific settings available in Sqoop.</P>
<DIV title=3D"23.1.&nbsp;Supported Databases" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_supported_databases"></A>23.1.&nbsp;Supported=20
Databases</H3></DIV></DIV></DIV>
<P>While JDBC is a compatibility layer that allows a program to access =
many=20
different databases through a common API, slight differences in the SQL =
language=20
spoken by each database may mean that Sqoop can=92t use every database =
out of the=20
box, or that some databases may be used in an inefficient manner.</P>
<P>When you provide a connect string to Sqoop, it inspects the protocol =
scheme=20
to determine appropriate vendor-specific logic to use. If Sqoop knows =
about a=20
given database, it will work automatically. If not, you may need to =
specify the=20
driver class to load via <CODE class=3D"literal">--driver</CODE>. This =
will use a=20
generic code path which will use standard SQL to access the database. =
Sqoop=20
provides some databases with faster, non-JDBC-based access mechanisms. =
These can=20
be enabled by specfying the <CODE class=3D"literal">--direct</CODE> =
parameter.</P>
<P>Sqoop includes vendor-specific support for the following =
databases:</P>
<DIV class=3D"informaltable">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left">
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Database     </TH>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         version     </TH>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--direct</CODE> support?     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         connect string matches     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         HSQLDB     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         1.8.0+     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         No     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;"><CODE=20
      class=3D"literal">jdbc:hsqldb:*//</CODE>     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         MySQL     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         5.0+     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Yes     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;"><CODE=20
      class=3D"literal">jdbc:mysql://</CODE>     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Oracle     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         10.2.0+     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         No     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;"><CODE=20
      class=3D"literal">jdbc:oracle:*//</CODE>     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         PostgreSQL     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         8.3+     </TD>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         Yes (import only)     </TD>
    <TD align=3D"left"><CODE class=3D"literal">jdbc:postgresql://</CODE> =
   =20
  </TD></TR></TBODY></TABLE></DIV>
<P>Sqoop may work with older versions of the databases listed, but we =
have only=20
tested it with the versions specified above.</P>
<P>Even if Sqoop supports a database internally, you may still need to =
install=20
the database vendor=92s JDBC driver in your <CODE=20
class=3D"literal">$SQOOP_HOME/lib</CODE> path on your client. Sqoop can =
load=20
classes from any jars in <CODE class=3D"literal">$SQOOP_HOME/lib</CODE> =
on the=20
client and will use them as part of any MapReduce jobs it runs; unlike =
older=20
versions, you no longer need to install JDBC jars in the Hadoop library =
path on=20
your servers.</P></DIV>
<DIV title=3D"23.2.&nbsp;MySQL" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_mysql"></A>23.2.&nbsp;MySQL</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_zerodatet=
imebehavior">23.2.1.=20
  zeroDateTimeBehavior</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_u=
nsigned_literal_columns">23.2.2.=20
  <CODE class=3D"literal">UNSIGNED</CODE> columns</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_literal_b=
lob_literal_and_literal_clob_literal_columns">23.2.3.=20
  <CODE class=3D"literal">BLOB</CODE> and <CODE =
class=3D"literal">CLOB</CODE>=20
  columns</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode">23.2.4.=20
  Importing views in direct mode</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de_transactions">23.2.5.=20
  Direct-mode Transactions</A></SPAN></DT></DL></DIV>
<P>JDBC Driver: <A class=3D"ulink" =
href=3D"http://www.mysql.com/downloads/connector/j/"=20
target=3D"_top">MySQL Connector/J</A></P>
<P>MySQL v5.0 and above offers very thorough coverage by Sqoop. Sqoop =
has been=20
tested with <CODE=20
class=3D"literal">mysql-connector-java-5.1.13-bin.jar</CODE>.</P>
<DIV title=3D"23.2.1.&nbsp;zeroDateTimeBehavior" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_zerodatetimebehavior"></A>23.2.1.&nbsp;zeroDateTimeBehavior</H4>=
</DIV></DIV></DIV>
<P>MySQL allows values of <CODE class=3D"literal">'0000-00-00\'</CODE> =
for <CODE=20
class=3D"literal">DATE</CODE> columns, which is a non-standard extension =
to SQL.=20
When communicated via JDBC, these values are handled in one of three =
different=20
ways:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Convert to <CODE class=3D"literal">NULL</CODE>. =
</LI>
  <LI class=3D"listitem">Throw an exception in the client. </LI>
  <LI class=3D"listitem">Round to the nearest legal date (<CODE=20
  class=3D"literal">'0001-01-01\'</CODE>). </LI></UL></DIV>
<P>You specify the behavior by using the <CODE=20
class=3D"literal">zeroDateTimeBehavior</CODE> property of the connect =
string. If a=20
<CODE class=3D"literal">zeroDateTimeBehavior</CODE> property is not =
specified,=20
Sqoop uses the <CODE class=3D"literal">convertToNull</CODE> =
behavior.</P>
<P>You can override this behavior. For example:</P>
<PRE class=3D"screen">$ sqoop import --table foo \=0A=
    --connect =
jdbc:mysql://db.example.com/someDb?zeroDateTimeBehavior=3Dround</PRE></DI=
V>
<DIV title=3D"23.2.2.&nbsp;UNSIGNED columns" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_literal_unsigned_literal_columns"></A>23.2.2.&nbsp;<CODE=20
class=3D"literal">UNSIGNED</CODE> columns</H4></DIV></DIV></DIV>
<P>Columns with type <CODE class=3D"literal">UNSIGNED</CODE> in MySQL =
can hold=20
values between 0 and 2^32 (<CODE class=3D"literal">4294967295</CODE>), =
but the=20
database will report the data type to Sqoop as <CODE=20
class=3D"literal">INTEGER</CODE>, which will can hold values between =
<CODE class=3D"literal">-2147483648</CODE>=20
and <CODE class=3D"literal">\+2147483647</CODE>. Sqoop cannot currently =
import=20
<CODE class=3D"literal">UNSIGNED</CODE> values above <CODE=20
class=3D"literal">2147483647</CODE>.</P></DIV>
<DIV title=3D"23.2.3.&nbsp;BLOB and CLOB columns" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_literal_blob_literal_and_literal_clob_literal_columns"></A>23.2.=
3.&nbsp;<CODE=20
class=3D"literal">BLOB</CODE> and <CODE class=3D"literal">CLOB</CODE>=20
columns</H4></DIV></DIV></DIV>
<P>Sqoop=92s direct mode does not support imports of <CODE=20
class=3D"literal">BLOB</CODE>, <CODE class=3D"literal">CLOB</CODE>, or =
<CODE class=3D"literal">LONGVARBINARY</CODE>=20
columns. Use JDBC-based imports for these columns; do not supply the =
<CODE=20
class=3D"literal">--direct</CODE> argument to the import tool.</P></DIV>
<DIV title=3D"23.2.4.&nbsp;Importing views in direct mode" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_importing_views_in_direct_mode"></A>23.2.4.&nbsp;Importing =
views in=20
direct mode</H4></DIV></DIV></DIV>
<P>Sqoop is currently not supporting import from view in direct mode. =
Use JDBC=20
based (non direct) mode in case that you need to import view (simply =
omit <CODE=20
class=3D"literal">--direct</CODE> parameter).</P></DIV>
<DIV title=3D"23.2.5.&nbsp;Direct-mode Transactions" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_direct_mode_transactions"></A>23.2.5.&nbsp;Direct-mode=20
Transactions</H4></DIV></DIV></DIV>
<P>For performance, each writer will commit the current transaction
 approximately every 32 MB of exported data. You can control this by =
specifying=20
the following argument <SPAN class=3D"emphasis"><EM>before</EM></SPAN> =
any=20
tool-specific arguments: <CODE class=3D"literal">-D
 sqoop.mysql.export.checkpoint.bytes=3Dsize</CODE>, where <SPAN=20
class=3D"emphasis"><EM>size</EM></SPAN> is a value in bytes. Set <SPAN =
class=3D"emphasis"><EM>size</EM></SPAN>=20
to 0 to disable intermediate checkpoints, but individual files being =
exported=20
will continue to be committed independently of one another.</P>
<P>Sometimes you need to export large data with Sqoop to a live MySQL =
cluster=20
that is under a high load serving random queries from the users of your=20
application. While data consistency issues during the export can be =
easily=20
solved with a staging table, there is still a problem with the =
performance=20
impact caused by the heavy export.</P>
<P>First off, the resources of MySQL dedicated to the import process can =
affect
 the performance of the live product, both on the master and on the =
slaves.
 Second, even if the servers can handle the import with no significant
 performance impact (mysqlimport should be relatively "cheap"), =
importing big
 tables can cause serious replication lag in the cluster risking data
 inconsistency.</P>
<P>With <CODE class=3D"literal">-D =
sqoop.mysql.export.sleep.ms=3Dtime</CODE>, where=20
<SPAN class=3D"emphasis"><EM>time</EM></SPAN> is a value in =
milliseconds, you can=20
let the server relax between checkpoints and the replicas catch up by =
pausing=20
the export process after transferring the number of bytes specified in =
<CODE=20
class=3D"literal">sqoop.mysql.export.checkpoint.bytes</CODE>. Experiment =
with=20
different settings of these two parameters to archieve an export pace =
that=20
doesn=92t endanger the stability of your MySQL cluster.</P>
<DIV title=3D"Important" class=3D"important" style=3D"margin-right: =
0.5in; margin-left: 0.5in;">
<TABLE border=3D"0" summary=3D"Important">
  <TBODY>
  <TR>
    <TD width=3D"25" align=3D"center" valign=3D"top" rowspan=3D"2"><IMG =
alt=3D"[Important]"=20
      =
src=3D"http://sqoop.apache.org/docs/1.4.4/images/important.png"></TD>
    <TH align=3D"left">Important</TH></TR>
  <TR>
    <TD align=3D"left" valign=3D"top">
      <P>Note that any arguments to Sqoop that are of the form <CODE =
class=3D"literal">-D
       parameter=3Dvalue</CODE> are Hadoop <SPAN =
class=3D"emphasis"><EM>generic=20
      arguments</EM></SPAN> and must appear before any tool-specific =
arguments=20
      (for example, <CODE class=3D"literal">--connect</CODE>, <CODE =
class=3D"literal">--table</CODE>,=20
      etc). Don=92t forget that these parameters are only supported with =
the <CODE=20
      class=3D"literal">--direct</CODE> flag=20
set.</P></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<DIV title=3D"23.3.&nbsp;PostgreSQL" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_postgresql"></A>23.3.&nbsp;PostgreSQL</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_importing=
_views_in_direct_mode_2">23.3.1.=20
  Importing views in direct mode</A></SPAN></DT></DL></DIV>
<P>Sqoop supports JDBC-based connector for PostgreSQL: <A =
class=3D"ulink" href=3D"http://jdbc.postgresql.org/"=20
target=3D"_top">http://jdbc.postgresql.org/</A></P>
<P>The connector has been tested using JDBC driver version "9.1-903 JDBC =
4" with
 PostgreSQL server 9.1.</P>
<DIV title=3D"23.3.1.&nbsp;Importing views in direct mode" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_importing_views_in_direct_mode_2"></A>23.3.1.&nbsp;Importing =
views in=20
direct mode</H4></DIV></DIV></DIV>
<P>Sqoop is currently not supporting import from view in direct mode. =
Use JDBC=20
based (non direct) mode in case that you need to import view (simply =
omit <CODE=20
class=3D"literal">--direct</CODE> parameter).</P></DIV></DIV>
<DIV title=3D"23.4.&nbsp;Oracle" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_oracle"></A>23.4.&nbsp;Oracle</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_dates_and=
_times">23.4.1.=20
  Dates and Times</A></SPAN></DT></DL></DIV>
<P>JDBC Driver: <A class=3D"ulink" =
href=3D"http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htd=
ocs/jdbc_112010.html"=20
target=3D"_top">Oracle JDBC Thin Driver</A> - Sqoop is compatible with =
<CODE=20
class=3D"literal">ojdbc6.jar</CODE>.</P>
<P>Sqoop has been tested with Oracle 10.2.0 Express Edition. Oracle is =
notable=20
in its different approach to SQL from the ANSI standard, and its =
non-standard=20
JDBC driver. Therefore, several features work differently.</P>
<DIV title=3D"23.4.1.&nbsp;Dates and Times" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_dates_and_times"></A>23.4.1.&nbsp;Dates =
and=20
Times</H4></DIV></DIV></DIV>
<P>Oracle JDBC represents <CODE class=3D"literal">DATE</CODE> and <CODE =
class=3D"literal">TIME</CODE>=20
SQL types as <CODE class=3D"literal">TIMESTAMP</CODE> values. Any <CODE =
class=3D"literal">DATE</CODE>=20
columns in an Oracle database will be imported as a <CODE=20
class=3D"literal">TIMESTAMP</CODE> in Sqoop, and Sqoop-generated code =
will store=20
these values in <CODE class=3D"literal">java.sql.Timestamp</CODE> =
fields.</P>
<P>When exporting data back to a database, Sqoop parses text fields as =
<CODE=20
class=3D"literal">TIMESTAMP</CODE> types (with the form <CODE=20
class=3D"literal">yyyy-mm-dd HH:MM:SS.ffffffff</CODE>) even if you =
expect these=20
fields to be formatted with the JDBC date escape format of <CODE=20
class=3D"literal">yyyy-mm-dd</CODE>. Dates exported to Oracle should be =
formatted
 as full timestamps.</P>
<P>Oracle also includes the additional date/time types <CODE=20
class=3D"literal">TIMESTAMP WITH TIMEZONE</CODE> and <CODE=20
class=3D"literal">TIMESTAMP WITH LOCAL TIMEZONE</CODE>. To support these =
types,
 the user=92s session timezone must be specified. By default, Sqoop will =
specify=20
the timezone <CODE class=3D"literal">"GMT"</CODE> to Oracle. You can =
override this=20
setting by specifying a Hadoop property <CODE=20
class=3D"literal">oracle.sessionTimeZone</CODE> on the command-line when =
running a=20
Sqoop job. For example:</P>
<PRE class=3D"screen">$ sqoop import -D =
oracle.sessionTimeZone=3DAmerica/Los_Angeles \=0A=
    --connect jdbc:oracle:thin:@//db.example.com/foo --table bar</PRE>
<P>Note that Hadoop parameters (<CODE class=3D"literal">-D =85</CODE>) =
are <SPAN=20
class=3D"emphasis"><EM>generic arguments</EM></SPAN> and must appear =
before the=20
tool-specific arguments (<CODE class=3D"literal">--connect</CODE>, <CODE =
class=3D"literal">--table</CODE>,=20
and so on).</P>
<P>Legal values for the session timezone string are enumerated at <A =
class=3D"ulink"=20
href=3D"http://download-west.oracle.com/docs/cd/B19306_01/server.102/b142=
25/applocaledata.htm#i637736"=20
target=3D"_top">http://download-west.oracle.com/docs/cd/B19306_01/server.=
102/b14225/applocaledata.htm#i637736</A>.</P></DIV></DIV>
<DIV title=3D"23.5.&nbsp;Schema Definition in Hive" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_schema_definition_in_hive"></A>23.5.&nbsp;Schema=20
Definition in Hive</H3></DIV></DIV></DIV>
<P>Hive users will note that there is not a one-to-one mapping between =
SQL types=20
and Hive types. In general, SQL types that do not have a direct mapping =
(for=20
example, <CODE class=3D"literal">DATE</CODE>, <CODE =
class=3D"literal">TIME</CODE>,=20
and <CODE class=3D"literal">TIMESTAMP</CODE>) will be coerced to <CODE =
class=3D"literal">STRING</CODE>=20
in Hive. The <CODE class=3D"literal">NUMERIC</CODE> and <CODE=20
class=3D"literal">DECIMAL</CODE> SQL types will be coerced to <CODE =
class=3D"literal">DOUBLE</CODE>.=20
In these cases, Sqoop will emit a warning in its log messages informing =
you of=20
the loss of precision.</P></DIV></DIV>
<DIV title=3D"24.&nbsp;Notes for specific connectors" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_notes_for_specific_connectors"></A>24.&nbsp;Notes for specific=20
connectors</H2></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_jdb=
c_connector">24.1.=20
  MySQL JDBC Connector</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_upsert_fu=
nctionality">24.1.1.=20
    Upsert functionality</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_microsoft=
_sql_connector">24.2.=20
  Microsoft SQL Connector</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments">24.2.1.=20
    Extra arguments</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport">24.2.2.=20
    Schema support</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_table_hin=
ts">24.2.3.=20
    Table hints</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_postgresq=
l_connector">24.3.=20
  PostgreSQL Connector</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_2">24.3.1.=20
    Extra arguments</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport_2">24.3.2.=20
    Schema support</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_pg_bulklo=
ad_connector">24.4.=20
  pg_bulkload connector</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
5">24.4.1.=20
    Purpose</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_requireme=
nts">24.4.2.=20
    Requirements</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_15=
">24.4.3.=20
    Syntax</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_data_stag=
ing">24.4.4.=20
    Data Staging</A></SPAN></DT></DL></DD>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_netezza_c=
onnector">24.5.=20
  Netezza Connector</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_3">24.5.1.=20
    Extra arguments</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de">24.5.2.=20
    Direct Mode</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_null_stri=
ng_handling">24.5.3.=20
    Null string handling</A></SPAN></DT></DL></DD></DL></DIV>
<DIV title=3D"24.1.&nbsp;MySQL JDBC Connector" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_mysql_jdbc_connector"></A>24.1.&nbsp;MySQL JDBC=20
Connector</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_upsert_fu=
nctionality">24.1.1.=20
  Upsert functionality</A></SPAN></DT></DL></DIV>
<P>This section contains information specific to MySQL JDBC =
Connector.</P>
<DIV title=3D"24.1.1.&nbsp;Upsert functionality" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_upsert_functionality"></A>24.1.1.&nbsp;Upsert=20
functionality</H4></DIV></DIV></DIV>
<P>MySQL JDBC Connector is supporting upsert functionality using =
argument <CODE=20
class=3D"literal">--update-mode allowinsert</CODE>. To achieve that =
Sqoop is using=20
MySQL clause INSERT INTO =85 ON DUPLICATE KEY UPDATE. This clause do not =
allow=20
user to specify which columns should be used to distinct whether we =
should=20
update existing row or add new row. Instead this clause relies on =
table=92s unique=20
keys (primary key belongs to this set). MySQL will try to insert new row =
and if=20
the insertion fails with duplicate unique key error it will update =
appropriate=20
row instead. As a result, Sqoop is ignoring values specified in =
parameter <CODE=20
class=3D"literal">--update-key</CODE>, however user needs to specify at =
least one=20
valid column to turn on update mode itself.</P></DIV></DIV>
<DIV title=3D"24.2.&nbsp;Microsoft SQL Connector" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_microsoft_sql_connector"></A>24.2.&nbsp;Microsoft=20
SQL Connector</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments">24.2.1.=20
  Extra arguments</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport">24.2.2.=20
  Schema support</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_table_hin=
ts">24.2.3.=20
  Table hints</A></SPAN></DT></DL></DIV>
<DIV title=3D"24.2.1.&nbsp;Extra arguments" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_extra_arguments"></A>24.2.1.&nbsp;Extra=20
arguments</H4></DIV></DIV></DIV>
<P>List of all extra arguments supported by Microsoft SQL Connector is =
shown=20
below:</P>
<DIV class=3D"table"><A name=3D"idp4347632"></A>
<P class=3D"title"><B>Table&nbsp;41.&nbsp;Supported Microsoft SQL =
Connector extra=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported Microsoft SQL Connector extra arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--schema &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Scheme name that sqoop should use.                              =
       =20
          Default is "dbo".     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--table-hints &lt;hints&gt;</CODE>     </TD>
    <TD align=3D"left">    Table hints that Sqoop should use for         =
       =20
                               data movement.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"24.2.2.&nbsp;Schema support" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_schema_support"></A>24.2.2.&nbsp;Schema=20
support</H4></DIV></DIV></DIV>
<P>If you need to work with tables that are located in non-default =
schemas, you=20
can specify schema names via the <CODE class=3D"literal">--schema</CODE> =
argument.=20
Custom schemas are supported for both import and export jobs. For =
example:</P>
<PRE class=3D"screen">$ sqoop import ... --table custom_table -- =
--schema custom_schema</PRE></DIV>
<DIV title=3D"24.2.3.&nbsp;Table hints" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_table_hints"></A>24.2.3.&nbsp;Table=20
hints</H4></DIV></DIV></DIV>
<P>Sqoop supports table hints in both import and export jobs. Table =
hints are=20
used only for queries that move data from/to Microsoft SQL Server, but =
they=20
cannot be used for meta data queries. You can specify a comma-separated =
list of=20
table hints in the <CODE class=3D"literal">--table-hints</CODE> =
argument. For=20
example:</P>
<PRE class=3D"screen">$ sqoop import ... --table custom_table -- =
--table-hints NOLOCK</PRE></DIV></DIV>
<DIV title=3D"24.3.&nbsp;PostgreSQL Connector" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_postgresql_connector"></A>24.3.&nbsp;PostgreSQL=20
Connector</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_2">24.3.1.=20
  Extra arguments</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_schema_su=
pport_2">24.3.2.=20
  Schema support</A></SPAN></DT></DL></DIV>
<DIV title=3D"24.3.1.&nbsp;Extra arguments" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_extra_arguments_2"></A>24.3.1.&nbsp;Extra=20
arguments</H4></DIV></DIV></DIV>
<P>List of all extra arguments supported by PostgreSQL Connector is =
shown=20
below:</P>
<DIV class=3D"table"><A name=3D"idp4357728"></A>
<P class=3D"title"><B>Table&nbsp;42.&nbsp;Supported PostgreSQL extra=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported PostgreSQL extra arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--schema &lt;name&gt;</CODE>     </TD>
    <TD align=3D"left">    Scheme name that sqoop should use.            =
       =20
                            Default is "public".    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>The direct connector (used when specified <CODE=20
class=3D"literal">--direct</CODE> parameter), offers also additional =
extra=20
arguments:</P>
<DIV class=3D"table"><A name=3D"idp4362520"></A>
<P class=3D"title"><B>Table&nbsp;43.&nbsp;Additional supported =
PostgreSQL extra=20
arguments in direct mode:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Additional supported PostgreSQL extra arguments in direct =
mode:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--boolean-true-string &lt;str&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         String that will be used to encode                              =
       =20
          <CODE class=3D"literal">true</CODE> value of <CODE=20
      class=3D"literal">boolean</CODE> columns.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Default is "TRUE".     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--boolean-false-string &lt;str&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         String that will be used to encode                              =
       =20
          <CODE class=3D"literal">false</CODE> value of <CODE=20
      class=3D"literal">boolean</CODE> columns.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"></TD>
    <TD align=3D"left">    Default is "FALSE".    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"24.3.2.&nbsp;Schema support" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_schema_support_2"></A>24.3.2.&nbsp;Schema=20
support</H4></DIV></DIV></DIV>
<P>If you need to work with table that is located in schema other than =
default=20
one, you need to specify extra argument <CODE =
class=3D"literal">--schema</CODE>.=20
Custom schemas are supported for both import and export job (optional =
staging=20
table however must be present in the same schema as target table). =
Example=20
invocation:</P>
<PRE class=3D"screen">$ sqoop import ... --table custom_table -- =
--schema custom_schema</PRE></DIV></DIV>
<DIV title=3D"24.4.&nbsp;pg_bulkload connector" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_pg_bulkload_connector"></A>24.4.&nbsp;pg_bulkload=20
connector</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_purpose_1=
5">24.4.1.=20
  Purpose</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_requireme=
nts">24.4.2.=20
  Requirements</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_syntax_15=
">24.4.3.=20
  Syntax</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_data_stag=
ing">24.4.4.=20
  Data Staging</A></SPAN></DT></DL></DIV>
<DIV title=3D"24.4.1.&nbsp;Purpose" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_purpose_15"></A>24.4.1.&nbsp;Purpose</H4></DIV></DIV></DIV>
<P>pg_bulkload connector is a direct connector for exporting data into=20
PostgreSQL. This connector uses <A class=3D"ulink" =
href=3D"http://pgbulkload.projects.postgresql.org/index.html"=20
target=3D"_top">pg_bulkload</A>. Users benefit from functionality of =
pg_bulkload=20
such as fast exports bypassing shared bufferes and WAL, flexible error =
records=20
handling, and ETL feature with filter functions.</P></DIV>
<DIV title=3D"24.4.2.&nbsp;Requirements" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_requirements"></A>24.4.2.&nbsp;Requirements</H4></DIV></DIV></DI=
V>
<P>pg_bulkload connector requires following conditions for export job=20
execution:</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">The <A class=3D"ulink" =
href=3D"http://pgbulkload.projects.postgresql.org/index.html"=20
  target=3D"_top">pg_bulkload</A>  must be installed on DB server and =
all slave=20
  nodes.  RPM for RedHat or CentOS is available in then   <A =
class=3D"ulink" href=3D"http://pgfoundry.org/frs/?group_id=3D1000261"=20
  target=3D"_top">download page</A>. </LI>
  <LI class=3D"listitem">The <A class=3D"ulink" =
href=3D"http://jdbc.postgresql.org/index.html"=20
  target=3D"_top">PostgreSQL JDBC</A>  is required on client node. </LI>
  <LI class=3D"listitem">Superuser role of PostgreSQL database is =
required for=20
  execution of pg_bulkload. </LI></UL></DIV></DIV>
<DIV title=3D"24.4.3.&nbsp;Syntax" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_syntax_15"></A>24.4.3.&nbsp;Syntax</H4></DIV></DIV></DIV>
<P>Use <CODE class=3D"literal">--connection-manager</CODE> option to =
specify=20
connection manager classname.</P>
<PRE class=3D"screen">$ sqoop export (generic-args) --connection-manager =
org.apache.sqoop.manager.PGBulkloadManager (export-args)=0A=
$ sqoop-export (generic-args) --connection-manager =
org.apache.sqoop.manager.PGBulkloadManager (export-args)</PRE>
<P>This connector supports export arguments shown below.</P>
<DIV class=3D"table"><A name=3D"idp4379944"></A>
<P class=3D"title"><B>Table&nbsp;44.&nbsp;Supported export control=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported export control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--export-dir &lt;dir&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         HDFS source path for the export     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">-m,--num-mappers &lt;n&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Use <SPAN class=3D"emphasis"><EM>n</EM></SPAN> map tasks to =
export in    =20
                                          parallel     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--table &lt;table-name&gt;</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Table to populate     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-null-string &lt;null-string&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be interpreted as                                 =
       =20
      null for string columns     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--clear-staging-table</CODE>     </TD>
    <TD align=3D"left">    Indicates that any data present in            =
       =20
                           the staging table can be deleted.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>There are additional configuration for pg_bulkload execution =
specified via=20
Hadoop Configuration properties which can be given with <CODE =
class=3D"literal">-D=20
&lt;property=3Dvalue&gt;</CODE> option. Because Hadoop Configuration =
properties=20
are generic arguments of the sqoop, it must preceed any export control=20
arguments.</P>
<DIV class=3D"table"><A name=3D"idp4389504"></A>
<P class=3D"title"><B>Table&nbsp;45.&nbsp;Supported export control=20
properties:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported export control properties:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">Property=20
          </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         mapred.reduce.tasks     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Number of reduce tasks for staging.                             =
  The=20
      defalt value is 1.                               Each tasks do =
staging in=20
      a single transaction.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         pgbulkload.bin     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Path of the pg_bulkoad binary                               =
installed=20
      on each slave nodes.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         pgbulkload.check.constraints     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Specify whether CHECK constraints are checked                   =
       =20
          during the loading.                               The default =
value is=20
      YES.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         pgbulkload.parse.errors     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The maximum mumber of ingored records                           =
   =20
      that cause errors during parsing,                               =
encoding,=20
      filtering, constraints checking,                               and =
data=20
      type conversion.                               Error records are =
recorded =20
                                   in the PARSE BADFILE.                 =
       =20
             The default value is INFINITE.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         pgbulkload.duplicate.errors     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Number of ingored records                               that =
violate=20
      unique constraints.                               Duplicated =
records are=20
      recorded in the                               DUPLICATE BADFILE on =
DB=20
      server.                               The default value is =
INFINITE.    =20
    </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;">=20
         pgbulkload.filter     </TD>
    <TD align=3D"left">    Specify the filter function                   =
       =20
          to convert each row in the input file.                         =
      =20
      See the pg_bulkload documentation to know                          =
    =20
      how to write FILTER functions.     =
</TD></TR></TBODY></TABLE></DIV></DIV><BR=20
class=3D"table-break">
<P>Here is a example of complete command line.</P>
<PRE class=3D"screen">$ sqoop export \=0A=
    -Dmapred.reduce.tasks=3D2=0A=
    -Dpgbulkload.bin=3D"/usr/local/bin/pg_bulkload" \=0A=
    -Dpgbulkload.input.field.delim=3D$'\t' \=0A=
    -Dpgbulkload.check.constraints=3D"YES" \=0A=
    -Dpgbulkload.parse.errors=3D"INFINITE" \=0A=
    -Dpgbulkload.duplicate.errors=3D"INFINITE" \=0A=
    --connect jdbc:postgresql://pgsql.example.net:5432/sqooptest \=0A=
    --connection-manager org.apache.sqoop.manager.PGBulkloadManager \=0A=
    --table test --username sqooptest --export-dir=3D/test -m =
2</PRE></DIV>
<DIV title=3D"24.4.4.&nbsp;Data Staging" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_data_staging"></A>24.4.4.&nbsp;Data=20
Staging</H4></DIV></DIV></DIV>
<P>Each map tasks of pg_bulkload connector=92s export job create their =
own staging=20
table on the fly. The Name of staging tables is decided based on the =
destination=20
table and the task attempt ids. For example, the name of staging table =
for the=20
"test" table is like <CODE=20
class=3D"literal">test_attempt_1345021837431_0001_m_000000_0</CODE> =
.</P>
<P>Staging tables are automatically dropped if tasks successfully =
complete or=20
map tasks fail. When reduce task fails, staging table for the task are =
left for=20
manual retry and users must take care of it.</P></DIV></DIV>
<DIV title=3D"24.5.&nbsp;Netezza Connector" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A =
name=3D"_netezza_connector"></A>24.5.&nbsp;Netezza=20
Connector</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_extra_arg=
uments_3">24.5.1.=20
  Extra arguments</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_direct_mo=
de">24.5.2.=20
  Direct Mode</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_null_stri=
ng_handling">24.5.3.=20
  Null string handling</A></SPAN></DT></DL></DIV>
<DIV title=3D"24.5.1.&nbsp;Extra arguments" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_extra_arguments_3"></A>24.5.1.&nbsp;Extra=20
arguments</H4></DIV></DIV></DIV>
<P>List of all extra arguments supported by Netezza Connector is shown=20
below:</P>
<DIV class=3D"table"><A name=3D"idp4404056"></A>
<P class=3D"title"><B>Table&nbsp;46.&nbsp;Supported Netezza extra=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported Netezza extra arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--partitioned-access</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Whether each mapper acts on a subset                            =
       =20
        of data slices of a table or all                                 =
    =20
      Default is "false" for standard mode                               =
      =20
      and "true" for direct mode.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--max-errors</CODE>     </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Applicable only in direct mode.                                 =
    =20
      This option specifies the error threshold                          =
       =20
          per mapper while transferring data. If                         =
       =20
           the number of errors encountered exceed                       =
       =20
             this threshold then the job will fail.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"></TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Default value is 1.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--log-dir</CODE>     </TD>
    <TD align=3D"left">    Applicable only in direct mode.               =
       =20
                     Specifies the directory where Netezza               =
       =20
                     external table operation logs are stored.           =
       =20
                         Default value is /tmp.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break"></DIV>
<DIV title=3D"24.5.2.&nbsp;Direct Mode" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A name=3D"_direct_mode"></A>24.5.2.&nbsp;Direct=20
Mode</H4></DIV></DIV></DIV>
<P>Netezza connector supports an optimized data transfer facility using =
the
 Netezza external tables feature.  Each map tasks of Netezza =
connector=92s import
 job will work on a subset of the Netezza partitions and transparently =
create
 and use an external table to transport data.  Similarly, export jobs =
will use
 the external table to push data fast onto the NZ system.   Direct mode =
does not=20
support staging tables, upsert options etc.</P>
<P>Here is an example of complete command line for import using the =
Netezza
 external table feature.</P>
<PRE class=3D"screen">$ sqoop import \=0A=
    --direct \=0A=
    --connect jdbc:netezza://nzhost:5480/sqoop \=0A=
    --table nztable \=0A=
    --username nzuser \=0A=
    --password nzpass \=0A=
    --target-dir hdfsdir</PRE>
<P>Here is an example of complete command line for export with tab as =
the field
 terminator character.</P>
<PRE class=3D"screen">$ sqoop export \=0A=
    --direct \=0A=
    --connect jdbc:netezza://nzhost:5480/sqoop \=0A=
    --table nztable \=0A=
    --username nzuser \=0A=
    --password nzpass \=0A=
    --export-dir hdfsdir \=0A=
    --input-fields-terminated-by "\t"</PRE></DIV>
<DIV title=3D"24.5.3.&nbsp;Null string handling" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_null_string_handling"></A>24.5.3.&nbsp;Null string=20
handling</H4></DIV></DIV></DIV>
<P>Netezza direct connector supports the null-string features of Sqoop.  =
The=20
null string values are converted to appropriate external table options =
during=20
export and import operations.</P>
<DIV class=3D"table"><A name=3D"idp4416448"></A>
<P class=3D"title"><B>Table&nbsp;47.&nbsp;Supported export control=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported export control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--input-null-string &lt;null-string&gt;</CODE>   =
  </TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be interpreted as                                 =
       =20
      null for string columns.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--input-null-non-string =
&lt;null-string&gt;</CODE>     </TD>
    <TD align=3D"left">    The string to be interpreted as               =
       =20
                        null for non string columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>In the case of Netezza direct mode connector, both the arguments must =
be left=20
to the default values or explicitly set to the same value.  Furthermore =
the null=20
string value is restricted to 0-4 utf8 characters.</P>
<P>On export, for non-string columns, if the chosen null value is a =
valid
 representation in the column domain, then the column might not be =
loaded as
 null.  For example, if the null string value is specified as "1", then =
on
 export, any occurrence of "1" in the input file will be loaded as value =
1
 instead of NULL for int columns.</P>
<P>It is suggested that the null value be specified as empty string for
 performance and consistency.</P>
<DIV class=3D"table"><A name=3D"idp4423616"></A>
<P class=3D"title"><B>Table&nbsp;48.&nbsp;Supported import control=20
arguments:</B></P>
<DIV class=3D"table-contents">
<TABLE style=3D"border-top-color: currentColor; border-bottom-color: =
currentColor; border-top-width: 0.5pt; border-bottom-width: 0.5pt; =
border-top-style: solid; border-bottom-style: solid; border-collapse: =
collapse;"=20
summary=3D"Supported import control arguments:">
  <COLGROUP>
  <COL align=3D"left">
  <COL align=3D"left"></COLGROUP>
  <THEAD>
  <TR>
    <TH align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;">=20
         Argument     </TH>
    <TH align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         Description     </TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-bottom-color: currentColor; border-right-width: 0.5pt; =
border-bottom-width: 0.5pt; border-right-style: solid; =
border-bottom-style: solid;"><CODE=20
      class=3D"literal">--null-string &lt;null-string&gt;</CODE>     =
</TD>
    <TD align=3D"left" style=3D"border-bottom-color: currentColor; =
border-bottom-width: 0.5pt; border-bottom-style: solid;">=20
         The string to be interpreted as                                 =
       =20
      null for string columns.     </TD></TR>
  <TR>
    <TD align=3D"left" style=3D"border-right-color: currentColor; =
border-right-width: 0.5pt; border-right-style: solid;"><CODE=20
      class=3D"literal">--null-non-string &lt;null-string&gt;</CODE>     =
</TD>
    <TD align=3D"left">    The string to be interpreted as               =
       =20
                        null for non string columns.    =20
</TD></TR></TBODY></TABLE></DIV></DIV><BR class=3D"table-break">
<P>In the case of Netezza direct mode connector, both the arguments must =
be left=20
to the default values or explicitly set to the same value.  Furthermore =
the null=20
string value is restricted to 0-4 utf8 characters.</P>
<P>On import, for non-string columns, the chosen null value in current
 implementations the null value representation is ignored for non =
character
 columns.  For example, if the null string value is specified as "\N", =
then on
 import, any occurrence of NULL for non-char columns in the table will =
be
 imported as an empty string instead of <SPAN=20
class=3D"emphasis"><EM>\N</EM></SPAN>, the chosen null string =
representation.</P>
<P>It is suggested that the null value be specified as empty string for
 performance and consistency.</P></DIV></DIV></DIV>
<DIV title=3D"25.&nbsp;Getting Support" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_getting_support"></A>25.&nbsp;Getting =
Support</H2></DIV></DIV></DIV>
<P>Some general information is available at the <A class=3D"ulink" =
href=3D"http://sqoop.apache.org/"=20
target=3D"_top">http://sqoop.apache.org/</A></P>
<P>Report bugs in Sqoop to the issue tracker at <A class=3D"ulink" =
href=3D"https://issues.apache.org/jira/browse/SQOOP"=20
target=3D"_top">https://issues.apache.org/jira/browse/SQOOP</A>.</P>
<P>Questions and discussion regarding the usage of Sqoop should be =
directed to=20
the <A class=3D"ulink" href=3D"http://sqoop.apache.org/mail-lists.html" =
target=3D"_top">sqoop-user=20
mailing list</A>.</P>
<P>Before contacting either forum, run your Sqoop job with the <CODE =
class=3D"literal">--verbose</CODE>=20
flag to acquire as much debugging information as possible. Also report =
the=20
string returned by <CODE class=3D"literal">sqoop version</CODE> as well =
as the=20
version of Hadoop you are running (<CODE class=3D"literal">hadoop=20
version</CODE>).</P></DIV>
<DIV title=3D"26.&nbsp;Troubleshooting" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H2 class=3D"title" style=3D"clear: both;"><A=20
name=3D"_troubleshooting"></A>26.&nbsp;Troubleshooting</H2></DIV></DIV></=
DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_general_t=
roubleshooting_process">26.1.=20
  General Troubleshooting Process</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_specific_=
troubleshooting_tips">26.2.=20
  Specific Troubleshooting Tips</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_co=
nnection_reset_errors">26.2.1.=20
    Oracle: Connection Reset Errors</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_ca=
se_sensitive_catalog_query_errors">26.2.2.=20
    Oracle: Case-Sensitive Catalog Query Errors</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_con=
nection_failure">26.2.3.=20
    MySQL: Connection Failure</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_or=
a_00933_error_sql_command_not_properly_ended">26.2.4.=20
    Oracle: ORA-00933 error (SQL command not properly =
ended)</A></SPAN></DT>
    <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_imp=
ort_of_tinyint_1_from_mysql_behaves_strangely">26.2.5.=20
    MySQL: Import of TINYINT(1) from MySQL behaves=20
  strangely</A></SPAN></DT></DL></DD></DL></DIV>
<DIV title=3D"26.1.&nbsp;General Troubleshooting Process" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_general_troubleshooting_process"></A>26.1.&nbsp;General =
Troubleshooting=20
Process</H3></DIV></DIV></DIV>
<P>The following steps should be followed to troubleshoot any failure =
that you
 encounter while running Sqoop.</P>
<DIV class=3D"itemizedlist">
<UL class=3D"itemizedlist" type=3D"disc">
  <LI class=3D"listitem">Turn on verbose output by executing the same =
command=20
  again and specifying  the <CODE class=3D"literal">--verbose</CODE> =
option. This=20
  produces more debug output on the console  which can be inspected to =
identify=20
  any obvious errors. </LI>
  <LI class=3D"listitem">Look at the task logs from Hadoop to see if =
there are any=20
  specific failures  recorded there. It is possible that the failure =
that occurs=20
  while task  execution is not relayed correctly to the console. </LI>
  <LI class=3D"listitem">Make sure that the necessary input files or =
input/output=20
  tables are present  and can be accessed by the user that Sqoop is =
executing as=20
  or connecting to  the database as. It is possible that the necessary =
files or=20
  tables are present  but the specific user that Sqoop connects as does =
not have=20
  the necessary  permissions to access these files. </LI>
  <LI class=3D"listitem">If you are doing a compound action such as =
populating a=20
  Hive table or  partition, try breaking the job into two separate =
actions to=20
  see where the  problem really occurs. For example if an import that =
creates=20
  and populates a  Hive table is failing, you can break it down into two =
steps -=20
  first for doing  the import alone, and the second to create a Hive =
table=20
  without the import  using the <CODE =
class=3D"literal">create-hive-table</CODE>=20
  tool. While this does not address the original  use-case of populating =
the=20
  Hive table, it does help narrow down the problem  to either regular =
import or=20
  during the creation and population of Hive table. </LI>
  <LI class=3D"listitem">Search the mailing lists archives and JIRA for =
keywords=20
  relating to the  problem. It is possible that you may find a solution=20
  discussed there that  will help you solve or work-around your problem. =

</LI></UL></DIV></DIV>
<DIV title=3D"26.2.&nbsp;Specific Troubleshooting Tips" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H3 class=3D"title"><A=20
name=3D"_specific_troubleshooting_tips"></A>26.2.&nbsp;Specific =
Troubleshooting=20
Tips</H3></DIV></DIV></DIV>
<DIV class=3D"toc">
<DL>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_co=
nnection_reset_errors">26.2.1.=20
  Oracle: Connection Reset Errors</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_ca=
se_sensitive_catalog_query_errors">26.2.2.=20
  Oracle: Case-Sensitive Catalog Query Errors</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_con=
nection_failure">26.2.3.=20
  MySQL: Connection Failure</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_oracle_or=
a_00933_error_sql_command_not_properly_ended">26.2.4.=20
  Oracle: ORA-00933 error (SQL command not properly =
ended)</A></SPAN></DT>
  <DT><SPAN class=3D"section"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/SqoopUserGuide.html#_mysql_imp=
ort_of_tinyint_1_from_mysql_behaves_strangely">26.2.5.=20
  MySQL: Import of TINYINT(1) from MySQL behaves=20
strangely</A></SPAN></DT></DL></DIV>
<DIV title=3D"26.2.1.&nbsp;Oracle: Connection Reset Errors" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_oracle_connection_reset_errors"></A>26.2.1.&nbsp;Oracle: =
Connection Reset=20
Errors</H4></DIV></DIV></DIV>
<P>Problem: When using the default Sqoop connector for Oracle, some data =
does
 get transferred, but during the map-reduce job a lot of errors are =
reported as=20
below:</P>
<PRE class=3D"screen">11/05/26 16:23:47 INFO mapred.JobClient: Task Id : =
attempt_201105261333_0002_m_000002_0, Status : FAILED=0A=
java.lang.RuntimeException: java.lang.RuntimeException: =
java.sql.SQLRecoverableException: IO Error: Connection reset=0A=
at =
com.cloudera.sqoop.mapreduce.db.DBInputFormat.setConf(DBInputFormat.java:=
164)=0A=
at =
org.apache.hadoop.util.ReflectionUtils.setConf(ReflectionUtils.java:62)=0A=
at =
org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:1=
17)=0A=
at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:605)=0A=
at org.apache.hadoop.mapred.MapTask.run(MapTask.java:322)=0A=
at org.apache.hadoop.mapred.Child$4.run(Child.java:268)=0A=
at java.security.AccessController.doPrivileged(Native Method)=0A=
at javax.security.auth.Subject.doAs(Subject.java:396)=0A=
at =
org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation=
.java:1115)=0A=
at org.apache.hadoop.mapred.Child.main(Child.java:262)=0A=
Caused by: java.lang.RuntimeException: java.sql.SQLRecoverableException: =
IO Error: Connection reset=0A=
at =
com.cloudera.sqoop.mapreduce.db.DBInputFormat.getConnection(DBInputFormat=
.java:190)=0A=
at =
com.cloudera.sqoop.mapreduce.db.DBInputFormat.setConf(DBInputFormat.java:=
159)=0A=
... 9 more=0A=
Caused by: java.sql.SQLRecoverableException: IO Error: Connection reset=0A=
at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:428)=0A=
at =
oracle.jdbc.driver.PhysicalConnection.&lt;init&gt;(PhysicalConnection.jav=
a:536)=0A=
at oracle.jdbc.driver.T4CConnection.&lt;init&gt;(T4CConnection.java:228)=0A=
at =
oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.ja=
va:32)=0A=
at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:521)=0A=
at java.sql.DriverManager.getConnection(DriverManager.java:582)=0A=
at java.sql.DriverManager.getConnection(DriverManager.java:185)=0A=
at =
com.cloudera.sqoop.mapreduce.db.DBConfiguration.getConnection(DBConfigura=
tion.java:152)=0A=
at =
com.cloudera.sqoop.mapreduce.db.DBInputFormat.getConnection(DBInputFormat=
.java:184)=0A=
... 10 more=0A=
Caused by: java.net.SocketException: Connection reset=0A=
at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:96)=0A=
at java.net.SocketOutputStream.write(SocketOutputStream.java:136)=0A=
at oracle.net.ns.DataPacket.send(DataPacket.java:199)=0A=
at oracle.net.ns.NetOutputStream.flush(NetOutputStream.java:211)=0A=
at oracle.net.ns.NetInputStream.getNextPacket(NetInputStream.java:227)=0A=
at oracle.net.ns.NetInputStream.read(NetInputStream.java:175)=0A=
at oracle.net.ns.NetInputStream.read(NetInputStream.java:100)=0A=
at oracle.net.ns.NetInputStream.read(NetInputStream.java:85)=0A=
at =
oracle.jdbc.driver.T4CSocketInputStreamWrapper.readNextPacket(T4CSocketIn=
putStreamWrapper.java:123)=0A=
at =
oracle.jdbc.driver.T4CSocketInputStreamWrapper.read(T4CSocketInputStreamW=
rapper.java:79)=0A=
at oracle.jdbc.driver.T4CMAREngine.unmarshalUB1(T4CMAREngine.java:1122)=0A=
at oracle.jdbc.driver.T4CMAREngine.unmarshalSB1(T4CMAREngine.java:1099)=0A=
at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:288)=0A=
at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)=0A=
at =
oracle.jdbc.driver.T4CTTIoauthenticate.doOAUTH(T4CTTIoauthenticate.java:3=
66)=0A=
at =
oracle.jdbc.driver.T4CTTIoauthenticate.doOAUTH(T4CTTIoauthenticate.java:7=
52)=0A=
at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:366)=0A=
... 18 more</PRE>
<P>Solution: This problem occurs primarily due to the lack of a fast =
random
 number generation device on the host where the map tasks execute. On =
typical=20
Linux systems this can be addressed by setting the following property in =
the=20
<CODE class=3D"literal">java.security</CODE> file:</P>
<PRE =
class=3D"screen">securerandom.source=3Dfile:/dev/../dev/urandom</PRE>
<P>The <CODE class=3D"literal">java.security</CODE> file can be found =
under <CODE=20
class=3D"literal">$JAVA_HOME/jre/lib/security</CODE> directory. =
Alternatively,=20
this property can also be specified on the command line via:</P>
<PRE class=3D"screen">-D =
mapred.child.java.opts=3D"-Djava.security.egd=3Dfile:/dev/../dev/urandom"=
</PRE>
<P>Please note that it=92s very important to specify this weird path =
<CODE class=3D"literal">/dev/../dev/urandom</CODE>
 as it is due to a Java bug <A class=3D"ulink" =
href=3D"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=3D6202721"=20
target=3D"_top">6202721</A>, or <CODE =
class=3D"literal">/dev/urandom</CODE> will be=20
ignored and substituted by <CODE =
class=3D"literal">/dev/random</CODE>.</P></DIV>
<DIV title=3D"26.2.2.&nbsp;Oracle: Case-Sensitive Catalog Query Errors" =
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A=20
name=3D"_oracle_case_sensitive_catalog_query_errors"></A>26.2.2.&nbsp;Ora=
cle:=20
Case-Sensitive Catalog Query Errors</H4></DIV></DIV></DIV>
<P>Problem: While working with Oracle you may encounter problems when =
Sqoop can
 not figure out column names. This happens because the catalog queries =
that
 Sqoop uses for Oracle expect the correct case to be specified for the =
user name=20
and table name.</P>
<P>One example, using --hive-import and resulting in a =
NullPointerException:</P>
<PRE class=3D"screen">1/09/21 17:18:49 INFO manager.OracleManager: Time =
zone has been set to=0A=
GMT=0A=
11/09/21 17:18:49 DEBUG manager.SqlManager: Using fetchSize for next=0A=
query: 1000=0A=
11/09/21 17:18:49 INFO manager.SqlManager: Executing SQL statement:=0A=
SELECT t.* FROM addlabel_pris t WHERE 1=3D0=0A=
11/09/21 17:18:49 DEBUG manager.OracleManager$ConnCache: Caching=0A=
released connection for jdbc:oracle:thin:=0A=
11/09/21 17:18:49 ERROR sqoop.Sqoop: Got exception running Sqoop:=0A=
java.lang.NullPointerException=0A=
java.lang.NullPointerException=0A=
at =
com.cloudera.sqoop.hive.TableDefWriter.getCreateTableStmt(TableDefWriter.=
java:148)=0A=
at com.cloudera.sqoop.hive.HiveImport.importTable(HiveImport.java:187)=0A=
at com.cloudera.sqoop.tool.ImportTool.importTable(ImportTool.java:362)=0A=
at com.cloudera.sqoop.tool.ImportTool.run(ImportTool.java:423)=0A=
at com.cloudera.sqoop.Sqoop.run(Sqoop.java:144)=0A=
at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:65)=0A=
at com.cloudera.sqoop.Sqoop.runSqoop(Sqoop.java:180)=0A=
at com.cloudera.sqoop.Sqoop.runTool(Sqoop.java:219)=0A=
at com.cloudera.sqoop.Sqoop.runTool(Sqoop.java:228)=0A=
at com.cloudera.sqoop.Sqoop.main(Sqoop.java:237)</PRE>
<DIV title=3D"Solution:" class=3D"orderedlist">
<P class=3D"title"><B>Solution:</B></P>
<OL class=3D"orderedlist" type=3D"1">
  <LI class=3D"listitem">Specify the user name, which Sqoop is =
connecting as, in=20
  upper case (unless it was created with mixed/lower case within =
quotes). </LI>
  <LI class=3D"listitem">Specify the table name, which you are working =
with, in=20
  upper case (unless it was created with mixed/lower case within =
quotes).=20
</LI></OL></DIV></DIV>
<DIV title=3D"26.2.3.&nbsp;MySQL: Connection Failure" class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_mysql_connection_failure"></A>26.2.3.&nbsp;MySQL:=20
Connection Failure</H4></DIV></DIV></DIV>
<P>Problem: While importing a MySQL table into Sqoop, if you do not have =
the=20
necessary permissions to access your MySQL database over the network, =
you may=20
get the below connection failure.</P>
<PRE class=3D"screen">Caused by: =
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications =
link failure</PRE>
<P>Solution: First, verify that you can connect to the database from the =
node=20
where you are running Sqoop:</P>
<PRE class=3D"screen">$ mysql --host=3D&lt;IP Address&gt; =
--database=3Dtest --user=3D&lt;username&gt; =
--password=3D&lt;password&gt;</PRE>
<P>If this works, it rules out any problem with the client network =
configuration
 or security/authentication configuration.</P>
<P>Add the network port for the server to your my.cnf file <CODE=20
class=3D"literal">/etc/my.cnf</CODE>:</P>
<PRE class=3D"screen">[mysqld]=0A=
port =3D xxxx</PRE>
<P>Set up a user account to connect via Sqoop. Grant permissions to the =
user to=20
access the database over the network: (1.) Log into MySQL as root <CODE =
class=3D"literal">mysql=20
-u root -p&lt;ThisIsMyPassword&gt;</CODE>. (2.) Issue the following =
command:</P>
<PRE class=3D"screen">mysql&gt; grant all privileges on test.* to =
'testuser'@'%' identified by 'testpassword'</PRE>
<P>Note that doing this will enable the testuser to connect to the MySQL =
server=20
from any IP address. While this will work, it is not advisable for a =
production=20
environment. We advise consulting with your DBA to grant the necessary=20
privileges based on the setup topology.</P>
<P>If the database server=92s IP address changes, unless it is bound to =
a static=20
hostname in your server, the connect string passed into Sqoop will also =
need to=20
be changed.</P></DIV>
<DIV title=3D"26.2.4.&nbsp;Oracle: ORA-00933 error (SQL command not =
properly ended)"=20
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_oracle_ora_00933_error_sql_command_not_properly_ended"></A>26.2.=
4.&nbsp;Oracle:=20
ORA-00933 error (SQL command not properly ended)</H4></DIV></DIV></DIV>
<P>Problem: While working with Oracle you may encounter the below =
problem when=20
the Sqoop command explicitly specifies the --driver&lt; driver name&gt; =
option.=20
When the driver option is included in the Sqoop command, the built-in =
connection=20
manager selection defaults to the generic connection manager, which =
causes this=20
issue with Oracle. If the driver option is not specified, the built-in=20
connection manager selection mechanism selects the Oracle specific =
connection=20
manager which generates valid SQL for Oracle and uses the driver=20
"oracle.jdbc.OracleDriver".</P>
<PRE class=3D"screen">ERROR manager.SqlManager: Error executing =
statement:=0A=
java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly =
ended</PRE>
<P>Solution: Omit the option --driver oracle.jdbc.driver.OracleDriver =
and then
 re-run the Sqoop command.</P></DIV>
<DIV title=3D"26.2.5.&nbsp;MySQL: Import of TINYINT(1) from MySQL =
behaves strangely"=20
class=3D"section">
<DIV class=3D"titlepage">
<DIV>
<DIV>
<H4 class=3D"title"><A =
name=3D"_mysql_import_of_tinyint_1_from_mysql_behaves_strangely"></A>26.2=
.5.&nbsp;MySQL:=20
Import of TINYINT(1) from MySQL behaves strangely</H4></DIV></DIV></DIV>
<P>Problem: Sqoop is treating TINYINT(1) columns as booleans, which is =
for=20
example causing issues with HIVE import. This is because by default the =
MySQL=20
JDBC connector maps the TINYINT(1) to java.sql.Types.BIT, which Sqoop by =
default=20
maps to Boolean.</P>
<P>Solution: A more clean solution is to force MySQL JDBC Connector to =
stop
 converting TINYINT(1) to java.sql.Types.BIT by adding <CODE=20
class=3D"literal">tinyInt1isBit=3Dfalse</CODE> into your JDBC path (to =
create=20
something like <CODE=20
class=3D"literal">jdbc:mysql://localhost/test?tinyInt1isBit=3Dfalse</CODE=
>). Another=20
solution would be to explicitly override the column mapping for the =
datatype
 TINYINT(1) column. For example, if the column name is foo, then pass =
the=20
following option to Sqoop during import: --map-column-hive =
foo=3Dtinyint. In the=20
case of non-Hive imports to HDFS, use --map-column-java=20
foo=3Dinteger.</P></DIV></DIV></DIV></DIV>
<DIV class=3D"footer-text"><SPAN align=3D"center"><A =
href=3D"http://sqoop.apache.org/docs/1.4.4/index.html"><IMG=20
alt=3D"Documentation Home" =
src=3D"http://sqoop.apache.org/docs/1.4.4/images/home.png"></A></SPAN><BR=
>=20
 This document was built from Sqoop source available at   <A =
href=3D"https://git-wip-us.apache.org/repos/asf?p=3Dsqoop.git">https://gi=
t-wip-us.apache.org/repos/asf?p=3Dsqoop.git</A>.=20
  </DIV></BODY></HTML>

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://sqoop.apache.org/docs/1.4.4/images/home.png

iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABmJLR0QA/wD/AP+gvaeTAAAACXBI
WXMAAAsNAAALDQHtB8AsAAAAB3RJTUUH0wkJEw8Iv0VgDgAABMlJREFUeNqFldtrXEUYwH8z58zZ
c/beXBrTyyYx2iKhbdyoWAqiFZHS6oOCFKs+CAF9848Q+heIwgHFJ1+KCL4IFUW8UY1bY1st1aZp
0kuyySZ7ycnZ3XPOjA/bq7b6wccMwze/7zLzzQj+Q8pvzyowg6CHMSYNBjAhRi8p3aye8p/r3m+v
+A/ofuAVMJMISgiVAUB3NjHJIjArdHyibD783vf95H/B5bdnx0G8g6VezWbSxQcG8nKo32X3QAtP
JVxcyzJf1ayurOi1RhjqOPxemY1395pPfvR9P77Jsf4BHQHxHk7+2ORDee+1g1vE0QMWR6Zsas0u
Xsri9WeyHNglmBjxRCxc5+q6GY8SnlxjbP5Q2ZurVCr6LvCNSN/L5vPPv7i/IN542uPhYYuUsvju
XItnJws8tM3jy9MNSltdBvI2e0YUQ1sUl6pmoNkWj9XMWOXQlHelUqmYW+Dhx986jpM7eviJonhh
SuEoSTc2/Hox4Kk9eQpZG2ULtvc7fHe2ST5tY4xhW58il1bi9ytJf7tr1DZOn5yamoqsXrS/7BdW
6vi+8bx7qKyQErqRZm6pzWO7sgwUFJYUCCFwbMFgQVH5awPH7jnvy0qCrs3CSjS6kuycHeKPS1b5
rRkFvJPL5Z56djIjtmShExlqrZh9D2bYMZDCtm6fsRACLyUpZmzOL4ZoA+1I41hd5pa1E7TjyIob
39rAIDCZzxdk0Y1pBhLbEuza7jIylMKS/76RUgi29Ts8Op7h858azCwWaIZpWmSlpj7RFKWSBIYR
sjSQE4RdzUaYMDqUYvfO9D2hd8rOrSn2jPcRxi4rQQrsDAhrGMspSSCNTGXSKqIeaLYWHSZG0nel
fz+xpGD/Lpsj5dtlQqY8ATn7plGzrVhuGMxCzEanSc6zOLgvi+v0HNQDTT2A2Eh29IGrwP8aLlUF
yw0Qgl7HAwItbTAhurO5HHgEiculOpy6DA8UJQcmwHV6xp/OSD76pjf/4E2Y2AG/LcCvl29GS4+c
tNvCxB0bo5eAxcamHkuEdyvNbPSPjjf3L4ltgQQ2wg6YpCp1sCSVblaBWTprWlkG54Yqy9xNu0fJ
XTshrRJcO8GxE0S3pm3aF4rm8nV5yn+uK3R8Iuk0GipZZzAdsDUdsCW1yWZH0wo19UDjyjZjxRZj
xRZJEtMKNcVUm+Fsz14l6+j2euAmyycL1uqaBXCkLK9cY++YMPFUadAmn4qRRJxf7DDzZ8hXv21w
dbVDVkVknYj55Q6Vi22aQQfPirFFxOL1Gp1g/Ys94rOPgaoFUKlUzI7ysblOxCNaJyPb+y3hOQKt
NYnWKGlIKUPK7o1we10QcWGhqWtrjZn+5Nz7RXHtHNC69QgdLqtazZRmGqE90dyMR3NpRV/OxlES
xxb/UmXBaiPizFyDpZXmzGB8+nhJVn4GVn3fT26BK5WKOTSVXquZ0dON0EqvNKLR1mbsuHYsMp6N
LSVSgDEJtfWAs/Ob+vxCa6Neb37Rn5x7/wa06vt+dM+znp6elkDmDC8fjGX2JY2akFIM5zzLA2iF
SVsnumrTvuAmyyd3yy9/AJaB+p0/yD37dnp6WgBONRktNkWphOWUBOQEWgoTd6QOlorm8vWCtboG
tIDQ9319J+Nvy7QldhQPXPoAAAAASUVORK5CYII=

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://sqoop.apache.org/docs/1.4.4/images/note.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACihJREFU
WEftmAtQU1cax6u1uq2OM1arLlbF9YXKqLuz7UwfttUuS7tt6a7WjrRVa5XtCrooVBRBXvIssAjK
Q1FQeSUQHgLySAIh4SGElwlJSEKSe5N7b573FRXd7WO7X2BEZ3c7lJSd6c70m//cOfeew7k//uc7
59yTGd99990TP6kAoJ9UPPGTonEN189AkzgwNYe4XK6vr++zYwEFuJ12g6cAFB4evnv5gsHDu9Uf
vKb8nXf7K55wCw+nl+mHAoEZ8PqR/b6qd34r27x4aNOzyi2LNC8thYccDmcamX4oEAyQ7POd2j1v
DHk/q/z1c+oXlmhe+qVum0fv79ZB1T/HYlqwfigQJA0a/JEKUF5con3ZQ7/teWT7CqOPJ35gB1R9
880340w/HmtyIFjGZ8yY8cwzz+j3vDryiof+9eeRHStMvp74O6st76+1Re6Fqn9b6qH9zJkzn3os
5s6dC9yLxwIK8+bN+z47JweC3p12+RvbXpC+uQ59cyXmu4p4dwxllxd58CV95MHFixcOdJQgyjrS
KLxna7/v6HxAdrlE9TzULVeB7v070w96QPcvXLjw+7ycHAj+T4eu7FzcLshfo6+n5U/rbbs3kP4b
2dA/UMlHwnxf+8WcpyRVn8tbgo3SU3b5GUoZRauiaVXsIw3H05ovmZEsVpcLYnQ5Hh4eMMr/1aTJ
gZ5++mmHjqvtijng/yowyd/zdgTtYJIPI1EBAb/xCly9cPbsJ4XcQ7cFwYbuMJssEoBIZQyliqfU
KROitZmMLo81XGGRQriuWrXqq6++chNo/vz5Nh1PJ03q5Ud5rfV44bn5C+bNBb29Zln25iVNLy7d
usmjpmCftOGI7tYp8yDQxJHKs9Rw0oRoTTq4AhxOpMiJlrBokZeX14MHD9wEWrJkicNQjQ6kyyWJ
eWn7Z8+eBRCG7ctBUJg1a2ZwwLaS7I8lVUFqSTg+GEOqEklVEqVOozVZE2L0+SzQGDlOI9eJcry9
vUdHR90EWrFiBYXUYfLzyq60jrrItJjdWzYte2rWzFlPzoTJtf3lNRHBPgUZ/nxuYG/jF/qeaIss
0a5MoTQZE6JHshl9AYuWOU0VTlOl08TbsmXLvXv33ARavXo1gzXiirzhnswefvzN0uPXLxzISdr9
rs+mdb96zs/XOyb07auZe5u5R6TNJxXiKKQv0SJPdQxnAseEGMN11ljuNFU7TTVw3bp1q/tA69at
Y3EBoSrQ9V8cFKe1Vp+uuRZYnP1pVvyu08G/DwvyyUz4sDT3Mz43eEAQqe46a+hNMg2mEkP/CcRz
YjVOrBaYNm/efPfuXTcd2rBhA0u0WjXFiOyKojOzpzlOwAutKwqqKvgL91JASc7B0tyA6mtB4pqw
fkGUQhI/0p2Cy88RiguPHDIUM2glY+KzploWq2exWsgh94HWr1/P4iKrpgRXFmn7cmSSlO6mM5Ib
YS2VIQJeSAvvC1H1yc76iO6GM4r2RGVHsr433XQ7y6LIcwEZisc1BgQooJsMVr9x40b3gZYvX37H
LLZrSy3qYvT2ZU3POZk4cbAlto8f1ceP7hfG9gvj5OJE9a1UZCATGThvlGVDwtk1hZS+hEKqx0Uj
PABiMCGLNTOmRpj27gMtW7bsjkVC6rkWdRmhKkQGsnXSdG136nBXiqY7VSf9m7Y7XSvN0Pdnobez
CcVFRWcGvzKKNFSP65bwwk1eslVXR5sEDN7K4AIGa4K8dB8IHLpr6yINPLu+wqouKb10XNuTUXU1
pJ4TSwwXm9WlZVfCjwfurC4KwxT5UmHqxXPHQ4/sloryKPRm6tnAimtxnfycpJjDDM6nAYhoZUyC
tWvXug+0aeP6ew4pbaqjjTV2Lfd8yuepMfuKLp4ouXSSUxDeL87OSgkk1Jz0hCNS0eXW+qzC3IiK
ogQSvQkKO/aRA6mnjI3X8iJpQsjgYoZoAyxYSqYHyKbhcAvCPvvY16opA52N2Jeb/tdBSa5Zw0WG
Ss5GHHDoq3pEl6tKk4HGgTYnRh8OOfpJTkY4MlRHE6L/CVBbfWJI0K5xoAupQV8c/UDWkQdABnlx
zKn9LqDWXE5hNABdy4torEyz6WvFjdnaQd70AMGO8/iQOfS16t6rR//8/jhQxdUISKCY8H0l+eGR
Jz7pbbsMQP2SS4W5pwDoQtpxSVO2yyrkpkLKGQOSMITkRw2Z2Wx++63XR8lBJ9FMmxootMahKzcM
5tt1vIeqxFXcAcklTFXuMNSQSC2urrzBSYa8seoar12MzvwyNCPpmKAuh8YggdoZswQK7udQX1/f
Xn+/UUruJFqdkJUYMFXB95pdW2TTXLdqrtu0JXZ9jV1XbdffINE6Eq0nUWjTRBn5j2QSUlgrjUto
ooPGOwDI09PTzb0MjjgnQw6O0kqnWeIk2hismUJvkIYKh45j05ZZ1LBallk0HIuGaxupgPEiDS4s
CpgAyNQyIRqTMIBCdLiuuAQ+0NwESkhISEsKuc8MOy0drFnMYHx4n0NXadeVAwc+XGZSgqBQbtFW
glUOA5gEDoE9wkcytblQiFuMudt1xTtgYXQTKCDgUHlx2iijdlo6WUJMYwIYFIe+2jbCI4YrjEou
Iucgcq5RySPUNTZdrcPQQKJNpAuohcLEE6KJTsbSw1r7WEsvY+6CzdUdoJaWljVr1jiI26OMhjV3
MJiIMvFJpN5huGEdqSbUVaiiwiArB6EKF5B1BIBgPWyC4wdpEk2IwjoYSzdrlrLWfqelD0xyE6io
qCj8RMAoPcwSXYy5ncJFFCogkUaHoR7MMGtqTKpKZKgCBAW4tenqHAg4xKfQVvCGIaSPC7wBGtbc
y+BdsNvfuXNnCt9D44emEydOtAkrR2k1Q3RBJlKmVhJtJpEGALLr68APgMDV1SAowK1dXz8G1Owa
L5OYIjonBMPEmnvAJ5q4RWHtMMucTufUgIBp6dKl9yigcc0LVV/lUHdZ6ZXYzJRjh/a/d3DvO8cO
fxh96sD1vNMDkoLB9gJABFDAHRsyAWUSwfSeEJC55hfWLpdWcAqTFyxYwLLs1IC+/fbblStX3iWV
+Tkxl86f2em340hgwOmTxxMS4hLiY69cvnjh/LnExNj4szEf7fmj31sv79m549Cn78WeDigriFP0
lLnS6KHk3eX8utycc+EnQz71/+Ct7a+/mJ+fP+Uhg5MlHIDgzLto0SI/P7+cnJyqqio+ny8QCEQi
UXNzMxTa2tog8RsaGpqamqA2NDQ0KirK399/zpw5cLzcsMFrXJDCPj4+R48ezczMFAqFMplMo9Hc
v39/Cg5B06+//hrOcjRNw+6BoqjBYEDGQq/Xj4yM6MZi/CGGYdDGbrdTFAXtYSwYhrFYLI6HAVXQ
AMfx8ZYkSYI90L87QNC71WolxgIK0Nf4W+GVUAX9QsCXDSwq8B//47GAh7AxjwdUQQPI4onGcI6G
lJga0LT8+uRGJ5P/2OBGpz/mT34Gmsy9nx36v3PoX1H4mIUGLCOSAAAAAElFTkSuQmCC

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://sqoop.apache.org/docs/1.4.4/images/warning.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACopJREFU
WEfNmWlUVOcZx598az/1NB96ek4/JHY56eLxWDUmSjQeI/FESVxSl6ClptYNCdZjoknVQIQg1TRa
tyJS2RQHZRsWEQUXQBxAYURgZpgBZoa5M3Nnu7OAJq1L/8ON15c7AzPxU9/zP5zLMPfe37O8z/O+
Ly88efKE/q8GgKIZjx8/fvTo0X+fjv9EPcQ7cC+eEM2LKJov4VlOpzM+Pn7VqlV/GB3vRz1WrlzZ
2Njo8XhgQjRMkYHwFJfLtXXr1p6eHpEen4QdcEPosFgsa9asqaqqstls3377bUSmCEAizcaNG61W
63PQgO/hw4dDQ0MJCQlgwkMiMk0EBBqO45KSkkQaySvffPPNA2bcfzqkdJH8BBppIHbRMI0LJPmG
dQxQ3G63Vqu993T09fUNMMNoNDpGB74GFOSNBAQ/rV69WqlUTuyn8ECibxAp1jEjIyN4df3Jk9VE
0aj7889ZD+EaLly7dm1dXd0ETGGApEixNMPDw7C+/IsvqogkRcTqTkmRmKSSsWTJkgmY5EAizebN
m2W+GRwcLN27V0nEqpIoorpSUyUU6QKxq62tDeunMUCgMZvNiYmJ7KxGpDDhlWlpFUTPIRhwd9eu
UKb33nuvoaEhlOkZECDw4m3btrE0iBTSturLL8uIQnWI6GWiF0Y7TyxRJtE5ovJwUu/ZwzKJdX7Z
smWhfvoOCBAISnJyssw3oClPSSkhYnWUaP6oXiH6es8mp1nvdfP5R9J+SjSb6C2iDURniUrHqmP3
bjDJWs6KFStkfgoCAUKv12/fvj00UqA5T3SB0QGiHxO1Xr9YWZwLxygVOcMBv+C0N9ecOZKSrFHf
Muo1H2/58yKiwrFmwKQ727fLgEwmkyx2QaD+/n6ZbxApjUaDSCmIiscqhqhP3TwS8Nstg5mfbamv
VPjcDnu/+royuzDrgNvB+QUXb9J+MO8XyaM3wh5Wdz79VMaE2o15h9iJvSUI9Oqrr8p8o1ara/bt
Q0LIBD4AmXTqgOAyadpzDuxqKM8VnBynUzVWnCrO+RowAj/Ur246+NnaHxH9GjEdfQhulNS+c6fI
hNeLw2AwzJ49W6VSoQcHgdC52bYA34AGSRBWyBJzX6eLM+huVZ1I2dRQdkpwWDhNS7My53z2QcFl
5wfvVeVlVl/IdfHc1ZrSnxP9g6horG3tn3wi0eDC7/fHxsaWlJQggmOAQN3d3V2dmnqGaDzNIuIM
ateQTnuz4vjedfUlWaNAN5uVJxUnMjwOKz+grj131G42+AQPfu7/aH1qONvadu+WmESg/Px8pPIY
IHRJ9Kl8ooLxJQI5zVpNU/mRz+LrFMcE3sz1Nt0oO150PA1AyKdrZTnOIb3HaTdqO/ckr90xmuCs
RGsRFpFJBMrNzcWkfgaEFi0C5RFNoNeJLIa7zqE+TUvlsZQPAeS2m8xdN66WHC08kurmOZuhMztt
C/LaxQ32ttUnJ8RuJ4KRrESDJSCfzycHEhcMItBpIlaY3KwAZNaph/o6e1qqS06m1xdndbdeVTdV
VuQeKDqW7rSaOL36RMoGu0nrtBh6VLVJa+f/dRwLRSCsICIA/ZtoAr2GWabtMPW2ae9cb7lUprpS
cateebvxYn1FUXFWZmfTRXOv6lT6Nt6kQ+L3BoFiMf9lRoq/Agg0kYFOEUk6QfQl0d+I9hClEGUR
BYF0nYLT6vc4A173sF8YDngDPsHrcdk5o6ajpaOpJitjh82k5c3a7ls1ifFvfkSUw0iyNlqgk0SS
/ojYp6fk/evwgfS98XNnLiD6GZFe3eS2DQq2fr/LEhD4EZ/nfsB7fzgwDC6Xw2zorcg/NtDdyuk7
ulqqAJTEWMhaGxkIjR1FCG6QhOI20HPX7/X4BDcioPhqH/pXdW6msavJrr/t4foE3uh3WYe9rvsB
34ORwLDfi8LNm/TGey369st3rl1Yt+i3AGKNlK4jAGElJQIhTJJ+R9RcW+lxO2G8X0BNNnYqzyQu
BNO+3psVNsMdj63f5+R8Lh7hg5OgkYAX3cNjHbDqb9+uL163aFIiYyFrrQTk9Xrls0xc14lAx4gk
/QVtNf+UgzP6XHa0dMHtdHCDzVW5h3e+f+jj9zWqi7aBe17e7HPZ0ExA82Bk+H7Aj/QSrAa7oaPt
siIhbtIWouOMJGtFIGwXIgAdIRKFZcZXRNOxwmptRFFBRfa6bF63E37SttXlpG/YlTCzKu8gqgD+
5Pc4RgK++8P+gM8j8Ca3RcNpVY1Vp1fPp82Mhay1ABI3L+MCoQ7BQ/8kYoXHHdyRZDP0uLgBNE6v
k/O6eAdn0qhq7lwu6Gqq6G1t4AY0PjePsGLS4cJjNaCBDKqvXT5/bPWbtOmphZKp4kVkIERNp9Nh
HcgKrXEyFvZ5WRbDPZQWWO+Fq5xWt33I1N1i6Lhq1rTyRg0aCFLH53EgWA5Tt/Fek/pG2YWTqStf
I4RMZqT4a2QgrOh4nj+/cCEgWKE7/p7oWrWCN/Z4RCbeHIyLzcQb1DZDh8PUI9hNKE6CbdBh6rVo
27StlxqVpwu+2pH0On081kLR2htJSRGAxDUvajnW+UULFiB7WKH8v4Ql39Vym77Djdlu6xeseoHT
CZzGPdSLjIFjUAWw9rBo2w0dDTer8itz9+dnbN74YrCiyiysX78e0ZB2v4IgjJlly5cvl+0KsIY8
+9ZbWK2y+pRoElFDabZN1+Y0drmHejyW3lFpPEO9LnOPrb8TmaVrr7tZU1CanVaevXfJS/Th6ENY
25SLF4utUwRC4gJo4cKFz7r9ggULQrcpYFLMn/93IknYVOwi+g3RnBdJo6rGoozvv20ztHF97WaN
ynC3sVt16XbDhVrFoaIjO88dSl72S3pntPOwD6lLSECkRBrpUECcZVgPYekYXH5g1x0XFyfbpqBC
4M+F8+btJ2KVTrSe6CeYJqmJuraLA+oGVKOOq6WqS0XNylOXzxxUHE4+nb4ujmg50b7RvZGk8sWL
Q2lwSjBjxoz09HRs+0ESBAoEAvh06dKlodsUMBXMnQsrWaURoRvgfX96mX449jjwB0S/IoonQkXF
VMhgVBYXJ9JIjsEFjiWwmk5LS1MoFGAASRAIX8KKpKurCzsSrGpluwIcMOTOmQPHPJ9ES0oXLQIN
EllGM23aNJEGbwcDvvDdRlFievfdd0O3KUE/zZkD/0cpuJBVyTvviJsIlgb+CKUJnsBKZ4wSE/JJ
8pO0DsdqNzcmBlFg9QVRRKGqhdLAH7NmzZL5RiQZc9jAMrW1tbE7FVxj3uXHxKCoRK/i2NiwNPBN
RkYGGynJL/LjGDZ2OBCSMSEHz8TE7CWKRmffeCOUpr6+fvr06WF9E8ZD4kcSE3a4V65ckZjE9S9G
2NPWsB/Kshjnw1OnTp2ARh6y0HzCvAOThCK7YI8+Zdds/orXoEG9GS9S44YslAknJoWFhaFM49GE
ouATpMvEkYoMxMYOZ/jnzp1DnZAGin3Yga4kG/haeXn5zJkzI/pm3BySYFmmt99+G+F/5fuPKVOm
TJ48OTMzM+ycYt8VFZDEhDqGXlNQUJCXl4e2/L0G7sK9eIJYi0Mh2E8i/69DZEKXwX8tULJxQIEi
+b0G7sK9eAKeMzEN/vo/qlYSUg+t4IgAAAAASUVORK5CYII=

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://sqoop.apache.org/docs/1.4.4/images/important.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACd9JREFU
WEfNmWlQVUcWx5ssJhbGGLYErCQKCQWUfogVzaIfEk1IiCAgBK0KIxIfsgybKET2oMiiMipGETcE
BuEhYIhDubxyq6jgviDuinGJ46jJuOvo6Pwejdfr23xYmaqcemVdb/c9/e9z/mfpxubhw4fiTyUA
+lOJeDY0Dx48+G+H3Lt37z8q4b+8ZPTZ1Ord1dUvJZRL7e266dMXBQYmCiF/Wb17l/r7bykru3bt
2p07d54ZWRcAKVBq4+IUHMYP8U5OS5KSLl68ePv2bWB11VrWAkIv2tcVFlqAIocShBgvRLSj4+ba
2qtXr2KtLjnRKkDSRzMHDVKj+asQER1rxz7ymno0Roi/CPFjUdHly5dv3bplvameDgg0F0+ehCLq
9aKEGCNElIPDVH//BampFTk5c318mDDhueeUadEdc6Z/9tmFCxdu3LhhJaanADJGg0c0QoTb2RVp
NJs3b25tbW1vbz/dIa3btlXHx+e8/XZy9+4SlsRdOHTouXPnIDvh+FRKWQJkjAZHhAqRPnw4UI4e
PfqLKTm8cyfhluXsLK0lMeV/+umZM2eswWQWkEk0GGZxQcHu3buxBwtYkIqxY3P69El68UWJKUyI
xXFxZ8+evX79umXfmQaEYTHvwoAAhRDYRmNvX1dZefz4cfRaIz9XVGQ/Yh6YxgpRV1Bw/vx5+HT/
/n1zvjMBSEa4NjZWQUMcjXdwWFFefvDgQdhgvTRMnpz62mtSz7dCxNjZNet0MkXhAZM52RAQaIB/
eONGBQ0sZnPFycnwl/11Vaqjoia9/DLa4jocl+bhceTIkStXrty9e9ekkQwBAZxUpg5ydjYzImLX
rl2/mpKsrCxfX19vb+/U1FTjcQL++L59swcPlmTC7xB8QXT0qVOnyJkmyfQEIOms1Xl5inkihUjy
9Ny0aRMsRruBJCcnR0VFBQQEeHh4dO/ePTIyUpnwT5Xs1+m+f+utRBsb1JJI2eHmpibQ37x50ziJ
PwGI4V+PHVPQYGSy7aqamra2NvUCyrOfn19wcHCvXr2UhoohKGIsP6alpdnbS80QIMXdHZ0kcWPH
PQYkI6s6JkYBxJf5wcEEuck1eDlmzJgBAwYoaHj4lxm5dOnSrI8+SnrhBZRj9XAhVpaUkFHJTAaO
ewwILp8/elSd+CmQLS0tRLjJVYi4sLAwLy8vNaD9+/eztklpXb+ezITjZJRMcHPbu3cvu5LVV4m4
TkCYB+upzcMmSmJjDxw4YG4BIiUkJKRPnz5qQHjBgpT6+qY7OEh2E3Ha4uITJ04YsLsTkIF5SDwU
zubmZoLc3AIACg0NNQDESwvSqtNR6ZS0lOjqCh+gnTot6QFJ9vxj6lTFX/QVxdHR8M6c9t86ZNq0
af369VMsNHDgQPnegiweOXLiSy+xEN0LKcDYSHpAuJAIzHBxkYD05nF03LJlCw42Vv27ShYsWDBi
xAgbGxuJKSYmRj1q8vnQxo1KPYEVKe+/L4MGJsk8KWTuwZiKecbRMISEQE8Djf82kq1bt44ePdrZ
2VkC0ul0xnOM3ywJClKMBJM2bNhAnqToygKnBwS6qqgoCYjcgyXX1NdTsBRd8M6kELSkIkmj3r17
m5tm8H5HTc33b74pl8NIcxISKEpwQ3ZLAn9RfjOcneUMynJa//579uxRtLCqBcFrnp6e3bp1y8vL
szxTPZr77rsptrYsB1knvffetm3biB5JbYG/fmlrU/wF5NKEhEOHDvE9ZrRGRo0aFRQUZM1MZc7f
w8JkuEFtctLatWuJf1bEa4L0s2nRIsVfOPXnNWtgGWb7fwjRg7RUVmIk2VIC6G8dCY/8gtcER4KK
iAgJiLY8xtGRMfnZHysspBZoJKsb5TZr5EhyHuUWrwnM8MNXX0lAeDR76FBKjMHH5v5L7k9MTBw2
bFhgYCD9iblpLGMsVeHhGa+/zqJk7dh+/davX09DARgBeYu//FIB9ENsLLnHpArjl/QbRJmLi0uP
Hj0GDx5sPIH4NSeNKSkcBGTai/byampqOnbsGGAEyWbOF18oQViVn49eC4rUQ/3791eSEJFv8BXs
tCC7tFrJa2pteM+eDQ0NVGvACOwx29tbATR99GjLitSjPj4+9vb2MitiIWVIfR9i7nm3VjvV1fWx
Iaqq9u3bB68FGUkBBIdiPT3hsjUamQOHhgwZItHwzBuSiJWCy6b07SsBaVxcKioqqCF0FnoLVaek
yIF4IUKEaFq2rEuqJQJSSJdk9scfyyjTH7Dc3ZcvX94JiPqwqaZGSYxk6iAhajMzrdcub66sl1PN
zWVff535xhtyUVrspM8/12q12FjvMvIjZ79sT08FE3biR01uSEy8fPq0hZUoPV2SPVptqY9PnofH
d6+8IpcjxPQH7YyMlStX0u3oSQ1jaFLXNTRMsrNTMKkfZn3wwYaiovaWFvXa1t+7/XbmzP6GhuXj
xnHwmObuzr/qqwgOEQl+fvPnz1+3bp2sHvrSgaHIzrVLl058dMo0QDbh+ecznJymurktDQqqi4vb
Wlra+tNPBxobfz93zgAZL+WvWqOpGT+eOOIryEsOpHmVtYI4xzBjO7rYBF/fwsLC6urq7du3d2Zq
uEJ+5NqA5I0jMz/5xKSdlJcTu3Wb/OqrMCDd0dHCDwRpdnb6M2vHcUxxEIEMDkr4t05OE0ND8/Pz
y8rKSNNkRfylr2Wyf4XadEk0XCtWrJidm5vm4zOhZ0/LyKwZlcYgUMCBScBB9xft5jbxm2848hYV
FZWXl9PWwR4ONp3th2xhSbIABNOOHTvI4swrLi7OiY5O/vDDxEet7VMREAosTxhTL0EgjQEOQETY
2oJjgp8fJ+6cnJyZM2cuXLiwrq6Oe6bDhw/TXEDlzo5RkgBMkIlSQqMEXkwFLHIDn82aNYvmK0Oj
+Y7+fNCgyHfeCe/bd6ytLds1+Elf8NO4uvKLdHOLHz58kr8/p1bskZubO2PGjHnz5rFbYorOlTin
kMtLSOWC5omTK/kNpORu4o47ip07d/LZqlWr4NayZctKS0vnzp2LUvBNmTIlOzs7IyODxdi0lPT0
9MzMTNbGBixfUFCAJebMmVNSUrJkyRK2Bw6iif5QXgRiGMIKQ6hP+IaXDYxBKWDhQU5MtASYlK1A
ea4caO3AV19fD8Sqqir2CiWXPilAr6ysJHDwSGNj4+rVq+EsZxj6E8rnyZMncQJ7pnuU9+sGlzKm
L6zk3wz4gACE71iVaw0uFFGH5dBLIWQBCMdZG6xqIYAxLXsgldAKk3XZFSCgLWUKHJCXPUsfGV8R
mb1jlLOVv2YADrOhDp5hPCCyADY3vhXhJUNMwAxsBqfwISBwjSx5lu/Rn35PLY+2EhzqZCmV7YC5
RkWOKkVXIjB5X2ac8f8HA74K8I0SaJkAAAAASUVORK5CYII=

------=_NextPart_000_0007_01D0C30C.118E32A0
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://sqoop.apache.org/docs/1.4.4/docbook.css

body address {
	margin: 0.6em 0px; line-height: 1.3;
}
body blockquote {
	line-height: 1.5; margin-top: 0.75em; margin-bottom: 0.75em;
}
html body {
	margin: 1em 4%; line-height: 1.2; font-family: verdana;
}
a {
	color: rgb(28, 132, 191); text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
a:visited {
	color: rgb(89, 126, 147);
}
div.titlepage .title {
	font-size: 26px;
}
.LEGALNOTICE {
	font-size: small; font-variant: small-caps;
}
body div {
	margin: 0px;
}
dl {
	margin: 0.8em 0px; line-height: 1.2;
}
body form {
	margin: 0.6em 0px;
}
h1 {
	color: rgb(20, 139, 207);
}
h2 {
	color: rgb(20, 139, 207);
}
h3 {
	color: rgb(20, 139, 207);
}
h4 {
	color: rgb(20, 139, 207);
}
h5 {
	color: rgb(20, 139, 207);
}
h6 {
	color: rgb(20, 139, 207);
}
div.EXAMPLE p b {
	color: rgb(20, 139, 207);
}
.QUESTION {
	color: rgb(20, 139, 207);
}
div.TABLE p b {
	color: rgb(20, 139, 207);
}
div.PROCEDURE p b {
	color: rgb(20, 139, 207);
}
body h1 {
	line-height: 1.3; margin-left: 0px;
}
body h2 {
	line-height: 1.3; margin-left: 0px;
}
body h3 {
	line-height: 1.3; margin-left: 0px;
}
body h4 {
	line-height: 1.3; margin-left: 0px;
}
body h5 {
	line-height: 1.3; margin-left: 0px;
}
body h6 {
	line-height: 1.3; margin-left: 0px;
}
body h1 {
	margin: 6px 0px 0px;
}
h2 {
	margin: 6px 0px 0px;
}
h3 {
	margin: 6px 0px 0px;
}
h4 {
	margin: 6px 0px 0px;
}
h5 {
	margin: 6px 0px 0px;
}
h6 {
	margin: 6px 0px 0px;
}
body hr {
	border-width: 0px 0px 1px; border-style: solid; border-color: rgb(0, =
104, 187);
}
body img.NAVHEADER {
	margin: 0px 0px 0px -4%;
}
ol {
	margin: 0px 0px 0px 5%; line-height: 1.2;
}
body pre {
	margin: 0.75em 0px; line-height: 1; font-family: monospace;
}
body td {
	line-height: 1.2;
}
body th {
	line-height: 1.2;
}
ul {
	margin: 0px 0px 0px 5%; line-height: 1.2;
}
body dir {
	margin: 0px 0px 0px 5%; line-height: 1.2;
}
body menu {
	margin: 0px 0px 0px 5%; line-height: 1.2;
}
html {
	margin: 0px; padding: 0px;
}
body p b.APPLICATION {
	color: rgb(0, 0, 0);
}
.navfooter td {
	color: rgb(0, 122, 0); font-family: monospace;
}
.literal {
	color: rgb(0, 122, 0); font-family: monospace;
}
.FILENAME {
	color: rgb(0, 122, 0); font-family: monospace;
}
.GUIMENU {
	font-weight: bold;
}
.GUIMENUITEM {
	font-weight: bold;
}
.GUISUBMENU {
	font-weight: bold;
}
.GUILABEL {
	font-weight: bold;
}
.INTERFACE {
	font-weight: bold;
}
.SHORTCUT {
	font-weight: bold;
}
.SHORTCUT .KEYCAP {
	font-weight: bold;
}
.GUIBUTTON {
	padding: 2px; background-color: rgb(207, 207, 207);
}
.ACCEL {
	text-decoration: underline; background-color: rgb(240, 240, 240);
}
.PROGRAMLISTING {
	padding: 1ex; border: 1px solid rgb(204, 204, 204); background-color: =
rgb(238, 238, 238);
}
.NOTE {
	background: rgb(255, 255, 255); padding: 0.4em; border: 1px solid =
rgb(204, 204, 204); color: rgb(34, 34, 34);
}
.SCREEN {
	background: rgb(255, 255, 255); padding: 0.4em; border: 1px solid =
rgb(204, 204, 204); color: rgb(34, 34, 34);
}
.SCREEN {
	background: rgb(238, 238, 238);
}
.TIP {
	background: rgb(255, 255, 255); padding: 0.4em; border: 1px solid =
green; color: rgb(0, 79, 0);
}
table.CDH {
	padding: 0px 0px 8px;
}
table.CDH th {
	background: rgb(237, 242, 249); padding: 2px 8px 1px; =
border-right-color: rgb(173, 182, 205); border-bottom-color: rgb(173, =
182, 205); border-right-width: 0.5pt; border-bottom-width: 0.5pt; =
border-right-style: solid; border-bottom-style: solid;
}
table.CDH td {
	font-size: 12px;
}
div.breadcrumbs {
	background: rgb(237, 242, 249); padding: 0.6em; font-size: small; =
border-top-color: rgb(0, 104, 187); border-top-width: 2px; =
border-top-style: solid;
}
span.breadcrumb-node {
	font-style: italic;
}
div.footer-text {
	background: rgb(237, 242, 249); padding: 0.2em; text-align: center; =
font-size: small; border-bottom-color: rgb(0, 104, 187); =
border-bottom-width: 2px; border-bottom-style: solid;
}
.IMPORTANT {
	border-width: 1px 1px 1px 12px; border-style: solid; border-color: =
rgb(170, 0, 0) rgb(170, 0, 0) rgb(170, 0, 0) rgb(204, 0, 0); padding: =
0.1em 1em; font-style: italic;
}
.caution {
	border-width: 1px 1px 1px 12px; border-style: solid; border-color: =
rgb(170, 0, 0) rgb(170, 0, 0) rgb(170, 0, 0) rgb(204, 0, 0); padding: =
0.1em 1em; font-style: italic;
}
.WARNING {
	background: rgb(255, 255, 255); padding: 0.4em; border: 1px solid =
rgb(229, 149, 149); width: 85%; color: rgb(159, 19, 19);
}
.EXAMPLE {
	width: 100%;
}
.TIP {
	margin: 4px 0px;
}
.NOTE {
	margin: 4px 0px;
}
.caution {
	margin: 4px 0px;
}
img {
	border: 0px currentColor;
}

------=_NextPart_000_0007_01D0C30C.118E32A0--
